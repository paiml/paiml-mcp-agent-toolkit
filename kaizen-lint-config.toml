# Kaizen Lint Configuration - Poka-yoke (Error Prevention)
# Toyota Way: Build quality in through systematic prevention

[lint]
# Jidoka - Stop and fix problems immediately
warnings_as_errors = true
max_warnings = 0  # Zero tolerance for warnings

# Clippy configuration for continuous improvement
clippy_args = [
    "-W", "clippy::all",
    "-W", "clippy::pedantic", 
    "-W", "clippy::nursery",
    "-W", "clippy::cargo",
    "-A", "clippy::missing_errors_doc",  # Allow for internal APIs
    "-A", "clippy::missing_panics_doc",  # Allow for internal APIs
    "-A", "clippy::module_name_repetitions",  # Common in Rust
]

# Rustfmt configuration for consistent style
[rustfmt]
edition = "2021"
max_width = 100
tab_spaces = 4
newline_style = "Unix"
use_small_heuristics = "Default"
fn_call_width = 80
attr_fn_like_width = 80
struct_lit_width = 80
struct_variant_width = 80
array_width = 80
chain_width = 80
single_line_if_else_max_width = 80

# Kaizen improvement tracking
[kaizen]
track_lint_performance = true
auto_fix_suggestions = true
generate_improvement_reports = true

# Poka-yoke prevention rules
[prevention]
# Prevent common issues before they occur
check_unused_imports = true
check_dead_code = true
check_format_strings = true
check_spelling = true

# CI/CD integration
[ci]
# Run linting in CI with strict mode
strict_mode = true
fail_fast = true
cache_dependencies = true

# Pre-commit hooks configuration
[hooks]
pre_commit = [
    "cargo fmt --check",
    "cargo clippy --all-targets --all-features -- -D warnings",
    "cargo test --lib --quiet",
]

pre_push = [
    "cargo clippy --all-targets --all-features -- -D warnings",
    "cargo test --all --quiet",
    "cargo check --all-targets --all-features",
]

# Quality gates
[quality_gates]
max_complexity = 10
max_function_length = 50
max_file_length = 1000
min_test_coverage = 80