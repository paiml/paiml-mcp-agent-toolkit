{
  "files": [
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "detect_execution_mode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 6,
            "lines": 8,
            "nesting_max": 4
          },
          "name": "init_tracing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "main"
        }
      ],
      "path": "./src/bin/pmat.rs",
      "total_complexity": {
        "cognitive": 17,
        "cyclomatic": 14,
        "lines": 26,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliApiTrace"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "CliDemoAdapter::execute_context_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::generate_cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::create_api_trace"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::decode_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::encode_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliDemoAdapter::get_protocol_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "CliDemoAdapter::execute_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "CliRequest::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "Value::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_cli_adapter_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_cli_request_from_value"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_cache_key_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_api_trace_creation"
        }
      ],
      "path": "./src/demo/adapters/cli.rs",
      "total_complexity": {
        "cognitive": 16,
        "cyclomatic": 16,
        "lines": 112,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/demo/adapters/mod.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpRequestInfo"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpEndpoint"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpParameter"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::handle_analyze_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "HttpDemoAdapter::handle_status_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "HttpDemoAdapter::handle_results_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::handle_api_introspection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::execute_context_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::decode_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::encode_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpDemoAdapter::get_protocol_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "HttpDemoAdapter::execute_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "HttpRequest::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "Value::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_http_adapter_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_http_request_from_value"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_api_introspection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_context_analysis"
        }
      ],
      "path": "./src/demo/adapters/http.rs",
      "total_complexity": {
        "cognitive": 41,
        "cyclomatic": 41,
        "lines": 147,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpDemoAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpError"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoAnalyzeParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoAnalyzeResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoGetResultsParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoGetApiTraceParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpTrace"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "McpDemoError::to_mcp_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpDemoAdapter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "McpDemoAdapter::handle_demo_analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "McpDemoAdapter::handle_demo_get_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "McpDemoAdapter::handle_demo_get_api_trace"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "McpDemoAdapter::execute_context_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpDemoAdapter::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "McpDemoAdapter::decode_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "McpDemoAdapter::encode_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpDemoAdapter::get_protocol_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "McpDemoAdapter::execute_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpRequest::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "Value::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_mcp_adapter_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_mcp_request_from_value"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_demo_analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_unknown_method"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_error_conversion"
        }
      ],
      "path": "./src/demo/adapters/mcp.rs",
      "total_complexity": {
        "cognitive": 72,
        "cyclomatic": 72,
        "lines": 144,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoAnalyzer"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProtocolTrace"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoArgs"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "run_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "load_demo_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "create_analyzer"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "run_analyses"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "generate_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 9,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "handle_protocol_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "build_protocol_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "format_and_print_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "print_api_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "run_all_protocols"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "run_single_protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "protocol_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "print_protocol_banner"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 31,
            "cyclomatic": 13,
            "lines": 16,
            "nesting_max": 6
          },
          "name": "extract_analysis_from_demo_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "parse_dag_data"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 37,
            "nesting_max": 2
          },
          "name": "run_web_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 10,
            "nesting_max": 3
          },
          "name": "analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "analyze_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "analyze_system_architecture"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 25,
            "nesting_max": 4
          },
          "name": "analyze_defect_probability"
        }
      ],
      "path": "./src/demo/mod.rs",
      "total_complexity": {
        "cognitive": 110,
        "cyclomatic": 82,
        "lines": 167,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Router"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "Router::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "Router::route"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "Router::handle"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "build_router"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "handle_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "handle_request"
        }
      ],
      "path": "./src/demo/router.rs",
      "total_complexity": {
        "cognitive": 8,
        "cyclomatic": 8,
        "lines": 21,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ExportReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnFile"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MarkdownExporter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "JsonExporter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SarifExporter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ExportService"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 29,
            "nesting_max": 2
          },
          "name": "MarkdownExporter::export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MarkdownExporter::file_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonExporter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "JsonExporter::export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonExporter::file_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "SarifExporter::export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SarifExporter::file_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "ExportService::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ExportService::export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "ExportService::save_to_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ExportService::supported_formats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ExportService::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_export_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "create_full_export_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_markdown_export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_json_export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_export_service"
        }
      ],
      "path": "./src/demo/export.rs",
      "total_complexity": {
        "cognitive": 25,
        "cyclomatic": 25,
        "lines": 130,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProtocolMetadata"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoEngine"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ContextCache"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheEntry"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalysisResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TraceStore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ApiTrace"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TimingInfo"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "BoxedError"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProtocolWrapper"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "BoxedError::fmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "BoxedError::source"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "BoxedError::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "BoxedError::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "BoxedError::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "BoxedError::from_box"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoEngine::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoEngine::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoEngine::with_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "DemoEngine::register_protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoEngine::list_protocols"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DemoEngine::get_protocol_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 19,
            "nesting_max": 0
          },
          "name": "DemoEngine::execute_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoEngine::get_trace"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoEngine::get_all_traces"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ContextCache::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ContextCache::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "ContextCache::insert"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "ContextCache::evict_if_needed"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TraceStore::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "TraceStore::add_trace"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TraceStore::get_trace"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "TraceStore::get_all_traces"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ProtocolWrapper::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ProtocolWrapper::decode_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ProtocolWrapper::encode_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ProtocolWrapper::get_protocol_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "ProtocolWrapper::execute_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_demo_engine_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_context_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_trace_store"
        }
      ],
      "path": "./src/demo/protocol_harness.rs",
      "total_complexity": {
        "cognitive": 28,
        "cyclomatic": 28,
        "lines": 153,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DisplayConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PanelConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DependencyPanelConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityPanelConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnPanelConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ContextPanelConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ExportConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PerformanceConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ConfigManager"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DisplayConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "ConfigManager::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "ConfigManager::load_from_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "ConfigManager::load"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 9,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "ConfigManager::watch"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::subscribe"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_dependency_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_complexity_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_churn_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_context_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_export_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::get_performance_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PanelConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ConfigManager::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_default_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_load_from_yaml"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_config_manager"
        }
      ],
      "path": "./src/demo/config.rs",
      "total_complexity": {
        "cognitive": 34,
        "cyclomatic": 24,
        "lines": 90,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoContent"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Hotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoState"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalysisResults"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "LocalDemoServer"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MinimalRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HotspotEntry"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LocalDemoServer::spawn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "LocalDemoServer::spawn_with_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LocalDemoServer::spawn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LocalDemoServer::spawn_with_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LocalDemoServer::port"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LocalDemoServer::shutdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "handle_connection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "parse_minimal_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 17,
            "nesting_max": 1
          },
          "name": "serialize_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "serve_dashboard"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "serve_static_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_static_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_architecture_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_defect_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_statistics_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_system_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_analysis_stream"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "calculate_graph_density"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "calculate_avg_degree"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_analysis_data"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "serve_summary_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "serve_metrics_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "serve_hotspots_table"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "serve_dag_mermaid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "serve_system_diagram_mermaid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "serve_architecture_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "serve_defect_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "serve_statistics_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_system_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_analysis_stream"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 6,
            "lines": 18,
            "nesting_max": 2
          },
          "name": "serve_analysis_data"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "calculate_graph_density"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "calculate_avg_degree"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "DemoContent::from_analysis_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "spawn_sync"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityReport::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CodeChurnAnalysis::default"
        }
      ],
      "path": "./src/demo/server.rs",
      "total_complexity": {
        "cognitive": 37,
        "cyclomatic": 34,
        "lines": 168,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoRunner"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoStep"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Component"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoRunner::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 13,
            "lines": 29,
            "nesting_max": 2
          },
          "name": "DemoRunner::clone_and_prepare"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "DemoRunner::generate_system_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 20,
            "nesting_max": 0
          },
          "name": "DemoRunner::render_system_mermaid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "DemoRunner::create_demo_step"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoRunner::execute"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 14,
            "lines": 27,
            "nesting_max": 2
          },
          "name": "DemoRunner::execute_with_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "DemoRunner::demo_context_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 4,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "DemoRunner::demo_complexity_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 5,
            "lines": 16,
            "nesting_max": 5
          },
          "name": "DemoRunner::demo_dag_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 4,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "DemoRunner::demo_churn_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 5,
            "lines": 16,
            "nesting_max": 5
          },
          "name": "DemoRunner::demo_system_architecture"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 4,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "DemoRunner::demo_defect_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "DemoRunner::demo_template_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoRunner::build_mcp_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "DemoReport::render"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 24,
            "nesting_max": 2
          },
          "name": "DemoReport::render_cli"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 28,
            "cyclomatic": 19,
            "lines": 18,
            "nesting_max": 4
          },
          "name": "DemoReport::render_step_highlights"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "resolve_repository"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "resolve_repo_spec"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 23,
            "cyclomatic": 22,
            "lines": 35,
            "nesting_max": 2
          },
          "name": "detect_repository"
        }
      ],
      "path": "./src/demo/runner.rs",
      "total_complexity": {
        "cognitive": 255,
        "cyclomatic": 184,
        "lines": 528,
        "nesting_max": 5
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "EmbeddedAsset"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "get_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "get_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "decompress_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "get_asset_hash"
        }
      ],
      "path": "./src/demo/assets.rs",
      "total_complexity": {
        "cognitive": 3,
        "cyclomatic": 3,
        "lines": 19,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/demo/templates.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 20,
            "nesting_max": 0
          },
          "name": "test_handle_prompts_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_handle_prompt_get_rust_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_handle_prompt_get_deno_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_handle_prompt_get_python_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_handle_prompt_get_missing_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_handle_prompt_get_invalid_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_handle_prompt_get_unknown_prompt"
        }
      ],
      "path": "./src/tests/prompts.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 82,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_validate_params_all_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_validate_params_missing_required"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_validate_params_unknown_parameter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_validate_params_type_validation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_expand_env_vars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_expand_env_vars_no_vars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_expand_env_vars_multiple_occurrences"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_generate_command_to_stdout"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_generate_command_to_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "test_list_command_json_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "test_search_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "test_validate_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_scaffold_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_context_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_parse_key_val"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_value_type_inference"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_table_formatting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_json_output_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_yaml_output_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_missing_required_params_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_multiple_validation_errors"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "test_cli_parameter_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_template_uri_patterns"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_toolchain_names"
        }
      ],
      "path": "./src/tests/cli_tests.rs",
      "total_complexity": {
        "cognitive": 8,
        "cyclomatic": 6,
        "lines": 135,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "binary_size_regression"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "feature_size_impact"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "template_compression_works"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "startup_time_regression"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "memory_usage_baseline"
        }
      ],
      "path": "./src/tests/binary_size.rs",
      "total_complexity": {
        "cognitive": 3,
        "cyclomatic": 3,
        "lines": 35,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 35,
            "nesting_max": 1
          },
          "name": "test_analyze_python_file_comprehensive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_python_class_field_count"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_python_import_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_python_file_not_found"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_python_invalid_syntax"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 44,
            "nesting_max": 1
          },
          "name": "test_analyze_typescript_file_comprehensive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 28,
            "nesting_max": 1
          },
          "name": "test_analyze_javascript_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_typescript_class_field_count"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_tsx_file_detection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_jsx_file_detection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_typescript_file_not_found"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_typescript_invalid_syntax"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_mixed_language_project_context"
        }
      ],
      "path": "./src/tests/ast_e2e.rs",
      "total_complexity": {
        "cognitive": 17,
        "cyclomatic": 17,
        "lines": 200,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cli_run_generate_to_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_cli_generate_template_direct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_cli_list_templates_direct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_cli_search_templates_direct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_cli_validate_template_direct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_cli_scaffold_project_direct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_cli_context_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "test_cli_churn_analysis"
        }
      ],
      "path": "./src/tests/cli_integration_full.rs",
      "total_complexity": {
        "cognitive": 1,
        "cyclomatic": 1,
        "lines": 79,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 20,
            "cyclomatic": 12,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "test_analyze_churn_command_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 20,
            "cyclomatic": 12,
            "lines": 14,
            "nesting_max": 2
          },
          "name": "test_analyze_churn_with_all_options"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 23,
            "cyclomatic": 10,
            "lines": 5,
            "nesting_max": 3
          },
          "name": "test_analyze_churn_format_options"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_analyze_churn_invalid_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "test_analyze_churn_short_flags"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_analyze_subcommand_help"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_analyze_churn_help"
        }
      ],
      "path": "./src/tests/analyze_cli_tests.rs",
      "total_complexity": {
        "cognitive": 66,
        "cyclomatic": 37,
        "lines": 54,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_list_all_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_filter_templates_by_prefix"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_get_template_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_get_template_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_invalid_template_uri"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_template_categories"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_template_toolchains"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 3
          },
          "name": "test_template_parameter_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_rust_template_parameters"
        }
      ],
      "path": "./src/tests/template_resources.rs",
      "total_complexity": {
        "cognitive": 7,
        "cyclomatic": 6,
        "lines": 68,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_churn_output_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 16,
            "nesting_max": 0
          },
          "name": "test_cli_validate_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_additional_model_coverage"
        }
      ],
      "path": "./src/tests/additional_coverage.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 30,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_cache_config_default_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_cache_config_custom_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_cache_config_serialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_cache_stats_snapshot_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_cache_stats_snapshot_zero_requests"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_cache_stats_snapshot_serialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_cache_effectiveness_structure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_cache_effectiveness_serialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_cache_diagnostics_structure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_cache_stats_hit_rate_calculation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_cache_config_ttl_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cache_config_memory_settings"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_cache_config_git_settings"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_cache_config_warmup_patterns"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_cache_effectiveness_empty_caches"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_cache_diagnostics_empty_collections"
        }
      ],
      "path": "./src/tests/cache_comprehensive_tests.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 131,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_deep_context_config_default_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_deep_context_analyzer_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_discovery_simple_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_discovery_with_excludes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_metadata_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_quality_scorecard_calculations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_defect_summary_aggregation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_defect_hotspot_ranking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_prioritized_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_cross_language_references"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_template_provenance_tracking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_analysis_type_equality"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 13,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "test_enum_variants_complete"
        }
      ],
      "path": "./src/tests/deep_context_tests.rs",
      "total_complexity": {
        "cognitive": 13,
        "cyclomatic": 13,
        "lines": 116,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_generate_command_full_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_generate_command_aliases"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_generate_missing_required_args"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_scaffold_command_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_scaffold_template_delimiter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_scaffold_default_parallel"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 20,
            "cyclomatic": 9,
            "lines": 5,
            "nesting_max": 3
          },
          "name": "test_list_command_all_formats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_list_command_filters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_list_default_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_search_command_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_search_default_limit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_validate_command_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "test_context_command_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "test_context_formats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_context_default_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "test_analyze_churn_full_options"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "test_analyze_churn_all_formats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_analyze_complexity_full_options"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "test_analyze_complexity_formats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_analyze_dag_full_options"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "test_analyze_dag_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_parse_key_val_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_parse_key_val_edge_cases"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_validate_params_comprehensive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_expand_env_vars_complex"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_cli_error_scenarios"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "test_help_flags"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_version_flag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_mode_flag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "test_multiple_parameter_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 23,
            "cyclomatic": 10,
            "lines": 6,
            "nesting_max": 3
          },
          "name": "test_nested_subcommand_parsing"
        }
      ],
      "path": "./src/tests/cli_comprehensive_tests.rs",
      "total_complexity": {
        "cognitive": 116,
        "cyclomatic": 84,
        "lines": 219,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestAstCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestDagCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestChurnCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestGitStatsCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SmallCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestClearStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ShortTtlStrategy"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_session_cache_manager"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestAstCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestAstCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestAstCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestAstCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_template_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestDagCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestDagCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestDagCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestDagCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestChurnCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestChurnCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestChurnCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestChurnCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestGitStatsCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestGitStatsCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestGitStatsCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestGitStatsCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SmallCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SmallCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SmallCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SmallCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestClearStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestClearStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestClearStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestClearStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ShortTtlStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ShortTtlStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ShortTtlStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ShortTtlStrategy::max_size"
        }
      ],
      "path": "./src/tests/cache.rs",
      "total_complexity": {
        "cognitive": 2,
        "cyclomatic": 2,
        "lines": 144,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/tests/cli_property_tests.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "create_test_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_churn_score_calculation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_output_format_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_format_churn_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_format_churn_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_format_churn_csv"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_no_git_repository_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_parse_commit_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 23,
            "nesting_max": 0
          },
          "name": "test_multiple_commits_and_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_churn_score_edge_cases"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_empty_repository"
        }
      ],
      "path": "./src/tests/churn.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 106,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_snake_case_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_kebab_case_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_pascal_case_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_current_year_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_current_date_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_helper_error_handling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_empty_string_handling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_helper_with_non_string_parameter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_pascal_case_preserves_existing_capitalization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_year_and_date_helpers_consistency"
        }
      ],
      "path": "./src/tests/helpers.rs",
      "total_complexity": {
        "cognitive": 3,
        "cyclomatic": 3,
        "lines": 78,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_render_rust_cli_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_render_python_uv_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_render_deno_typescript_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_render_readme_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_render_gitignore_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_render_with_conditionals"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_render_with_missing_parameters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_render_with_nested_loops"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_render_with_string_helpers"
        }
      ],
      "path": "./src/tests/template_rendering.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 82,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_http_adapter_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_http_adapter_bind"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_http_output_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_http_context_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_http_context_with_no_remote_addr"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_http_context_with_no_user_agent"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_http_context_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_protocol_adapter_trait"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 2
          },
          "name": "test_http_status_code_variations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "test_http_response_with_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "test_http_error_responses"
        }
      ],
      "path": "./src/tests/http_adapter_tests.rs",
      "total_complexity": {
        "cognitive": 12,
        "cyclomatic": 10,
        "lines": 46,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_validate_params_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_expand_env_vars_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_output_format_enum"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_context_format_enum"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_commands_construction"
        }
      ],
      "path": "./src/tests/cli_simple_tests.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 15,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_template_error_display"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_template_not_found_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_not_found_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_render_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_validation_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_invalid_utf8_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_error_to_mcp_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_parameter_spec_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_parameter_spec_with_default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_error_debug_representation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 2
          },
          "name": "test_multiple_error_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_cache_error_from_anyhow"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_json_error_conversion"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_io_error_conversion"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_s3_error"
        }
      ],
      "path": "./src/tests/error_handling.rs",
      "total_complexity": {
        "cognitive": 3,
        "cyclomatic": 3,
        "lines": 60,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_handle_initialize"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_handle_list_tools"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 16,
            "nesting_max": 1
          },
          "name": "test_handle_list_resources"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_handle_call_tool_generate_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_handle_call_tool_invalid_tool"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_handle_call_tool_missing_parameters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_handle_invalid_method"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_protocol_version_default"
        }
      ],
      "path": "./src/tests/mcp_protocol.rs",
      "total_complexity": {
        "cognitive": 1,
        "cyclomatic": 1,
        "lines": 81,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_deep_context_config_default_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_deep_context_analyzer_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_metadata_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_quality_scorecard_calculations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_defect_summary_aggregation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_prioritized_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_cross_language_references"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_template_provenance_tracking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_analysis_type_equality"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 13,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "test_enum_variants_complete"
        }
      ],
      "path": "./src/tests/deep_context_simplified_tests.rs",
      "total_complexity": {
        "cognitive": 13,
        "cyclomatic": 13,
        "lines": 79,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_demo_runner_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_demo_step_structure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_demo_report_structure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_detect_repository_git_repo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_detect_repository_cargo_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_detect_repository_nodejs_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_detect_repository_python_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_detect_repository_pyproject_toml"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_detect_repository_with_readme"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_detect_repository_empty_directory"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_detect_repository_nonexistent_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_demo_report_rendering_cli"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_demo_report_rendering_mcp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_demo_step_error_handling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_demo_report_with_multiple_steps"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_demo_step_serialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_demo_report_serialization"
        }
      ],
      "path": "./src/tests/demo_comprehensive_tests.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 132,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "test_handle_resource_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_handle_resource_read_success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_handle_resource_read_missing_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_handle_resource_read_invalid_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_handle_resource_read_not_found"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_handle_resource_read_all_templates"
        }
      ],
      "path": "./src/tests/resources.rs",
      "total_complexity": {
        "cognitive": 2,
        "cyclomatic": 2,
        "lines": 63,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_template_not_found_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_invalid_uri_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_validation_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_render_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_not_found_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_s3_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_invalid_utf8_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cache_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_json_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_io_error"
        }
      ],
      "path": "./src/tests/error.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 35,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_cargo_build_has_single_correct_binary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_no_old_package_references"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_no_old_binary_references_in_workflows"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_correct_binary_name_in_workflows"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_no_wrong_repo_urls_in_workflows"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 19,
            "cyclomatic": 9,
            "lines": 10,
            "nesting_max": 3
          },
          "name": "test_workspace_aware_cargo_commands_in_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "test_cargo_lock_only_in_root"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "test_build_script_workspace_aware"
        }
      ],
      "path": "./src/tests/build_naming_validation.rs",
      "total_complexity": {
        "cognitive": 24,
        "cyclomatic": 14,
        "lines": 48,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_handle_tool_call_missing_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_handle_tool_call_invalid_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_list_templates_all"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_list_templates_by_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_list_templates_by_category"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_validate_template_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_validate_template_missing_required"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_validate_template_unknown_parameter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_validate_template_not_found"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "test_scaffold_project_rust"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_scaffold_project_deno"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_search_templates_by_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_search_templates_with_toolchain_filter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_search_templates_no_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_generate_template_invalid_arguments"
        }
      ],
      "path": "./src/tests/tools.rs",
      "total_complexity": {
        "cognitive": 5,
        "cyclomatic": 5,
        "lines": 118,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_template_server_new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_template_server_trait_implementation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_template_server_deprecated_methods"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_warm_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_template_server_cache_initialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_template_server_cache_sizes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_warm_cache_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_template_server_trait_via_methods"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_type_aliases"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "test_s3_client_instantiation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_run_mcp_server_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_public_exports"
        }
      ],
      "path": "./src/tests/lib.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 69,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GeneratedFileFlags"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_server"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "create_tool_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 36,
            "nesting_max": 2
          },
          "name": "test_claude_code_rust_cli_workflow"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_claude_code_all_languages_scaffold"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_scaffold_test_cases"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_toolchain_scaffolding"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_scaffold_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "validate_scaffold_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "verify_generated_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GeneratedFileFlags::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "GeneratedFileFlags::assert_all_files_present"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "process_generated_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "verify_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "verify_makefile_toolchain_specific"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "verify_readme"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "verify_gitignore"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "verify_gitignore_patterns"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_claude_code_error_scenarios"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_claude_code_search_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 18,
            "nesting_max": 3
          },
          "name": "test_naming_convention_critical_requirement"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "test_naming_convention_in_individual_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_server_info_naming_convention"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 50,
            "nesting_max": 0
          },
          "name": "test_ast_context_generation"
        }
      ],
      "path": "./src/tests/claude_code_e2e.rs",
      "total_complexity": {
        "cognitive": 34,
        "cyclomatic": 29,
        "lines": 198,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 42,
            "nesting_max": 0
          },
          "name": "test_mcp_server_e2e_coverage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_cli_main_binary_version"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_cli_main_binary_help"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_cli_subcommand_help"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cli_mode_list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cli_generate_validation_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_cli_search_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cli_invalid_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cli_analyze_churn"
        }
      ],
      "path": "./src/tests/e2e_full_coverage.rs",
      "total_complexity": {
        "cognitive": 1,
        "cyclomatic": 1,
        "lines": 85,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_toolchain_priority"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_toolchain_as_str"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_template_category_serialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_parameter_type_serialization"
        }
      ],
      "path": "./src/tests/models.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 34,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_unified_service_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_app_state_default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_service_metrics_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_service_metrics_increment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_service_metrics_duration_tracking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_service_metrics_error_tracking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_protocol_context_http_only"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_protocol_context_mcp_only"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_app_error_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_app_error_status_codes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_mcp_error_codes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_error_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_error_to_protocol_response"
        }
      ],
      "path": "./src/tests/unified_protocol_tests.rs",
      "total_complexity": {
        "cognitive": 9,
        "cyclomatic": 9,
        "lines": 77,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Cli"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "EarlyCliArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeepContextConfigParams"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "parse_early_for_tracing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "run"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "execute_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "execute_analyze_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "execute_demo_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 6,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "handle_generate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "handle_scaffold"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "handle_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "handle_search"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "handle_validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "handle_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 14,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "detect_primary_language"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "handle_analyze_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 15,
            "lines": 31,
            "nesting_max": 2
          },
          "name": "handle_analyze_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 24,
            "cyclomatic": 19,
            "lines": 27,
            "nesting_max": 3
          },
          "name": "handle_analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 15,
            "nesting_max": 1
          },
          "name": "handle_analyze_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 26,
            "cyclomatic": 18,
            "lines": 24,
            "nesting_max": 2
          },
          "name": "handle_analyze_satd"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "handle_analyze_deep_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 17,
            "nesting_max": 1
          },
          "name": "build_deep_context_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "convert_dag_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "convert_cache_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "parse_analysis_filters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "parse_analysis_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "print_analysis_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "write_deep_context_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_deep_context_as_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 32,
            "nesting_max": 2
          },
          "name": "format_deep_context_comprehensive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "format_annotated_tree"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 12,
            "lines": 27,
            "nesting_max": 3
          },
          "name": "format_tree_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 7,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "format_complexity_hotspots"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 11,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "format_churn_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 11,
            "lines": 17,
            "nesting_max": 3
          },
          "name": "format_technical_debt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 12,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "format_dead_code_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 11,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "format_defect_predictions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 39,
            "cyclomatic": 17,
            "lines": 16,
            "nesting_max": 4
          },
          "name": "format_prioritized_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "format_deep_context_terse"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "format_terse_header"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "format_terse_executive_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 6,
            "lines": 8,
            "nesting_max": 3
          },
          "name": "get_terse_satd_breakdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "format_terse_key_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "format_terse_complexity_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "format_terse_churn_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "calculate_terse_median_changes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "format_terse_satd_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "format_terse_duplicates_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_terse_dead_code_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "format_terse_ast_network_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "format_terse_predicted_defect_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 5,
            "lines": 15,
            "nesting_max": 3
          },
          "name": "calculate_terse_file_risks"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "format_deep_context_full"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "format_full_report_header"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "format_full_executive_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 6,
            "lines": 8,
            "nesting_max": 3
          },
          "name": "get_satd_breakdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "format_full_complexity_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 14,
            "nesting_max": 2
          },
          "name": "format_full_churn_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "calculate_median_changes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "format_full_satd_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 10,
            "nesting_max": 3
          },
          "name": "format_full_dead_code_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "format_full_risk_prediction"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 22,
            "nesting_max": 3
          },
          "name": "calculate_file_risks"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "format_full_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 21,
            "cyclomatic": 11,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "format_deep_context_as_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "format_satd_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 10,
            "lines": 31,
            "nesting_max": 3
          },
          "name": "format_satd_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 7,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "format_satd_as_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 21,
            "cyclomatic": 12,
            "lines": 21,
            "nesting_max": 3
          },
          "name": "format_satd_as_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "format_dead_code_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 27,
            "cyclomatic": 11,
            "lines": 29,
            "nesting_max": 5
          },
          "name": "format_dead_code_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "format_dead_code_as_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 6,
            "lines": 24,
            "nesting_max": 3
          },
          "name": "format_dead_code_as_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 8,
            "nesting_max": 3
          },
          "name": "detect_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "build_complexity_thresholds"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 6,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "analyze_project_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "should_analyze_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "matches_include_patterns"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "analyze_file_by_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "params_to_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "format_top_files_ranking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 33,
            "nesting_max": 1
          },
          "name": "handle_serve"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "print_table"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 14,
            "lines": 20,
            "nesting_max": 2
          },
          "name": "handle_analyze_tdg"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 18,
            "nesting_max": 2
          },
          "name": "format_tdg_table"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 17,
            "nesting_max": 2
          },
          "name": "format_tdg_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "format_tdg_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "truncate_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "handle_analyze_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 13,
            "lines": 41,
            "nesting_max": 3
          },
          "name": "format_makefile_human"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "format_makefile_gcc"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "format_makefile_sarif"
        }
      ],
      "path": "./src/cli/mod.rs",
      "total_complexity": {
        "cognitive": 625,
        "cyclomatic": 486,
        "lines": 996,
        "nesting_max": 5
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 7,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "validate_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "validate_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "value_type_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "expand_env_vars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 10,
            "nesting_max": 4
          },
          "name": "parse_key_val"
        }
      ],
      "path": "./src/cli/args.rs",
      "total_complexity": {
        "cognitive": 30,
        "cyclomatic": 24,
        "lines": 28,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliInput"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliRunner"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliAdapter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "CliAdapter::decode_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_generate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_scaffold"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "CliAdapter::decode_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_search"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "CliAdapter::decode_analyze_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_satd"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_deep_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_analyze_tdg"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_serve"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CliAdapter::decode_demo"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "CliAdapter::format_to_extension_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliAdapter::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliAdapter::protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "CliAdapter::decode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 10,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "CliAdapter::encode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliInput::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 27,
            "cyclomatic": 19,
            "lines": 2,
            "nesting_max": 2
          },
          "name": "CliInput::from_commands"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "CliOutput::write_and_exit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "CliOutput::exit_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "CliOutput::content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "churn_format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "complexity_format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "dag_type_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "dead_code_format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "satd_format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "satd_severity_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliRunner::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "CliRunner::run_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CliRunner::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "deep_context_format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "deep_context_dag_type_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "deep_context_cache_strategy_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "tdg_format_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_cli_input_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_cli_adapter_decode_generate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_cli_adapter_decode_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_cli_adapter_decode_analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_cli_adapter_encode_success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_cli_adapter_encode_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_format_conversions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_cli_output_methods"
        }
      ],
      "path": "./src/unified_protocol/adapters/cli.rs",
      "total_complexity": {
        "cognitive": 223,
        "cyclomatic": 197,
        "lines": 240,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/unified_protocol/adapters/mod.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpStreamAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpServer"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpAdapter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "HttpAdapter::bind"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "HttpAdapter::accept"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpAdapter::from_stream"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpAdapter::protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "HttpAdapter::decode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "HttpAdapter::encode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpStreamAdapter::protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "HttpStreamAdapter::decode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "HttpStreamAdapter::encode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpServer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpServer::bind"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "HttpServer::serve"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "handle_connection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "process_http_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "convert_hyper_to_http_input"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "collect_request_body"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "decode_http_input"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "handle_unified_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "encode_unified_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serve_http_connection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder::ok"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder::not_found"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder::internal_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder::json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder::text"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HttpResponseBuilder::html"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_http_adapter_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_http_response_builder"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_http_adapter_encode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_http_context"
        }
      ],
      "path": "./src/unified_protocol/adapters/http.rs",
      "total_complexity": {
        "cognitive": 40,
        "cyclomatic": 40,
        "lines": 152,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpAdapter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "JsonRpcRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "JsonRpcResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "JsonRpcError"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpReader"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpAdapter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpAdapter::with_stdin"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpAdapter::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpAdapter::protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "McpAdapter::decode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 11,
            "lines": 14,
            "nesting_max": 2
          },
          "name": "McpAdapter::encode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcRequest::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcRequest::notification"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcRequest::request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcResponse::success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcResponse::error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcError::parse_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcError::invalid_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcError::method_not_found"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcError::invalid_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JsonRpcError::internal_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpReader::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "McpReader::read_message"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_json_rpc_request_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_json_rpc_notification"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_json_rpc_response_success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_json_rpc_response_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_mcp_adapter_decode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_mcp_adapter_encode_success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_standard_json_rpc_errors"
        }
      ],
      "path": "./src/unified_protocol/adapters/mcp.rs",
      "total_complexity": {
        "cognitive": 48,
        "cyclomatic": 40,
        "lines": 132,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnifiedRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnifiedResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AdapterRegistry"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AdapterWrapper"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpContext"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedRequest::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "UnifiedRequest::with_body"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "UnifiedRequest::with_header"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "UnifiedRequest::with_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedRequest::get_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedResponse::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedResponse::ok"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "UnifiedResponse::with_body"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "UnifiedResponse::with_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "UnifiedResponse::with_header"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "UnifiedResponse::into_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "Protocol::fmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AdapterRegistry::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "AdapterRegistry::register"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AdapterRegistry::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AdapterWrapper::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "AdapterWrapper::decode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "AdapterWrapper::encode"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AdapterWrapper::protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_unified_request_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_unified_response_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_protocol_display"
        }
      ],
      "path": "./src/unified_protocol/mod.rs",
      "total_complexity": {
        "cognitive": 24,
        "cyclomatic": 24,
        "lines": 87,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestHarness"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestResults"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "EquivalenceFailure"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestSuiteResults"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TestHarness::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TestHarness::with_template_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TestHarness::with_analysis_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 10,
            "lines": 26,
            "nesting_max": 5
          },
          "name": "TestHarness::test_endpoint"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TestHarness::test_template_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestHarness::test_template_listing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TestHarness::test_complexity_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "TestHarness::test_error_handling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 14,
            "nesting_max": 2
          },
          "name": "TestHarness::run_test_suite"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "TestHarness::test_protocol"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "TestHarness::normalize_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestSuiteResults::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "TestSuiteResults::success_rate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestSuiteResults::is_successful"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestHarness::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_harness_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "test_template_generation_endpoint"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "test_error_handling_consistency"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_protocol_equivalence"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_suite_results"
        }
      ],
      "path": "./src/unified_protocol/test_harness.rs",
      "total_complexity": {
        "cognitive": 97,
        "cyclomatic": 73,
        "lines": 187,
        "nesting_max": 5
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpError"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HttpErrorResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CliErrorResponse"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "AppError::status_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "AppError::mcp_error_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 15,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "AppError::error_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "AppError::to_protocol_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "AppError::to_mcp_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "AppError::to_http_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "AppError::to_cli_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "AppError::into_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "extract_protocol_from_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "set_protocol_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "clear_protocol_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_app_error_status_codes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_mcp_error_codes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_error_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_protocol_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_error_to_protocol_response"
        }
      ],
      "path": "./src/unified_protocol/error.rs",
      "total_complexity": {
        "cognitive": 92,
        "cyclomatic": 92,
        "lines": 50,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnifiedService"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AppState"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ServiceMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefaultTemplateService"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefaultAnalysisService"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ListTemplatesQuery"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateList"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateInfo"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateParameter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GenerateParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GeneratedTemplate"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateMetadata"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityQueryParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexitySummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileComplexity"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FunctionComplexity"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnHotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DagParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DagAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ContextParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectStructure"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ContextMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileDeadCode"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AppState::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "UnifiedService::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "UnifiedService::with_template_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "UnifiedService::with_analysis_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedService::router"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "UnifiedService::process_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "UnifiedService::record_request_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "UnifiedService::record_request_metrics_by_data"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedService::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefaultTemplateService::list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "DefaultTemplateService::get_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefaultTemplateService::generate_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefaultAnalysisService::analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefaultAnalysisService::analyze_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 12,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "DefaultAnalysisService::analyze_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefaultAnalysisService::generate_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefaultAnalysisService::analyze_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "get_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "generate_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "analyze_complexity_get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "analyze_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "analyze_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "generate_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "analyze_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 14,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "analyze_deep_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 18,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "mcp_endpoint"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "health_check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_unified_service_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_default_template_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_template_generation"
        }
      ],
      "path": "./src/unified_protocol/service.rs",
      "total_complexity": {
        "cognitive": 87,
        "cyclomatic": 79,
        "lines": 201,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGComponents"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGHotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGRecommendation"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGDistribution"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGBucket"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "TDGSeverity::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "TDGSeverity::as_str"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TDGConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_tdg_severity_from_value"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_tdg_config_default"
        }
      ],
      "path": "./src/models/tdg.rs",
      "total_complexity": {
        "cognitive": 12,
        "cyclomatic": 12,
        "lines": 21,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/models/mod.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileDeadCodeMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeItem"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeRankingResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalysisConfig"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "FileDeadCodeMetrics::calculate_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "FileDeadCodeMetrics::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "FileDeadCodeMetrics::add_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "FileDeadCodeMetrics::update_percentage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "DeadCodeSummary::from_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalysisConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 22,
            "nesting_max": 0
          },
          "name": "test_file_dead_code_metrics_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_dead_code_item_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_dead_code_type_variants"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_confidence_levels"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_dead_code_ranking_result"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 24,
            "nesting_max": 0
          },
          "name": "test_dead_code_summary_from_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_dead_code_analysis_config_default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_file_metrics_add_different_item_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 16,
            "nesting_max": 0
          },
          "name": "test_score_calculation_with_different_confidence_levels"
        }
      ],
      "path": "./src/models/dead_code.rs",
      "total_complexity": {
        "cognitive": 24,
        "cyclomatic": 24,
        "lines": 145,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DependencyGraph"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "NodeInfo"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Edge"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DependencyGraph::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DependencyGraph::add_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DependencyGraph::add_edge"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "DependencyGraph::filter_by_edge_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DependencyGraph::default"
        }
      ],
      "path": "./src/models/dag.rs",
      "total_complexity": {
        "cognitive": 6,
        "cyclomatic": 6,
        "lines": 24,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CodeChurnAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileChurnMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnSummary"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "FileChurnMetrics::calculate_churn_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "ChurnOutputFormat::from_str"
        }
      ],
      "path": "./src/models/churn.rs",
      "total_complexity": {
        "cognitive": 16,
        "cyclomatic": 16,
        "lines": 16,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateResource"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ParameterSpec"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GeneratedTemplate"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateResponse"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "Toolchain::priority"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "Toolchain::as_str"
        }
      ],
      "path": "./src/models/template.rs",
      "total_complexity": {
        "cognitive": 16,
        "cyclomatic": 16,
        "lines": 4,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "NodeFlags"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ColumnStore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstDag"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "LanguageParsers"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "NodeFlags::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "NodeFlags::set"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "NodeFlags::unset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "NodeFlags::has"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "NodeMetadata::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "NodeMetadata::clone"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode::is_function"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode::is_type_definition"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode::complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode::set_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "UnifiedAstNode::fmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ColumnStore::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "ColumnStore::push"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ColumnStore::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ColumnStore::get_mut"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ColumnStore::iter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ColumnStore::len"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ColumnStore::is_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstDag::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstDag::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "AstDag::add_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstDag::mark_clean"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstDag::dirty_nodes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstDag::generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "test_node_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "test_node_alignment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_node_flags"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_ast_dag"
        }
      ],
      "path": "./src/models/unified_ast.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 81,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpError"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ToolCallParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GenerateTemplateArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ListTemplatesArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ResourceReadParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ValidateTemplateArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ScaffoldProjectArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SearchTemplatesArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PromptGetParams"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Prompt"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PromptArgument"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpResponse::success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "McpResponse::error"
        }
      ],
      "path": "./src/models/mcp.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 4,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "TemplateError::to_mcp_code"
        }
      ],
      "path": "./src/models/error.rs",
      "total_complexity": {
        "cognitive": 12,
        "cyclomatic": 12,
        "lines": 2,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "S3Client"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateServer"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TemplateServer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "TemplateServer::warm_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_template_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_template_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_template_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_template_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_renderer"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_metadata_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_content_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_s3_client"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateServer::get_bucket_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 20,
            "cyclomatic": 12,
            "lines": 22,
            "nesting_max": 2
          },
          "name": "run_mcp_server"
        }
      ],
      "path": "./src/lib.rs",
      "total_complexity": {
        "cognitive": 34,
        "cyclomatic": 22,
        "lines": 60,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/utils/mod.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "snake_case_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "kebab_case_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "pascal_case_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "current_year_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "current_date_helper"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "to_snake_case"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "to_kebab_case"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "to_pascal_case"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_to_snake_case_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_to_snake_case_edge_cases"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_to_kebab_case_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_to_pascal_case_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_snake_case_helper_with_handlebars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_kebab_case_helper_with_handlebars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_pascal_case_helper_with_handlebars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_current_year_helper_with_handlebars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_current_date_helper_with_handlebars"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_helper_error_cases"
        }
      ],
      "path": "./src/utils/helpers.rs",
      "total_complexity": {
        "cognitive": 20,
        "cyclomatic": 18,
        "lines": 102,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "StatelessTemplateServer::get_template_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_template_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_template_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_template_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_renderer"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_metadata_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_content_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_s3_client"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StatelessTemplateServer::get_bucket_name"
        }
      ],
      "path": "./src/stateless_server.rs",
      "total_complexity": {
        "cognitive": 6,
        "cyclomatic": 6,
        "lines": 30,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "handle_prompts_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "handle_prompt_get"
        }
      ],
      "path": "./src/handlers/prompts.rs",
      "total_complexity": {
        "cognitive": 11,
        "cyclomatic": 11,
        "lines": 9,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "handle_request"
        }
      ],
      "path": "./src/handlers/mod.rs",
      "total_complexity": {
        "cognitive": 9,
        "cyclomatic": 9,
        "lines": 1,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "handle_resource_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "handle_resource_read"
        }
      ],
      "path": "./src/handlers/resources.rs",
      "total_complexity": {
        "cognitive": 12,
        "cyclomatic": 12,
        "lines": 16,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ValidationResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeCodeChurnArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeComplexityArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeDagArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GenerateContextArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeSystemArchitectureArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeDefectProbabilityArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeDeadCodeArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeTdgArgs"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalyzeDeepContextArgs"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "handle_tool_call"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "parse_tool_call_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "dispatch_tool_call"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "is_template_tool"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "is_analysis_tool"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "handle_template_tools"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "handle_analysis_tools"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "handle_generate_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "handle_list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "handle_validate_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "parse_validate_template_args"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "validate_template_parameters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "find_missing_required_parameters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 3
          },
          "name": "validate_parameter_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 4
          },
          "name": "validate_single_parameter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "create_validation_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 13,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "handle_scaffold_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "handle_search_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "handle_get_server_info"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 11,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "handle_analyze_code_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "format_churn_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 15,
            "nesting_max": 1
          },
          "name": "format_churn_as_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "format_churn_as_csv"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "calculate_relevance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 19,
            "nesting_max": 2
          },
          "name": "handle_analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "resolve_project_path_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 6,
            "lines": 6,
            "nesting_max": 4
          },
          "name": "detect_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "build_complexity_thresholds"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "is_build_artifact_dir"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 5,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "analyze_project_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "should_analyze_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "matches_include_filters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "matches_pattern"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "analyze_file_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 8,
            "lines": 3,
            "nesting_max": 2
          },
          "name": "format_complexity_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 14,
            "nesting_max": 2
          },
          "name": "format_complexity_rankings"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 17,
            "lines": 15,
            "nesting_max": 1
          },
          "name": "handle_analyze_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 12,
            "lines": 19,
            "nesting_max": 1
          },
          "name": "handle_generate_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 45,
            "cyclomatic": 32,
            "lines": 37,
            "nesting_max": 3
          },
          "name": "handle_analyze_system_architecture"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 9,
            "lines": 19,
            "nesting_max": 2
          },
          "name": "handle_analyze_defect_probability"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 17,
            "nesting_max": 1
          },
          "name": "handle_analyze_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 12,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "format_dead_code_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 8,
            "lines": 20,
            "nesting_max": 3
          },
          "name": "format_dead_code_summary_mcp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "format_dead_code_as_sarif_mcp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 6,
            "lines": 20,
            "nesting_max": 3
          },
          "name": "format_dead_code_as_markdown_mcp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "handle_analyze_tdg"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 22,
            "nesting_max": 2
          },
          "name": "format_tdg_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "handle_analyze_deep_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "parse_deep_context_args"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "resolve_project_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 10,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "parse_analysis_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "parse_dag_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "parse_cache_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "build_deep_context_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_deep_context_analyzer"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_deep_context_response"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "format_deep_context_as_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 31,
            "nesting_max": 2
          },
          "name": "format_deep_context_as_markdown"
        }
      ],
      "path": "./src/handlers/tools.rs",
      "total_complexity": {
        "cognitive": 373,
        "cyclomatic": 306,
        "lines": 490,
        "nesting_max": 4
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "handle_initialize"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "handle_tools_list"
        }
      ],
      "path": "./src/handlers/initialize.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 3,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalysisRequest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalysisReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityHotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DependencyGraphReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GraphMetricsReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CentralityScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnifiedCache"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CodeIntelligence"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "AnalysisRequest::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedCache::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedCache::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedCache::put"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CodeIntelligence::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CodeIntelligence::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "CodeIntelligence::analyze_comprehensive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 23,
            "cyclomatic": 10,
            "lines": 56,
            "nesting_max": 3
          },
          "name": "CodeIntelligence::analyze_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 6,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "CodeIntelligence::build_analysis_futures"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CodeIntelligence::get_dag_stats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 29,
            "nesting_max": 2
          },
          "name": "analyze_dag_enhanced"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_analysis_request_cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_unified_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_code_intelligence_creation"
        }
      ],
      "path": "./src/services/code_intelligence.rs",
      "total_complexity": {
        "cognitive": 84,
        "cyclomatic": 50,
        "lines": 240,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileClassifierConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileClassifier"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebugReporter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebugEvent"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebugReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebugSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "VendorRules"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "FileClassifier::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "FileClassifier::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 17,
            "nesting_max": 2
          },
          "name": "FileClassifier::should_parse"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 5,
            "lines": 10,
            "nesting_max": 4
          },
          "name": "FileClassifier::is_vendor_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "FileClassifier::is_binary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "FileClassifier::is_minified"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "FileClassifier::is_build_artifact"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "calculate_shannon_entropy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DebugReporter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DebugReporter::record_decision"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "DebugReporter::record_parse_result"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "DebugReporter::generate_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "DebugReporter::save_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 5,
            "lines": 8,
            "nesting_max": 5
          },
          "name": "DebugReporter::get_memory_usage_mb"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "test_vendor_detection_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_performance_on_large_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_entropy_calculation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_binary_detection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_line_length_detection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_rust_target_directory_filtering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_additional_build_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_debug_reporter"
        }
      ],
      "path": "./src/services/file_classifier.rs",
      "total_complexity": {
        "cognitive": 92,
        "cyclomatic": 74,
        "lines": 231,
        "nesting_max": 5
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RustVisitor"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GroupedItems"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "AstItem::display_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::get_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "RustVisitor::get_visibility"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::get_derives"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::visit_item_fn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "RustVisitor::visit_item_struct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::visit_item_enum"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::visit_item_trait"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "RustVisitor::visit_item_impl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustVisitor::visit_item_mod"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "RustVisitor::visit_item_use"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_rust_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "analyze_rust_file_with_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "analyze_rust_file_with_persistent_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "analyze_project_with_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "build_gitignore"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "scan_and_analyze_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "analyze_file_by_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "analyze_deno_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "build_project_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 9,
            "lines": 3,
            "nesting_max": 3
          },
          "name": "calculate_item_counts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "read_dependencies"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 3
          },
          "name": "read_rust_dependencies"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 6,
            "lines": 10,
            "nesting_max": 3
          },
          "name": "read_deno_dependencies"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 7,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "read_python_dependencies"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "analyze_project_with_persistent_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "scan_and_analyze_files_persistent"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "analyze_file_by_toolchain_persistent"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "format_context_as_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "format_header"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "format_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "format_dependencies"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "format_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 9,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "group_items_by_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "format_item_groups"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 2
          },
          "name": "format_item_group"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_module_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "format_struct_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_enum_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_trait_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "format_function_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "format_impl_item"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "format_footer"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "format_deep_context_as_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "format_quality_scorecard"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "format_project_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 7,
            "lines": 35,
            "nesting_max": 3
          },
          "name": "format_analysis_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "format_ast_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 9,
            "lines": 9,
            "nesting_max": 3
          },
          "name": "count_ast_items"
        }
      ],
      "path": "./src/services/context.rs",
      "total_complexity": {
        "cognitive": 200,
        "cyclomatic": 157,
        "lines": 288,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/services/mod.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "node_id_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "label_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "node_type_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "edge_type_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "node_strategy"
        }
      ],
      "path": "./src/services/mermaid_property_tests.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 5,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeepContextConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityThresholds"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeepContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ContextMetadata"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheStats"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnnotatedFileTree"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnnotatedNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "NodeAnnotations"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalysisResults"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "EnhancedFileContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileChurnMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectAnnotations"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeAnnotation"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeItem"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TechnicalDebtItem"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityViolation"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CrossLangReference"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "QualityScorecard"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateProvenance"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DriftAnalysis"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectHotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileLocation"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RefactoringEstimate"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PrioritizedRecommendation"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CategorizedAstItems"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstFunction"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstStruct"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstEnum"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstTrait"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstImpl"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstModule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstUse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ParallelAnalysisResults"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CategorizedAstItems::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 24,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::format_as_comprehensive_markdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::format_as_comprehensive_markdown_legacy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::format_legacy_header"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::format_legacy_main_sections"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::format_legacy_analysis_sections"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::format_as_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 30,
            "cyclomatic": 15,
            "lines": 24,
            "nesting_max": 4
          },
          "name": "DeepContextAnalyzer::format_as_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::overall_health_emoji"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::format_annotated_tree"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 12,
            "lines": 26,
            "nesting_max": 3
          },
          "name": "DeepContextAnalyzer::format_tree_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::format_enhanced_ast_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::format_single_file_ast"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 9,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::categorize_ast_items"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::write_ast_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::write_ast_details"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::write_functions_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::write_structs_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::write_enums_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::write_traits_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 8,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::write_impls_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::write_modules_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::write_imports_section"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::write_file_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 7,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::format_complexity_hotspots"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 11,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::format_churn_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 11,
            "lines": 17,
            "nesting_max": 3
          },
          "name": "DeepContextAnalyzer::format_technical_debt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 12,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "DeepContextAnalyzer::format_dead_code_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 7,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::format_cross_references"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 11,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::format_defect_predictions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 39,
            "cyclomatic": 17,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "DeepContextAnalyzer::format_prioritized_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 18,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::analyze_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::discover_project_structure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 6,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "DeepContextAnalyzer::build_file_tree_recursive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::should_exclude_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::execute_parallel_analyses"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::spawn_analysis_tasks"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 21,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::spawn_analysis_task"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::collect_analysis_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::process_analysis_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 13,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::integrate_analysis_result"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::build_cross_language_references"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::correlate_defects"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::collect_file_tdg_scores"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 8,
            "lines": 23,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::calculate_tdg_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::build_tdg_defect_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::generate_tdg_hotspots"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "DeepContextAnalyzer::extract_complexity_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::extract_churn_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "DeepContextAnalyzer::build_file_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::calculate_defect_probabilities"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::build_defect_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::generate_defect_hotspots"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::calculate_quality_scores"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::generate_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeepContextAnalyzer::analyze_template_provenance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_ast_contexts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "analyze_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_satd"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_dag"
        }
      ],
      "path": "./src/services/deep_context.rs",
      "total_complexity": {
        "cognitive": 724,
        "cyclomatic": 582,
        "lines": 1019,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RankingEngine"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CompositeComplexityScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DuplicationScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityRanker"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MockRanker"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestRanker"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RankingEngine::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "RankingEngine::rank_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "RankingEngine::format_rankings_table"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RankingEngine::format_rankings_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "RankingEngine::clear_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CompositeComplexityScore::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CompositeComplexityScore::eq"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CompositeComplexityScore::partial_cmp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ChurnScore::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ChurnScore::eq"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ChurnScore::partial_cmp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicationScore::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicationScore::eq"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicationScore::partial_cmp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "rank_files_vectorized"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityRanker::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityRanker::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "ComplexityRanker::calculate_composite_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 9,
            "lines": 15,
            "nesting_max": 3
          },
          "name": "ComplexityRanker::compute_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityRanker::format_ranking_entry"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityRanker::ranking_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "rank_files_by_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MockRanker::compute_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MockRanker::format_ranking_entry"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MockRanker::ranking_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_file_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_empty_file_list"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_limit_exceeds_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_vectorized_ranking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_composite_complexity_score_ordering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_composite_complexity_score_default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_composite_complexity_score_equality"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_churn_score_default_and_ordering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_duplication_score_default_and_ordering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_vectorized_ranking_small_dataset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_vectorized_ranking_large_dataset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_vectorized_ranking_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_calculate_composite_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_calculate_composite_score_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 16,
            "nesting_max": 1
          },
          "name": "test_ranking_engine_with_temp_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_zero_limit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_cache"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_format_rankings_table_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_format_rankings_table"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_format_rankings_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_compute_score_rust_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_compute_score_javascript_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_compute_score_python_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_compute_score_unknown_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_compute_score_nonexistent_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_complexity_ranker_format_ranking_entry"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_rank_files_by_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_rank_files_by_complexity_with_limit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_rank_files_by_complexity_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_with_nonexistent_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_ranking_engine_mixed_existing_nonexistent"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRanker::compute_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRanker::format_ranking_entry"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRanker::ranking_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_custom_ranker"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_all_score_types_partial_ord"
        }
      ],
      "path": "./src/services/ranking.rs",
      "total_complexity": {
        "cognitive": 57,
        "cyclomatic": 43,
        "lines": 382,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileComplexityMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FunctionComplexity"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ClassComplexity"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityThresholds"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexitySummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityHotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComplexityVisitor"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CyclomaticComplexityRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CognitiveComplexityRule"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityThresholds::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityVisitor::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "ComplexityVisitor::calculate_cognitive_increment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "ComplexityVisitor::enter_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComplexityVisitor::exit_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "compute_complexity_cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CyclomaticComplexityRule::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "CyclomaticComplexityRule::evaluate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CognitiveComplexityRule::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "CognitiveComplexityRule::evaluate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 24,
            "cyclomatic": 16,
            "lines": 52,
            "nesting_max": 4
          },
          "name": "aggregate_results"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 28,
            "nesting_max": 2
          },
          "name": "format_complexity_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 8,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "format_complexity_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "format_as_sarif"
        }
      ],
      "path": "./src/services/complexity.rs",
      "total_complexity": {
        "cognitive": 63,
        "cyclomatic": 47,
        "lines": 147,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TDGCalculator"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TDGCalculator::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TDGCalculator::with_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "TDGCalculator::calculate_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "TDGCalculator::calculate_file_uncached"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "TDGCalculator::calculate_batch"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 8,
            "lines": 21,
            "nesting_max": 2
          },
          "name": "TDGCalculator::analyze_directory"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "TDGCalculator::analyze_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 8,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "TDGCalculator::calculate_complexity_factor"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 8,
            "lines": 11,
            "nesting_max": 6
          },
          "name": "TDGCalculator::calculate_churn_factor"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "TDGCalculator::calculate_coupling_factor"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "TDGCalculator::calculate_duplication_factor"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "TDGCalculator::calculate_domain_risk"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TDGCalculator::calculate_weighted_tdg"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "TDGCalculator::calculate_confidence"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "TDGCalculator::calculate_percentiles"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "TDGCalculator::percentile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "TDGCalculator::identify_primary_factor"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "TDGCalculator::estimate_refactoring_hours"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "TDGCalculator::generate_explanation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "TDGCalculator::generate_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TDGCalculator::discover_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "TDGCalculator::count_imports"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "TDGCalculator::calculate_distribution"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TDGCalculator::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TDGCalculator::clone"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TDGComponents::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_tdg_calculation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_tdg_distribution"
        }
      ],
      "path": "./src/services/tdg_calculator.rs",
      "total_complexity": {
        "cognitive": 158,
        "cyclomatic": 122,
        "lines": 333,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeterministicMermaidEngine"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeterministicMermaidEngine::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeterministicMermaidEngine::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 19,
            "nesting_max": 1
          },
          "name": "DeterministicMermaidEngine::generate_codebase_modules_mmd"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 25,
            "cyclomatic": 17,
            "lines": 26,
            "nesting_max": 2
          },
          "name": "DeterministicMermaidEngine::generate_service_interactions_mmd"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 25,
            "cyclomatic": 10,
            "lines": 27,
            "nesting_max": 7
          },
          "name": "DeterministicMermaidEngine::compute_pagerank"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "DeterministicMermaidEngine::filter_to_services"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeterministicMermaidEngine::is_service_module"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "DeterministicMermaidEngine::get_edge_arrow"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "DeterministicMermaidEngine::sanitize_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeterministicMermaidEngine::escape_mermaid_label"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_pagerank_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_mermaid_output_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_sanitize_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_escape_mermaid_label"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_is_service_module"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_complexity_styling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_empty_graph"
        }
      ],
      "path": "./src/services/deterministic_mermaid_engine.rs",
      "total_complexity": {
        "cognitive": 140,
        "cyclomatic": 94,
        "lines": 258,
        "nesting_max": 7
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_typescript_file_with_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "analyze_typescript_file_with_complexity_cached"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "analyze_javascript_file_with_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_typescript_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 8,
            "lines": 17,
            "nesting_max": 2
          },
          "name": "analyze_typescript_file_with_classifier"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_javascript_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 8,
            "lines": 17,
            "nesting_max": 2
          },
          "name": "analyze_javascript_file_with_classifier"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::count_class_fields"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::add_class_to_items"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::process_class_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::process_class_members"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::process_method"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::process_constructor"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::extract_method_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::analyze_function_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 6,
            "lines": 3,
            "nesting_max": 3
          },
          "name": "TypeScriptVisitor::process_variable_declaration"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::process_arrow_function"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::process_function_expression"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::add_function_to_items"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::analyze_standalone_function"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::count_lines"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::enter_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::exit_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::add_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 10,
            "nesting_max": 3
          },
          "name": "TypeScriptVisitor::visit_fn_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_class_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_var_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::visit_ts_interface_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::visit_ts_type_alias_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::visit_ts_enum_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptVisitor::visit_import_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_export_decl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::visit_if_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 5,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::visit_switch_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_for_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_for_in_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_for_of_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_while_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_do_while_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::visit_try_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "TypeScriptVisitor::visit_bin_expr"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "TypeScriptVisitor::visit_cond_expr"
        }
      ],
      "path": "./src/services/ast_typescript.rs",
      "total_complexity": {
        "cognitive": 206,
        "cyclomatic": 170,
        "lines": 375,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RustComplexityVisitor"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_rust_file_with_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 6,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "analyze_rust_file_with_complexity_and_classifier"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_rust_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "analyze_rust_file_with_classifier"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustComplexityVisitor::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "RustComplexityVisitor::count_lines"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "RustComplexityVisitor::enter_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustComplexityVisitor::exit_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "RustComplexityVisitor::add_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "RustComplexityVisitor::get_visibility_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "RustComplexityVisitor::count_fields"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "RustComplexityVisitor::visit_item_fn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "RustComplexityVisitor::visit_item_struct"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "RustComplexityVisitor::visit_item_enum"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "RustComplexityVisitor::visit_item_trait"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 6,
            "lines": 14,
            "nesting_max": 6
          },
          "name": "RustComplexityVisitor::visit_item_impl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "RustComplexityVisitor::visit_item_use"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 26,
            "cyclomatic": 13,
            "lines": 33,
            "nesting_max": 3
          },
          "name": "RustComplexityVisitor::visit_expr"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "RustComplexityVisitor::visit_arm"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "RustComplexityVisitor::visit_stmt"
        }
      ],
      "path": "./src/services/ast_rust.rs",
      "total_complexity": {
        "cognitive": 146,
        "cyclomatic": 94,
        "lines": 241,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "VectorizedLSH"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ANNIndex"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UniversalFeatureExtractor"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CloneReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CloneGroup"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CloneInstance"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CloneSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DuplicateDetector"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "VectorizedLSH::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "VectorizedLSH::insert"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "VectorizedLSH::query"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "VectorizedLSH::compute_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ANNIndex::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ANNIndex::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ANNIndex::insert"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "ANNIndex::search"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "euclidean_distance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UniversalFeatureExtractor::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::detect_all_clones"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "DuplicateDetector::compute_ast_embedding"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::index_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "DuplicateDetector::detect_exact_clones"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "DuplicateDetector::detect_renamed_clones"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::detect_gapped_clones"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::detect_semantic_clones"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::merge_clone_groups"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::extract_structural_features"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::extract_semantic_features"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DuplicateDetector::extract_contextual_features"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "compute_rabin_fingerprint"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "compute_alpha_normalized_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "compute_minhash_signature"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_lsh_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_ann_index"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_duplicate_detector"
        }
      ],
      "path": "./src/services/duplicate_detector.rs",
      "total_complexity": {
        "cognitive": 31,
        "cyclomatic": 31,
        "lines": 184,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CloneProgress"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ClonedRepo"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GitCloner"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ParsedGitHubUrl"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitCloner::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "GitCloner::with_timeout"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "GitCloner::with_max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitCloner::get_progress"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 8,
            "lines": 22,
            "nesting_max": 3
          },
          "name": "GitCloner::clone_or_update"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "GitCloner::clone_shallow"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "GitCloner::update_repository"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 5,
            "nesting_max": 3
          },
          "name": "GitCloner::is_cache_fresh"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "GitCloner::parse_github_url"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "GitCloner::compute_cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitCloner::check_repo_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_parse_github_urls"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_cache_key_generation"
        }
      ],
      "path": "./src/services/git_clone.rs",
      "total_complexity": {
        "cognitive": 71,
        "cyclomatic": 65,
        "lines": 155,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MermaidGenerator"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MermaidOptions"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MermaidGenerator::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "MermaidGenerator::generate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 13,
            "lines": 20,
            "nesting_max": 2
          },
          "name": "MermaidGenerator::generate_with_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "MermaidGenerator::generate_legacy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 7,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "MermaidGenerator::generate_nodes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MermaidGenerator::escape_mermaid_label"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "MermaidGenerator::generate_edges"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "MermaidGenerator::get_edge_arrow"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "MermaidGenerator::generate_styles"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "MermaidGenerator::get_complexity_color"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "MermaidGenerator::get_node_stroke_style"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "MermaidGenerator::sanitize_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MermaidGenerator::get_semantic_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MermaidGenerator::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "load_reference_standard"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "load_complex_styled_standard"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "load_invalid_example"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "validate_mermaid_syntax"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "validate_mermaid_directive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "validate_content_not_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "validate_no_raw_angle_brackets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 27,
            "cyclomatic": 19,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "validate_node_definitions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_reference_standards_are_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_invalid_example_is_correctly_identified"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_generated_output_matches_reference_syntax"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 21,
            "nesting_max": 0
          },
          "name": "test_all_node_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_complex_labels"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_sanitize_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "test_all_edge_types"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_empty_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_no_complexity_display"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_without_complexity_display"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_edge_with_missing_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_default_implementation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_numeric_id_sanitization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_options_configuration"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_mermaid_output_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 10,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "test_regression_empty_nodes_bug"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_escape_mermaid_label"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_angle_brackets_and_pipes_compatibility"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "test_edge_arrow_syntax"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 19,
            "nesting_max": 1
          },
          "name": "test_realistic_dependency_graph"
        }
      ],
      "path": "./src/services/mermaid_generator.rs",
      "total_complexity": {
        "cognitive": 169,
        "cyclomatic": 132,
        "lines": 338,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileDiscoveryConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectFileDiscovery"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DiscoveryStats"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ExternalRepoFilter"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "FileDiscoveryConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ProjectFileDiscovery::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ProjectFileDiscovery::with_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ProjectFileDiscovery::with_classifier"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 12,
            "lines": 44,
            "nesting_max": 3
          },
          "name": "ProjectFileDiscovery::discover_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "ProjectFileDiscovery::create_walk_builder"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "ProjectFileDiscovery::should_include_entry"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ProjectFileDiscovery::is_external_repository"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 10,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "ProjectFileDiscovery::is_build_artifact"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "ProjectFileDiscovery::is_analyzable_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 6,
            "lines": 15,
            "nesting_max": 4
          },
          "name": "ProjectFileDiscovery::get_discovery_stats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ExternalRepoFilter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ExternalRepoFilter::is_external_dependency"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ExternalRepoFilter::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_file_discovery_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_external_repo_filtering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_max_depth_limit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_custom_ignore_patterns"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_file_extension_filtering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_discovery_stats"
        }
      ],
      "path": "./src/services/file_discovery.rs",
      "total_complexity": {
        "cognitive": 81,
        "cyclomatic": 67,
        "lines": 270,
        "nesting_max": 4
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "lint_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "calculate_quality_score"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_calculate_quality_score_perfect"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_calculate_quality_score_with_errors"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_calculate_quality_score_with_warnings"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_calculate_quality_score_minimum"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_lint_result_methods"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_lint_makefile_async"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_lint_makefile_file_not_found"
        }
      ],
      "path": "./src/services/makefile_linter/mod.rs",
      "total_complexity": {
        "cognitive": 3,
        "cyclomatic": 3,
        "lines": 40,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MakefileParser"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileParser::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "MakefileParser::safe_slice"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "MakefileParser::parse"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 31,
            "cyclomatic": 16,
            "lines": 17,
            "nesting_max": 3
          },
          "name": "MakefileParser::parse_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 9,
            "lines": 23,
            "nesting_max": 1
          },
          "name": "MakefileParser::parse_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "MakefileParser::parse_variable"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 10,
            "lines": 28,
            "nesting_max": 3
          },
          "name": "MakefileParser::parse_recipe_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileParser::parse_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "MakefileParser::parse_prerequisites"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "MakefileParser::parse_comment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 15,
            "nesting_max": 1
          },
          "name": "MakefileParser::parse_include"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "MakefileParser::parse_conditional"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "MakefileParser::find_char_swar"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "MakefileParser::has_byte"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 33,
            "cyclomatic": 16,
            "lines": 13,
            "nesting_max": 4
          },
          "name": "MakefileParser::find_assignment_or_colon"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileParser::at_end"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "MakefileParser::peek"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "MakefileParser::advance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "MakefileParser::skip_spaces"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "MakefileParser::skip_whitespace_and_blank_lines"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 2
          },
          "name": "MakefileParser::skip_to_next_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "MakefileParser::starts_with"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_parser_new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_parse_empty_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_parse_simple_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_parse_variable"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_parse_comment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_parse_pattern_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_parse_phony_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_parse_double_colon_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_parse_include"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_parse_recipe_with_prefixes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_parse_automatic_variables"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_parse_errors"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_skip_functions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_at_end"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_advance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_starts_with"
        }
      ],
      "path": "./src/services/makefile_linter/parser.rs",
      "total_complexity": {
        "cognitive": 249,
        "cyclomatic": 173,
        "lines": 521,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Violation"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "LintResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RuleRegistry"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TestRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MinimalRule"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LintResult::has_errors"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LintResult::error_count"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "LintResult::max_severity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "RuleRegistry::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RuleRegistry::register"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "RuleRegistry::check_all"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_severity_ordering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_violation_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_rule_registry_new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_check_all_empty_ast"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TestRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MinimalRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MinimalRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_makefile_with_phony_targets"
        }
      ],
      "path": "./src/services/makefile_linter/rules/mod.rs",
      "total_complexity": {
        "cognitive": 21,
        "cyclomatic": 21,
        "lines": 97,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MinPhonyRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PhonyDeclaredRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MaxBodyLengthRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TimestampExpandedRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UndefinedVariableRule"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PortabilityRule"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MinPhonyRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MinPhonyRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 8,
            "lines": 14,
            "nesting_max": 4
          },
          "name": "MinPhonyRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PhonyDeclaredRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PhonyDeclaredRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PhonyDeclaredRule::default_severity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 9,
            "lines": 14,
            "nesting_max": 4
          },
          "name": "PhonyDeclaredRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MaxBodyLengthRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MaxBodyLengthRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MaxBodyLengthRule::default_severity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 3
          },
          "name": "MaxBodyLengthRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TimestampExpandedRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TimestampExpandedRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 5,
            "lines": 6,
            "nesting_max": 3
          },
          "name": "TimestampExpandedRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UndefinedVariableRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UndefinedVariableRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 8,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "UndefinedVariableRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 57,
            "cyclomatic": 18,
            "lines": 26,
            "nesting_max": 6
          },
          "name": "check_undefined_in_text"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "is_automatic_var"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 25,
            "cyclomatic": 25,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "is_function_call"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PortabilityRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PortabilityRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PortabilityRule::default_severity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 6,
            "lines": 7,
            "nesting_max": 3
          },
          "name": "PortabilityRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 16,
            "nesting_max": 0
          },
          "name": "test_min_phony_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_phony_declared_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_max_body_length_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_timestamp_expanded_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_undefined_variable_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_portability_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_is_automatic_var"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_is_function_call"
        }
      ],
      "path": "./src/services/makefile_linter/rules/checkmake.rs",
      "total_complexity": {
        "cognitive": 236,
        "cyclomatic": 125,
        "lines": 274,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RecursiveExpansionRule"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RecursiveExpansionRule::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RecursiveExpansionRule::id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RecursiveExpansionRule::default_severity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 49,
            "cyclomatic": 23,
            "lines": 41,
            "nesting_max": 6
          },
          "name": "RecursiveExpansionRule::check"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 43,
            "cyclomatic": 15,
            "lines": 27,
            "nesting_max": 5
          },
          "name": "extract_var_refs"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "count_var_usage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "is_function_call"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "is_automatic_var"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 8,
            "lines": 21,
            "nesting_max": 3
          },
          "name": "test_recursive_expansion_rule"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_extract_var_refs"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_count_var_usage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_expensive_propagation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_multiple_targets_with_expensive_prereq"
        }
      ],
      "path": "./src/services/makefile_linter/rules/performance.rs",
      "total_complexity": {
        "cognitive": 155,
        "cyclomatic": 71,
        "lines": 173,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MakefileAst"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MakefileNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RecipeLine"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RecipePrefixes"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SourceSpan"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MakefileMetadata"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SourceSpan::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SourceSpan::file_level"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileAst::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileAst::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "MakefileAst::add_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 3
          },
          "name": "MakefileAst::find_rules_by_target"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 3
          },
          "name": "MakefileAst::get_phony_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileAst::count_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "MakefileAst::count_phony_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "MakefileAst::has_pattern_rules"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 12,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "MakefileAst::uses_automatic_variables"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "MakefileAst::get_variables"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_makefile_ast_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_add_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_find_rules_by_target"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_get_phony_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_source_span"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_count_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_count_phony_targets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_has_pattern_rules"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_uses_automatic_variables"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_get_variables"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_metadata_default"
        }
      ],
      "path": "./src/services/makefile_linter/ast.rs",
      "total_complexity": {
        "cognitive": 46,
        "cyclomatic": 42,
        "lines": 141,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SATDDetector"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TechnicalDebt"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SATDAnalysisResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SATDSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebtClassifier"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebtPattern"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DebtEvolution"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SATDMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CategoryMetrics"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "DebtCategory::as_str"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DebtCategory::fmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "Severity::escalate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "Severity::reduce"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DebtClassifier::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DebtClassifier::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "DebtClassifier::classify_comment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "DebtClassifier::adjust_severity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SATDDetector::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "SATDDetector::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 30,
            "cyclomatic": 11,
            "lines": 21,
            "nesting_max": 6
          },
          "name": "SATDDetector::extract_from_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "SATDDetector::extract_from_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "SATDDetector::extract_comment_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "SATDDetector::find_comment_column"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "SATDDetector::hash_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 25,
            "cyclomatic": 14,
            "lines": 27,
            "nesting_max": 4
          },
          "name": "SATDDetector::analyze_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SATDDetector::analyze_directory"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 20,
            "cyclomatic": 11,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "SATDDetector::analyze_directory_with_tests"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "SATDDetector::find_source_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 21,
            "cyclomatic": 11,
            "lines": 13,
            "nesting_max": 4
          },
          "name": "SATDDetector::collect_files_recursive"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "SATDDetector::is_source_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "SATDDetector::is_test_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 9,
            "lines": 16,
            "nesting_max": 3
          },
          "name": "SATDDetector::generate_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_pattern_classification"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_context_hash_stability"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_extract_from_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_comment_extraction"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_directory_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_severity_adjustment"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_metrics_generation"
        }
      ],
      "path": "./src/services/satd_detector.rs",
      "total_complexity": {
        "cognitive": 330,
        "cyclomatic": 214,
        "lines": 377,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DogfoodingEngine"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileHotspot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DagMetrics"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DogfoodingEngine::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 25,
            "nesting_max": 1
          },
          "name": "DogfoodingEngine::generate_ast_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "DogfoodingEngine::generate_combined_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 30,
            "nesting_max": 1
          },
          "name": "DogfoodingEngine::generate_complexity_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "DogfoodingEngine::get_churn_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "DogfoodingEngine::generate_churn_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 16,
            "nesting_max": 0
          },
          "name": "DogfoodingEngine::generate_server_info"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "DogfoodingEngine::analyze_all_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 11,
            "lines": 17,
            "nesting_max": 3
          },
          "name": "DogfoodingEngine::analyze_single_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "DogfoodingEngine::compute_dag_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "DogfoodingEngine::compute_metrics_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DogfoodingEngine::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_ast_context_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_combined_metrics_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_server_info_generation"
        }
      ],
      "path": "./src/services/dogfooding_engine.rs",
      "total_complexity": {
        "cognitive": 92,
        "cyclomatic": 70,
        "lines": 319,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SemanticNamer"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "SemanticNamer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "SemanticNamer::get_semantic_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 5,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "SemanticNamer::path_to_module"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "SemanticNamer::clean_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "SemanticNamer::detect_language"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SemanticNamer::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_path_to_module_rust"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_path_to_module_python"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_get_semantic_name_priority"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_clean_id"
        }
      ],
      "path": "./src/services/semantic_naming.rs",
      "total_complexity": {
        "cognitive": 34,
        "cyclomatic": 32,
        "lines": 77,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "HierarchicalBitSet"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CrossLangReferenceGraph"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ReferenceEdge"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ReferenceNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "VTableResolver"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "VTable"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CoverageData"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeItem"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnreachableBlock"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeSummary"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HierarchicalBitSet::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HierarchicalBitSet::set"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HierarchicalBitSet::is_set"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HierarchicalBitSet::as_mut_slice"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "HierarchicalBitSet::count_set"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "VTableResolver::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "VTableResolver::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 4
          },
          "name": "VTableResolver::resolve_dynamic_call"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::with_coverage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::analyze_dependency_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 8,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "DeadCodeAnalyzer::build_reference_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "DeadCodeAnalyzer::resolve_dynamic_calls"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::mark_reachable_vectorized"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::mark_reachable_vectorized_avx2"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 5,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "DeadCodeAnalyzer::mark_reachable_scalar"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 8,
            "lines": 18,
            "nesting_max": 3
          },
          "name": "DeadCodeAnalyzer::classify_dead_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::add_entry_point"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "DeadCodeAnalyzer::add_reference"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 15,
            "nesting_max": 1
          },
          "name": "DeadCodeAnalyzer::analyze_with_ranking"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 8,
            "lines": 30,
            "nesting_max": 3
          },
          "name": "DeadCodeAnalyzer::aggregate_by_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 29,
            "cyclomatic": 18,
            "lines": 16,
            "nesting_max": 3
          },
          "name": "DeadCodeAnalyzer::build_reference_graph_from_dep_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 7,
            "lines": 18,
            "nesting_max": 3
          },
          "name": "DeadCodeAnalyzer::classify_dead_code_from_dep_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CrossLangReferenceGraph::edges_for_chunk"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_hierarchical_bitset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_dead_code_analyzer"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_vtable_resolver"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_reference_edge_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_reference_node_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_dead_code_analyzer_with_entry_points"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_coverage_data_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_cross_lang_reference_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_analyze_with_ranking"
        }
      ],
      "path": "./src/services/dead_code_analyzer.rs",
      "total_complexity": {
        "cognitive": 205,
        "cyclomatic": 129,
        "lines": 395,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ScaffoldResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GeneratedFile"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ScaffoldError"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SearchResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ValidationResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ValidationError"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "get_template_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "generate_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "generate_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "list_all_resources"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "parse_template_uri"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "build_template_prefix"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "extract_filename"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 8,
            "lines": 10,
            "nesting_max": 5
          },
          "name": "validate_parameters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 20,
            "cyclomatic": 11,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "scaffold_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 22,
            "nesting_max": 2
          },
          "name": "search_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 11,
            "lines": 18,
            "nesting_max": 6
          },
          "name": "validate_template"
        }
      ],
      "path": "./src/services/template_service.rs",
      "total_complexity": {
        "cognitive": 93,
        "cyclomatic": 64,
        "lines": 100,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ArtifactWriter"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ArtifactMetadata"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "VerificationReport"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "IntegrityFailure"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ArtifactStatistics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TypeStatistics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CleanupReport"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "ArtifactWriter::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "ArtifactWriter::write_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "ArtifactWriter::create_directory_structure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "ArtifactWriter::write_mermaid_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "ArtifactWriter::write_template_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "ArtifactWriter::write_with_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "ArtifactWriter::write_manifest"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "ArtifactWriter::verify_integrity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "ArtifactWriter::get_statistics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 7,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "ArtifactWriter::cleanup_old_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_artifact_writer_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_directory_structure_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_atomic_write_with_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_artifact_tree_writing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_integrity_verification"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_statistics"
        }
      ],
      "path": "./src/services/artifact_writer.rs",
      "total_complexity": {
        "cognitive": 109,
        "cyclomatic": 95,
        "lines": 263,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GitAnalysisService"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileStats"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CommitInfo"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "GitAnalysisService::analyze_code_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 19,
            "cyclomatic": 10,
            "lines": 33,
            "nesting_max": 5
          },
          "name": "GitAnalysisService::get_file_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "GitAnalysisService::parse_commit_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "GitAnalysisService::parse_numstat_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "GitAnalysisService::generate_summary"
        }
      ],
      "path": "./src/services/git_analysis.rs",
      "total_complexity": {
        "cognitive": 56,
        "cyclomatic": 38,
        "lines": 122,
        "nesting_max": 5
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "EmbeddedTemplateMetadata"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "EmbeddedParameter"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "convert_to_template_resource"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "parse_template_category"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "parse_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "convert_embedded_parameters"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "convert_embedded_parameter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "parse_parameter_type"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "convert_json_value_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "build_s3_object_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "get_category_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 5,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "list_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 13,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "get_template_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "get_template_content"
        }
      ],
      "path": "./src/services/embedded_templates.rs",
      "total_complexity": {
        "cognitive": 60,
        "cyclomatic": 58,
        "lines": 36,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "get_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "put_metadata"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "get_content"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "put_content"
        }
      ],
      "path": "./src/services/old_cache.rs",
      "total_complexity": {
        "cognitive": 2,
        "cyclomatic": 2,
        "lines": 18,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "RustAstStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TypeScriptAstStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "JavaScriptAstStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PythonAstStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "StrategyRegistry"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustAstStrategy::analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "RustAstStrategy::supports_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptAstStrategy::analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TypeScriptAstStrategy::supports_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JavaScriptAstStrategy::analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "JavaScriptAstStrategy::supports_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PythonAstStrategy::analyze"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PythonAstStrategy::supports_extension"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "StrategyRegistry::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StrategyRegistry::get_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StrategyRegistry::register_strategy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "StrategyRegistry::default"
        }
      ],
      "path": "./src/services/ast_strategies.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 46,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DagCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ChurnCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GitStats"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "AstCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 5,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "AstCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "TemplateCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 7,
            "lines": 11,
            "nesting_max": 6
          },
          "name": "DagCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ChurnCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "ChurnCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ChurnCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ChurnCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ChurnCacheStrategy::get_git_head"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy::cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy::validate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy::ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy::max_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy::get_current_branch"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GitStatsCacheStrategy::get_git_head"
        }
      ],
      "path": "./src/services/cache/strategies.rs",
      "total_complexity": {
        "cognitive": 48,
        "cyclomatic": 26,
        "lines": 98,
        "nesting_max": 6
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PersistentCacheManager"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "PersistentCacheManager::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "PersistentCacheManager::with_default_dir"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "PersistentCacheManager::default_cache_dir"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "PersistentCacheManager::get_or_compute_ast"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PersistentCacheManager::cleanup_expired"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PersistentCacheManager::clear"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 19,
            "nesting_max": 1
          },
          "name": "PersistentCacheManager::get_diagnostics"
        }
      ],
      "path": "./src/services/cache/persistent_manager.rs",
      "total_complexity": {
        "cognitive": 18,
        "cyclomatic": 18,
        "lines": 70,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SessionCacheManager"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "SessionCacheManager::get_or_compute_ast"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "SessionCacheManager::get_or_compute_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "SessionCacheManager::get_or_compute_dag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "SessionCacheManager::get_or_compute_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "SessionCacheManager::get_or_compute_git_stats"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::memory_pressure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::get_total_cache_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 3
          },
          "name": "SessionCacheManager::evict_if_needed"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::clear_all"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::invalidate_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::invalidate_directory"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "SessionCacheManager::get_diagnostics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "SessionCacheManager::calculate_effectiveness"
        }
      ],
      "path": "./src/services/cache/manager.rs",
      "total_complexity": {
        "cognitive": 32,
        "cyclomatic": 30,
        "lines": 166,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/services/cache/mod.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ContentCache"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheMetrics"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ContentCache::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 4,
            "lines": 19,
            "nesting_max": 3
          },
          "name": "ContentCache::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "ContentCache::put"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "ContentCache::clear"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "ContentCache::evict_lru"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ContentCache::len"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ContentCache::is_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ContentCache::estimate_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "ContentCache::metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "ContentCache::hot_entries"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "ContentCache::invalidate_matching"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheMetrics::memory_mb"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ContentCache::clone"
        }
      ],
      "path": "./src/services/cache/content_cache.rs",
      "total_complexity": {
        "cognitive": 20,
        "cyclomatic": 18,
        "lines": 122,
        "nesting_max": 3
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheEntry"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheStats"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheEntry::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "CacheEntry::access"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheEntry::age"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheEntry::last_accessed_duration"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::record_hit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::record_miss"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::record_eviction"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::add_bytes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::remove_bytes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "CacheStats::hit_rate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::total_requests"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::memory_usage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStats::default"
        }
      ],
      "path": "./src/services/cache/base.rs",
      "total_complexity": {
        "cognitive": 2,
        "cyclomatic": 2,
        "lines": 38,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheDiagnostics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheStatsSnapshot"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheEffectiveness"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheDiagnosticReport"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheStatsSnapshot::from"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 6,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "CacheDiagnosticReport::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheDiagnosticReport::is_healthy"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 24,
            "nesting_max": 1
          },
          "name": "format_prometheus_metrics"
        }
      ],
      "path": "./src/services/cache/diagnostics.rs",
      "total_complexity": {
        "cognitive": 18,
        "cyclomatic": 16,
        "lines": 54,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [],
      "path": "./src/services/cache/cache_trait.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 0,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CacheConfig"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 12,
            "nesting_max": 2
          },
          "name": "CacheConfig::from_env"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::ast_ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::template_ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::dag_ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::churn_ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::git_stats_ttl"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "CacheConfig::max_memory_bytes"
        }
      ],
      "path": "./src/services/cache/config.rs",
      "total_complexity": {
        "cognitive": 16,
        "cyclomatic": 16,
        "lines": 38,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PersistentCacheEntry"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PersistentCache"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "PersistentCacheEntry::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "PersistentCacheEntry::age"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "PersistentCacheEntry::into_cache_entry"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "PersistentCache::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "PersistentCache::cache_file_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 9,
            "lines": 15,
            "nesting_max": 3
          },
          "name": "PersistentCache::load_from_disk"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 4,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "PersistentCache::load_cache_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 19,
            "cyclomatic": 10,
            "lines": 44,
            "nesting_max": 5
          },
          "name": "PersistentCache::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "PersistentCache::put"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PersistentCache::estimate_size"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 28,
            "cyclomatic": 12,
            "lines": 22,
            "nesting_max": 7
          },
          "name": "PersistentCache::cleanup_expired"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PersistentCache::len"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PersistentCache::is_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 3
          },
          "name": "PersistentCache::clear"
        }
      ],
      "path": "./src/services/cache/persistent.rs",
      "total_complexity": {
        "cognitive": 152,
        "cyclomatic": 84,
        "lines": 258,
        "nesting_max": 7
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectWeights"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FileMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DefectScore"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectDefectAnalysis"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefectWeights::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::with_weights"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "DefectProbabilityCalculator::calculate"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::calculate_batch"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::normalize_churn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::normalize_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::normalize_duplication"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::normalize_coupling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "DefectProbabilityCalculator::calculate_confidence"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 26,
            "cyclomatic": 11,
            "lines": 21,
            "nesting_max": 4
          },
          "name": "DefectProbabilityCalculator::generate_recommendations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "interpolate_cdf"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 6,
            "lines": 21,
            "nesting_max": 2
          },
          "name": "ProjectDefectAnalysis::from_scores"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "ProjectDefectAnalysis::get_top_risk_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DefectProbabilityCalculator::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_defect_probability_calculation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_cdf_interpolation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_project_analysis"
        }
      ],
      "path": "./src/services/defect_probability.rs",
      "total_complexity": {
        "cognitive": 94,
        "cyclomatic": 57,
        "lines": 184,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "TemplateRenderer"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "TemplateRenderer::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "render_template"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_template_renderer_new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_render_template_simple"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_render_template_with_current_timestamp"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_render_template_with_helpers"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_render_template_missing_variable"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 7,
            "nesting_max": 1
          },
          "name": "test_render_template_error"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "test_render_template_with_conditionals"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_render_template_preserves_original_context"
        }
      ],
      "path": "./src/services/renderer.rs",
      "total_complexity": {
        "cognitive": 3,
        "cyclomatic": 3,
        "lines": 79,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DagBuilder"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagBuilder::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "DagBuilder::build_from_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 8,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "DagBuilder::finalize_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "DagBuilder::build_from_project_with_limit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 7,
            "lines": 19,
            "nesting_max": 2
          },
          "name": "DagBuilder::collect_nodes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 8,
            "lines": 10,
            "nesting_max": 4
          },
          "name": "DagBuilder::process_relationships"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagBuilder::add_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagBuilder::add_edge"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "DagBuilder::calculate_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 10,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "DagBuilder::enrich_node"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagBuilder::normalize_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "DagBuilder::path_to_module"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagBuilder::extract_module_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "DagBuilder::resolve_import_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DagBuilder::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "filter_call_edges"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "filter_import_edges"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "filter_inheritance_edges"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 6,
            "lines": 17,
            "nesting_max": 4
          },
          "name": "prune_graph_pagerank"
        }
      ],
      "path": "./src/services/dag_builder.rs",
      "total_complexity": {
        "cognitive": 147,
        "cyclomatic": 110,
        "lines": 194,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AnalysisContext"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CallGraph"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CallNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "CallEdge"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "QueryResult"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GraphMetadata"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "SystemArchitectureQuery"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Component"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComponentEdge"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ComponentMetrics"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "SystemArchitectureQuery::query_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "SystemArchitectureQuery::execute"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "detect_architectural_components"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 26,
            "cyclomatic": 11,
            "lines": 17,
            "nesting_max": 4
          },
          "name": "infer_component_relationships"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 4,
            "lines": 17,
            "nesting_max": 3
          },
          "name": "aggregate_component_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 30,
            "cyclomatic": 16,
            "lines": 18,
            "nesting_max": 3
          },
          "name": "generate_styled_architecture_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "sanitize_component_id"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "humanize_component_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "collect_component_nodes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "merge_coupled_components"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "calculate_graph_diameter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "ComponentEdgeType::clone"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComponentEdgeType::hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "ComponentEdgeType::eq"
        }
      ],
      "path": "./src/services/canonical_query.rs",
      "total_complexity": {
        "cognitive": 87,
        "cyclomatic": 56,
        "lines": 91,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "LanguageParsers"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "AstForest"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ModuleNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ModuleMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ProjectMetrics"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ArtifactTree"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MermaidArtifacts"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "Template"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LanguageParsers::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "LanguageParsers::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstForest::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstForest::add_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstForest::files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "AstForest::get"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "FileAst::fmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "FileAst::root_visibility"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::generate_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 4,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "UnifiedAstEngine::parse_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 22,
            "cyclomatic": 11,
            "lines": 13,
            "nesting_max": 4
          },
          "name": "UnifiedAstEngine::collect_source_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 2
          },
          "name": "UnifiedAstEngine::is_source_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 14,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "UnifiedAstEngine::parse_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::parse_makefile"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 31,
            "cyclomatic": 12,
            "lines": 18,
            "nesting_max": 7
          },
          "name": "UnifiedAstEngine::extract_dependencies"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::path_to_module_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 9,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "UnifiedAstEngine::compute_node_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "UnifiedAstEngine::resolve_rust_imports"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "UnifiedAstEngine::compute_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::generate_dogfooding_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "UnifiedAstEngine::generate_ast_context"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::generate_combined_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::generate_complexity_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::generate_mermaid_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 3
          },
          "name": "UnifiedAstEngine::extract_embedded_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 3
          },
          "name": "UnifiedAstEngine::extract_rust_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "UnifiedAstEngine::compute_tree_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "UnifiedAstEngine::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_deterministic_artifact_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_path_to_module_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_is_source_file"
        }
      ],
      "path": "./src/services/unified_ast_engine.rs",
      "total_complexity": {
        "cognitive": 262,
        "cyclomatic": 172,
        "lines": 358,
        "nesting_max": 7
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "GraphConfig"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FixedGraph"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FixedNode"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "FixedGraphBuilder"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "GraphConfig::default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "FixedGraphBuilder::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "FixedGraphBuilder::with_max_nodes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "FixedGraphBuilder::with_max_edges"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "FixedGraphBuilder::build"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "FixedGraphBuilder::group_by_module"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 9,
            "lines": 6,
            "nesting_max": 3
          },
          "name": "FixedGraphBuilder::get_module_name"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 8,
            "lines": 26,
            "nesting_max": 5
          },
          "name": "FixedGraphBuilder::calculate_pagerank"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "FixedGraphBuilder::select_top_nodes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 6,
            "lines": 16,
            "nesting_max": 3
          },
          "name": "FixedGraphBuilder::build_with_budget"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "create_test_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_deterministic_build"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_node_limit"
        }
      ],
      "path": "./src/services/fixed_graph_builder.rs",
      "total_complexity": {
        "cognitive": 74,
        "cyclomatic": 54,
        "lines": 168,
        "nesting_max": 5
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "PythonComplexityVisitor"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "analyze_python_file_with_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "analyze_python_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 12,
            "lines": 18,
            "nesting_max": 3
          },
          "name": "analyze_python_file_with_classifier"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 26,
            "cyclomatic": 18,
            "lines": 21,
            "nesting_max": 3
          },
          "name": "extract_python_items"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PythonComplexityVisitor::new"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "PythonComplexityVisitor::enter_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "PythonComplexityVisitor::exit_nesting"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::add_complexity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 14,
            "cyclomatic": 14,
            "lines": 14,
            "nesting_max": 2
          },
          "name": "PythonComplexityVisitor::visit_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "PythonComplexityVisitor::visit_expr"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 4,
            "lines": 16,
            "nesting_max": 3
          },
          "name": "PythonComplexityVisitor::visit_function_def"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::visit_class_def"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "PythonComplexityVisitor::visit_if_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::visit_for_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::visit_async_for_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::visit_while_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 10,
            "nesting_max": 2
          },
          "name": "PythonComplexityVisitor::visit_match_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 9,
            "cyclomatic": 7,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "PythonComplexityVisitor::visit_try_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::visit_with_stmt"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "PythonComplexityVisitor::visit_async_with_stmt"
        }
      ],
      "path": "./src/services/ast_python.rs",
      "total_complexity": {
        "cognitive": 155,
        "cyclomatic": 138,
        "lines": 305,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "main"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "verify_dependency_versions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "download_and_compress_assets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "setup_asset_directories"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "get_asset_definitions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "process_assets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "should_skip_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "ensure_asset_downloaded"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 7,
            "lines": 7,
            "nesting_max": 3
          },
          "name": "download_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "handle_download_failure"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "compress_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "create_compressed_data"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 3,
            "nesting_max": 2
          },
          "name": "write_compressed_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "set_asset_hash_env"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 7,
            "lines": 24,
            "nesting_max": 3
          },
          "name": "compress_templates"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 7,
            "lines": 8,
            "nesting_max": 3
          },
          "name": "collect_template_files"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "read_template_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "serde_json_to_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "generate_hex_string"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "generate_template_code"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "minify_demo_assets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "minify_js_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "minify_css_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "copy_demo_asset"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "simple_js_minify"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "simple_css_minify"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 6,
            "lines": 12,
            "nesting_max": 3
          },
          "name": "calculate_asset_hash"
        }
      ],
      "path": "./build.rs",
      "total_complexity": {
        "cognitive": 70,
        "cyclomatic": 60,
        "lines": 150,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_demo_mode_in_current_directory"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_demo_mode_with_json_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_demo_mode_with_specific_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 18,
            "nesting_max": 2
          },
          "name": "test_demo_increases_test_coverage"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_demo_runner_execution"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_repository_detection"
        }
      ],
      "path": "./tests/demo_integration.rs",
      "total_complexity": {
        "cognitive": 22,
        "cyclomatic": 22,
        "lines": 49,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "create_test_export_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "create_test_churn_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 24,
            "nesting_max": 0
          },
          "name": "test_markdown_export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_json_export_pretty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_json_export_compact"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 19,
            "nesting_max": 0
          },
          "name": "test_sarif_export"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_export_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 17,
            "nesting_max": 0
          },
          "name": "test_export_service_save_to_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 25,
            "nesting_max": 0
          },
          "name": "test_create_export_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_export_without_optional_data"
        }
      ],
      "path": "./tests/export_integration.rs",
      "total_complexity": {
        "cognitive": 7,
        "cyclomatic": 7,
        "lines": 130,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_enhanced_dag_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_enhanced_analysis_backward_compatibility"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_enhanced_flags_combinations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_enhanced_dag_help"
        }
      ],
      "path": "./tests/enhanced_dag_integration.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 33,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 16,
            "nesting_max": 1
          },
          "name": "test_regression_empty_nodes_bug"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_mermaid_label_escaping"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_node_types_have_labels"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_complexity_styled_diagram_has_labels"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_empty_graph_doesnt_crash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "test_special_characters_in_node_ids"
        }
      ],
      "path": "./tests/mermaid_empty_bug_fix_test.rs",
      "total_complexity": {
        "cognitive": 9,
        "cyclomatic": 9,
        "lines": 54,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DocumentedCommand"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 11,
            "lines": 30,
            "nesting_max": 4
          },
          "name": "parse_documented_cli_commands"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 10,
            "cyclomatic": 7,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "parse_cli_help_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "get_binary_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "test_cli_commands_match_documentation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 4,
            "lines": 10,
            "nesting_max": 3
          },
          "name": "test_cli_subcommands_match_documentation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 5,
            "lines": 13,
            "nesting_max": 4
          },
          "name": "test_cli_options_match_documentation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "test_no_undocumented_commands"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 27,
            "cyclomatic": 16,
            "lines": 37,
            "nesting_max": 4
          },
          "name": "test_documentation_examples_are_valid"
        }
      ],
      "path": "./tests/cli_documentation_sync.rs",
      "total_complexity": {
        "cognitive": 75,
        "cyclomatic": 50,
        "lines": 136,
        "nesting_max": 4
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_config_loading_from_file"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 21,
            "nesting_max": 0
          },
          "name": "test_config_hot_reload"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_config_default_values"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_config_accessor_methods"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_invalid_config_file"
        }
      ],
      "path": "./tests/config_integration.rs",
      "total_complexity": {
        "cognitive": 13,
        "cyclomatic": 13,
        "lines": 68,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "test_demo_server_startup_and_shutdown"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 33,
            "nesting_max": 0
          },
          "name": "test_demo_server_api_endpoints"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 9,
            "nesting_max": 1
          },
          "name": "test_demo_server_static_assets"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 7,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "test_demo_server_concurrent_requests"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_demo_server_response_headers"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_demo_content_rendering"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_demo_server_starts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_demo_content_from_analysis"
        }
      ],
      "path": "./tests/demo_web_integration.rs",
      "total_complexity": {
        "cognitive": 14,
        "cyclomatic": 10,
        "lines": 107,
        "nesting_max": 2
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_unified_ast_engine_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 14,
            "nesting_max": 1
          },
          "name": "test_mermaid_generation_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 26,
            "nesting_max": 1
          },
          "name": "test_dogfooding_engine_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_artifact_writer_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_pagerank_numerical_stability"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 9,
            "nesting_max": 2
          },
          "name": "test_hash_collision_resistance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 18,
            "nesting_max": 1
          },
          "name": "test_file_ordering_stability"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_edge_case_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "test_concurrent_generation_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "create_test_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "create_test_dependency_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 16,
            "nesting_max": 2
          },
          "name": "create_large_test_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "create_single_node_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 11,
            "nesting_max": 0
          },
          "name": "create_cyclic_graph"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "create_test_artifact_tree"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "compute_tree_hash"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "normalize_manifest"
        }
      ],
      "path": "./tests/determinism_tests.rs",
      "total_complexity": {
        "cognitive": 27,
        "cyclomatic": 27,
        "lines": 195,
        "nesting_max": 2
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DocumentedTool"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "McpResponse"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ToolDefinition"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 16,
            "cyclomatic": 6,
            "lines": 19,
            "nesting_max": 5
          },
          "name": "parse_documented_mcp_tools"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "get_binary_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 22,
            "nesting_max": 2
          },
          "name": "send_mcp_request"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "test_mcp_tools_match_documentation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 18,
            "cyclomatic": 7,
            "lines": 18,
            "nesting_max": 5
          },
          "name": "test_mcp_tool_schemas_match_documentation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "test_mcp_methods_match_documentation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 11,
            "nesting_max": 2
          },
          "name": "test_mcp_error_codes_are_complete"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 13,
            "nesting_max": 3
          },
          "name": "test_no_undocumented_mcp_tools"
        }
      ],
      "path": "./tests/mcp_documentation_sync.rs",
      "total_complexity": {
        "cognitive": 57,
        "cyclomatic": 35,
        "lines": 114,
        "nesting_max": 5
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 19,
            "nesting_max": 0
          },
          "name": "generate_test_mermaid"
        }
      ],
      "path": "./tests/generate_mermaid_test.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 19,
        "nesting_max": 0
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "MermaidArtifactSpec"
        },
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DiagramMetrics"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "ArtifactCategory::path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "get_artifact_specs"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "generate_simple_architecture"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "generate_styled_workflow"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "generate_ast_simple"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "generate_ast_styled"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "validate_simple_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "validate_styled_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "validate_ast_diagram"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "validate_complexity_styled"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 17,
            "nesting_max": 2
          },
          "name": "test_generate_all_artifacts"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 17,
            "cyclomatic": 7,
            "lines": 53,
            "nesting_max": 6
          },
          "name": "test_maintain_mermaid_readme"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "format_category_title"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 6,
            "cyclomatic": 6,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "analyze_diagram_metrics"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "calculate_graph_depth"
        }
      ],
      "path": "./tests/mermaid_artifact_tests.rs",
      "total_complexity": {
        "cognitive": 71,
        "cyclomatic": 61,
        "lines": 148,
        "nesting_max": 6
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "detect_execution_mode_test"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_execution_mode_detection_with_mcp_version"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_execution_mode_detection_without_mcp_version"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_env_filter_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_server_creation_logic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_mcp_version_environment_variable"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_argument_count_behavior"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_async_runtime_setup"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_tracing_initialization"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_terminal_detection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_error_handling_setup"
        }
      ],
      "path": "./tests/execution_mode.rs",
      "total_complexity": {
        "cognitive": 4,
        "cyclomatic": 4,
        "lines": 45,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_execution_mode_detection"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_cli_run_generate_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_ast_rust_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 21,
            "nesting_max": 0
          },
          "name": "test_complexity_service"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_dag_builder"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 24,
            "nesting_max": 1
          },
          "name": "test_mcp_handlers"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_binary_main_logic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_cli_functions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_ast_error_handling"
        }
      ],
      "path": "./tests/services_integration.rs",
      "total_complexity": {
        "cognitive": 4,
        "cyclomatic": 4,
        "lines": 107,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_demo_runner_as_library"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_config_manager_as_library"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 7,
            "cyclomatic": 7,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_export_service_as_library"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_programmatic_demo_with_custom_config"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_export_formats_discovery"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 17,
            "nesting_max": 1
          },
          "name": "test_end_to_end_library_usage"
        }
      ],
      "path": "./tests/demo_core_extraction.rs",
      "total_complexity": {
        "cognitive": 23,
        "cyclomatic": 23,
        "lines": 69,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "get_binary_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_cli_examples_are_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 7,
            "nesting_max": 2
          },
          "name": "process_bash_code_block"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 8,
            "cyclomatic": 8,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "should_skip_line"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "has_complex_shell_features"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "is_non_toolkit_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 13,
            "nesting_max": 2
          },
          "name": "handle_multiline_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "validate_command"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "validate_binary_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "validate_command_arguments"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_mcp_json_examples_are_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 1,
            "nesting_max": 1
          },
          "name": "validate_json_block"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 2,
            "nesting_max": 1
          },
          "name": "validate_parsed_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "validate_json_rpc_object"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 3,
            "nesting_max": 1
          },
          "name": "validate_json_array_fallback"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "validate_batch_request_array"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "test_yaml_examples_are_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 7,
            "lines": 11,
            "nesting_max": 4
          },
          "name": "test_jsonc_examples_are_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "test_template_uri_examples_are_valid"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "test_performance_numbers_are_reasonable"
        }
      ],
      "path": "./tests/documentation_examples.rs",
      "total_complexity": {
        "cognitive": 58,
        "cyclomatic": 49,
        "lines": 121,
        "nesting_max": 4
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "DemoServer"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 10,
            "nesting_max": 1
          },
          "name": "DemoServer::spawn"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 12,
            "cyclomatic": 7,
            "lines": 16,
            "nesting_max": 4
          },
          "name": "DemoServer::parse_port_from_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 9,
            "nesting_max": 3
          },
          "name": "DemoServer::wait_for_server_ready"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 1,
            "nesting_max": 0
          },
          "name": "DemoServer::url"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "DemoServer::drop"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 11,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "create_test_repository"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 15,
            "nesting_max": 0
          },
          "name": "test_demo_server_happy_path"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 13,
            "cyclomatic": 13,
            "lines": 33,
            "nesting_max": 2
          },
          "name": "test_api_contract_compliance"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 11,
            "lines": 15,
            "nesting_max": 2
          },
          "name": "test_concurrent_requests"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 17,
            "nesting_max": 1
          },
          "name": "test_performance_assertions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 4,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_error_handling"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 11,
            "cyclomatic": 8,
            "lines": 29,
            "nesting_max": 4
          },
          "name": "test_analysis_pipeline_integrity"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 3,
            "cyclomatic": 3,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_data_source_indicators"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 5,
            "cyclomatic": 5,
            "lines": 13,
            "nesting_max": 0
          },
          "name": "test_mermaid_diagram_rendering"
        }
      ],
      "path": "./tests/demo_e2e_integration.rs",
      "total_complexity": {
        "cognitive": 108,
        "cyclomatic": 89,
        "lines": 235,
        "nesting_max": 4
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_complexity_metrics_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_complexity_metrics_default"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_function_complexity_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_class_complexity_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_file_complexity_metrics_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 8,
            "nesting_max": 0
          },
          "name": "test_compute_complexity_cache_key"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_aggregate_results_empty"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_aggregate_results_with_data"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_format_complexity_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_format_complexity_report"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_format_as_sarif"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 3,
            "nesting_max": 0
          },
          "name": "test_stateless_template_server_creation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "test_stateless_template_server_basic_operations"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 22,
            "nesting_max": 1
          },
          "name": "test_various_helper_functions"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_error_handling_coverage"
        }
      ],
      "path": "./tests/complexity_metrics.rs",
      "total_complexity": {
        "cognitive": 1,
        "cyclomatic": 1,
        "lines": 96,
        "nesting_max": 1
      }
    },
    {
      "classes": [
        {
          "line_end": 100,
          "line_start": 1,
          "methods": [],
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 0,
            "nesting_max": 0
          },
          "name": "ErrorCase"
        }
      ],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 10,
            "nesting_max": 0
          },
          "name": "test_generate_makefile_e2e"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_generate_missing_required_params"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_generate_invalid_template_uri"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_generate_to_stdout"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_scaffold_parallel_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 4,
            "cyclomatic": 3,
            "lines": 14,
            "nesting_max": 3
          },
          "name": "test_list_json_output_schema"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_list_table_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_list_yaml_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_list_filtered_by_toolchain"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 6,
            "nesting_max": 1
          },
          "name": "test_list_filtered_by_category"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_search_basic"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_search_with_limit"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_search_with_toolchain_filter"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_validate_success"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_validate_missing_required"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_context_generation_rust"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_context_markdown_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 8,
            "nesting_max": 2
          },
          "name": "test_analyze_churn_json_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 2,
            "cyclomatic": 2,
            "lines": 6,
            "nesting_max": 2
          },
          "name": "test_analyze_churn_csv_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 4,
            "nesting_max": 0
          },
          "name": "test_analyze_complexity_summary"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 1
          },
          "name": "test_analyze_complexity_sarif_format"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_analyze_dag_mermaid_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 5,
            "nesting_max": 1
          },
          "name": "test_error_propagation_and_codes"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_help_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_version_output"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 4,
            "nesting_max": 1
          },
          "name": "test_subcommand_help"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_analyze_subcommand_help"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 7,
            "nesting_max": 0
          },
          "name": "test_environment_variable_expansion"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 2,
            "nesting_max": 0
          },
          "name": "test_mode_flag_cli"
        }
      ],
      "path": "./tests/cli_comprehensive_integration.rs",
      "total_complexity": {
        "cognitive": 13,
        "cyclomatic": 12,
        "lines": 136,
        "nesting_max": 3
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 6,
            "nesting_max": 0
          },
          "name": "create_test_rust_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 32,
            "nesting_max": 1
          },
          "name": "test_ast_to_dag_metadata_propagation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 23,
            "nesting_max": 0
          },
          "name": "test_pipeline_determinism"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 11,
            "nesting_max": 1
          },
          "name": "test_pipeline_with_complex_project"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 8,
            "nesting_max": 1
          },
          "name": "test_edge_budget_enforcement"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_individual_file_analysis"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_mermaid_output_quality"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 14,
            "nesting_max": 0
          },
          "name": "test_metadata_serialization"
        }
      ],
      "path": "./tests/ast_dag_mermaid_pipeline.rs",
      "total_complexity": {
        "cognitive": 4,
        "cyclomatic": 4,
        "lines": 120,
        "nesting_max": 1
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 5,
            "nesting_max": 0
          },
          "name": "test_binary_version_flag"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "test_binary_json_rpc_initialize"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 9,
            "nesting_max": 0
          },
          "name": "test_binary_invalid_json"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 16,
            "nesting_max": 0
          },
          "name": "test_binary_multiple_requests"
        }
      ],
      "path": "./tests/bin_integration.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 42,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 37,
            "nesting_max": 0
          },
          "name": "generate_example_mermaid_diagram"
        }
      ],
      "path": "./tests/generate_mermaid_example.rs",
      "total_complexity": {
        "cognitive": 0,
        "cyclomatic": 0,
        "lines": 37,
        "nesting_max": 0
      }
    },
    {
      "classes": [],
      "functions": [
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 12,
            "nesting_max": 0
          },
          "name": "benchmark_cli_parsing"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 0,
            "cyclomatic": 0,
            "lines": 22,
            "nesting_max": 0
          },
          "name": "benchmark_template_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 15,
            "cyclomatic": 12,
            "lines": 30,
            "nesting_max": 2
          },
          "name": "benchmark_dag_generation"
        },
        {
          "line_end": 11,
          "line_start": 1,
          "metrics": {
            "cognitive": 1,
            "cyclomatic": 1,
            "lines": 13,
            "nesting_max": 1
          },
          "name": "benchmark_context_generation"
        }
      ],
      "path": "./benches/critical_path.rs",
      "total_complexity": {
        "cognitive": 16,
        "cyclomatic": 13,
        "lines": 77,
        "nesting_max": 2
      }
    }
  ],
  "hotspots": [
    {
      "complexity": 32,
      "complexity_type": "cyclomatic",
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_system_architecture",
      "line": 1
    },
    {
      "complexity": 25,
      "complexity_type": "cyclomatic",
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "is_function_call",
      "line": 1
    },
    {
      "complexity": 23,
      "complexity_type": "cyclomatic",
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "function": "RecursiveExpansionRule::check",
      "line": 1
    },
    {
      "complexity": 22,
      "complexity_type": "cyclomatic",
      "file": "./src/demo/runner.rs",
      "function": "detect_repository",
      "line": 1
    },
    {
      "complexity": 19,
      "complexity_type": "cyclomatic",
      "file": "./src/demo/runner.rs",
      "function": "DemoReport::render_step_highlights",
      "line": 1
    },
    {
      "complexity": 19,
      "complexity_type": "cyclomatic",
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_complexity",
      "line": 1
    },
    {
      "complexity": 19,
      "complexity_type": "cyclomatic",
      "file": "./src/unified_protocol/adapters/cli.rs",
      "function": "CliInput::from_commands",
      "line": 1
    },
    {
      "complexity": 19,
      "complexity_type": "cyclomatic",
      "file": "./src/services/mermaid_generator.rs",
      "function": "validate_node_definitions",
      "line": 1
    },
    {
      "complexity": 18,
      "complexity_type": "cyclomatic",
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_satd",
      "line": 1
    },
    {
      "complexity": 18,
      "complexity_type": "cyclomatic",
      "file": "./src/unified_protocol/service.rs",
      "function": "mcp_endpoint",
      "line": 1
    }
  ],
  "summary": {
    "max_cognitive": 57,
    "max_cyclomatic": 32,
    "median_cognitive": 0,
    "median_cyclomatic": 0,
    "p90_cognitive": 8,
    "p90_cyclomatic": 6,
    "technical_debt_hours": 242.5,
    "total_files": 145,
    "total_functions": 2228
  },
  "violations": [
    {
      "file": "./src/demo/mod.rs",
      "function": "extract_analysis_from_demo_report",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/demo/mod.rs",
      "function": "extract_analysis_from_demo_report",
      "line": 1,
      "message": "Cognitive complexity of 31 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 31
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "DemoRunner::clone_and_prepare",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "DemoRunner::clone_and_prepare",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "DemoRunner::execute_with_diagram",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "DemoReport::render_step_highlights",
      "line": 1,
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 19
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "DemoReport::render_step_highlights",
      "line": 1,
      "message": "Cognitive complexity of 28 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 28
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "detect_repository",
      "line": 1,
      "message": "Cyclomatic complexity of 22 exceeds maximum allowed complexity of 20",
      "rule": "cyclomatic-complexity",
      "severity": "error",
      "threshold": 20,
      "value": 22
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "detect_repository",
      "line": 1,
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 23
    },
    {
      "file": "./src/tests/analyze_cli_tests.rs",
      "function": "test_analyze_churn_command_parsing",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/tests/analyze_cli_tests.rs",
      "function": "test_analyze_churn_command_parsing",
      "line": 1,
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 20
    },
    {
      "file": "./src/tests/analyze_cli_tests.rs",
      "function": "test_analyze_churn_with_all_options",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/tests/analyze_cli_tests.rs",
      "function": "test_analyze_churn_with_all_options",
      "line": 1,
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 20
    },
    {
      "file": "./src/tests/analyze_cli_tests.rs",
      "function": "test_analyze_churn_format_options",
      "line": 1,
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 23
    },
    {
      "file": "./src/tests/deep_context_tests.rs",
      "function": "test_enum_variants_complete",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/tests/cli_comprehensive_tests.rs",
      "function": "test_list_command_all_formats",
      "line": 1,
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 20
    },
    {
      "file": "./src/tests/cli_comprehensive_tests.rs",
      "function": "test_nested_subcommand_parsing",
      "line": 1,
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 23
    },
    {
      "file": "./src/tests/deep_context_simplified_tests.rs",
      "function": "test_enum_variants_complete",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/tests/build_naming_validation.rs",
      "function": "test_workspace_aware_cargo_commands_in_makefile",
      "line": 1,
      "message": "Cognitive complexity of 19 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 19
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "execute_command",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "detect_primary_language",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_dag",
      "line": 1,
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 15
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_dag",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_complexity",
      "line": 1,
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 19
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_complexity",
      "line": 1,
      "message": "Cognitive complexity of 24 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 24
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_satd",
      "line": 1,
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 18
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_satd",
      "line": 1,
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 26
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_deep_context_comprehensive",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_tree_node",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_churn_analysis",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_technical_debt",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_technical_debt",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_dead_code_analysis",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_dead_code_analysis",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_defect_predictions",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_prioritized_recommendations",
      "line": 1,
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 17
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_prioritized_recommendations",
      "line": 1,
      "message": "Cognitive complexity of 39 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 39
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_deep_context_as_sarif",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_deep_context_as_sarif",
      "line": 1,
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 21
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_satd_as_markdown",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_satd_as_markdown",
      "line": 1,
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 21
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_dead_code_summary",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_dead_code_summary",
      "line": 1,
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 27
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_tdg",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_makefile",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_makefile_human",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "format_makefile_human",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./src/unified_protocol/adapters/cli.rs",
      "function": "CliInput::from_commands",
      "line": 1,
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 19
    },
    {
      "file": "./src/unified_protocol/adapters/cli.rs",
      "function": "CliInput::from_commands",
      "line": 1,
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 27
    },
    {
      "file": "./src/unified_protocol/adapters/mcp.rs",
      "function": "McpAdapter::encode",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/unified_protocol/test_harness.rs",
      "function": "TestHarness::test_endpoint",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/unified_protocol/error.rs",
      "function": "AppError::error_type",
      "line": 1,
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 15
    },
    {
      "file": "./src/unified_protocol/service.rs",
      "function": "DefaultAnalysisService::analyze_dag",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/unified_protocol/service.rs",
      "function": "analyze_deep_context",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./src/unified_protocol/service.rs",
      "function": "analyze_deep_context",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/unified_protocol/service.rs",
      "function": "mcp_endpoint",
      "line": 1,
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 18
    },
    {
      "file": "./src/unified_protocol/service.rs",
      "function": "mcp_endpoint",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/lib.rs",
      "function": "run_mcp_server",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/lib.rs",
      "function": "run_mcp_server",
      "line": 1,
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 20
    },
    {
      "file": "./src/handlers/prompts.rs",
      "function": "handle_prompt_get",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analysis_tools",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_scaffold_project",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_scaffold_project",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_code_churn",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_dag",
      "line": 1,
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 17
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_dag",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_generate_context",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_system_architecture",
      "line": 1,
      "message": "Cyclomatic complexity of 32 exceeds maximum allowed complexity of 20",
      "rule": "cyclomatic-complexity",
      "severity": "error",
      "threshold": 20,
      "value": 32
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_system_architecture",
      "line": 1,
      "message": "Cognitive complexity of 45 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 45
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "format_dead_code_output",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "format_dead_code_summary_mcp",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/handlers/tools.rs",
      "function": "parse_analysis_types",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/services/code_intelligence.rs",
      "function": "CodeIntelligence::analyze_project",
      "line": 1,
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 23
    },
    {
      "file": "./src/services/context.rs",
      "function": "calculate_item_counts",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/services/context.rs",
      "function": "group_items_by_type",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/context.rs",
      "function": "count_ast_items",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_as_sarif",
      "line": 1,
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 15
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_as_sarif",
      "line": 1,
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 30
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_tree_node",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::categorize_ast_items",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_churn_analysis",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_technical_debt",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_technical_debt",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_dead_code_analysis",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_dead_code_analysis",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_defect_predictions",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_prioritized_recommendations",
      "line": 1,
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 17
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::format_prioritized_recommendations",
      "line": 1,
      "message": "Cognitive complexity of 39 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 39
    },
    {
      "file": "./src/services/deep_context.rs",
      "function": "DeepContextAnalyzer::integrate_analysis_result",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/services/ranking.rs",
      "function": "ComplexityRanker::compute_score",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/complexity.rs",
      "function": "aggregate_results",
      "line": 1,
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 16
    },
    {
      "file": "./src/services/complexity.rs",
      "function": "aggregate_results",
      "line": 1,
      "message": "Cognitive complexity of 24 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 24
    },
    {
      "file": "./src/services/tdg_calculator.rs",
      "function": "TDGCalculator::calculate_churn_factor",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/services/deterministic_mermaid_engine.rs",
      "function": "DeterministicMermaidEngine::generate_service_interactions_mmd",
      "line": 1,
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 17
    },
    {
      "file": "./src/services/deterministic_mermaid_engine.rs",
      "function": "DeterministicMermaidEngine::generate_service_interactions_mmd",
      "line": 1,
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 25
    },
    {
      "file": "./src/services/deterministic_mermaid_engine.rs",
      "function": "DeterministicMermaidEngine::compute_pagerank",
      "line": 1,
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 25
    },
    {
      "file": "./src/services/ast_rust.rs",
      "function": "RustComplexityVisitor::visit_item_impl",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/ast_rust.rs",
      "function": "RustComplexityVisitor::visit_expr",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/services/ast_rust.rs",
      "function": "RustComplexityVisitor::visit_expr",
      "line": 1,
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 26
    },
    {
      "file": "./src/services/mermaid_generator.rs",
      "function": "MermaidGenerator::generate_with_config",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/services/mermaid_generator.rs",
      "function": "MermaidGenerator::generate_with_config",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/services/mermaid_generator.rs",
      "function": "validate_node_definitions",
      "line": 1,
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 19
    },
    {
      "file": "./src/services/mermaid_generator.rs",
      "function": "validate_node_definitions",
      "line": 1,
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 27
    },
    {
      "file": "./src/services/file_discovery.rs",
      "function": "ProjectFileDiscovery::discover_files",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/makefile_linter/parser.rs",
      "function": "MakefileParser::parse_line",
      "line": 1,
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 16
    },
    {
      "file": "./src/services/makefile_linter/parser.rs",
      "function": "MakefileParser::parse_line",
      "line": 1,
      "message": "Cognitive complexity of 31 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 31
    },
    {
      "file": "./src/services/makefile_linter/parser.rs",
      "function": "MakefileParser::find_assignment_or_colon",
      "line": 1,
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 16
    },
    {
      "file": "./src/services/makefile_linter/parser.rs",
      "function": "MakefileParser::find_assignment_or_colon",
      "line": 1,
      "message": "Cognitive complexity of 33 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 33
    },
    {
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "PhonyDeclaredRule::check",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "check_undefined_in_text",
      "line": 1,
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 18
    },
    {
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "check_undefined_in_text",
      "line": 1,
      "message": "Cognitive complexity of 57 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 57
    },
    {
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "is_function_call",
      "line": 1,
      "message": "Cyclomatic complexity of 25 exceeds maximum allowed complexity of 20",
      "rule": "cyclomatic-complexity",
      "severity": "error",
      "threshold": 20,
      "value": 25
    },
    {
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "is_function_call",
      "line": 1,
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 25
    },
    {
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "function": "RecursiveExpansionRule::check",
      "line": 1,
      "message": "Cyclomatic complexity of 23 exceeds maximum allowed complexity of 20",
      "rule": "cyclomatic-complexity",
      "severity": "error",
      "threshold": 20,
      "value": 23
    },
    {
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "function": "RecursiveExpansionRule::check",
      "line": 1,
      "message": "Cognitive complexity of 49 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 49
    },
    {
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "function": "extract_var_refs",
      "line": 1,
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 15
    },
    {
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "function": "extract_var_refs",
      "line": 1,
      "message": "Cognitive complexity of 43 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 43
    },
    {
      "file": "./src/services/makefile_linter/ast.rs",
      "function": "MakefileAst::uses_automatic_variables",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::extract_from_content",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::extract_from_content",
      "line": 1,
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 30
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::analyze_project",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::analyze_project",
      "line": 1,
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 25
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::analyze_directory_with_tests",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::analyze_directory_with_tests",
      "line": 1,
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 20
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::collect_files_recursive",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::collect_files_recursive",
      "line": 1,
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 21
    },
    {
      "file": "./src/services/satd_detector.rs",
      "function": "SATDDetector::generate_metrics",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./src/services/dogfooding_engine.rs",
      "function": "DogfoodingEngine::analyze_single_file",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/dogfooding_engine.rs",
      "function": "DogfoodingEngine::analyze_single_file",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/services/dead_code_analyzer.rs",
      "function": "DeadCodeAnalyzer::classify_dead_code",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./src/services/dead_code_analyzer.rs",
      "function": "DeadCodeAnalyzer::build_reference_graph_from_dep_graph",
      "line": 1,
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 18
    },
    {
      "file": "./src/services/dead_code_analyzer.rs",
      "function": "DeadCodeAnalyzer::build_reference_graph_from_dep_graph",
      "line": 1,
      "message": "Cognitive complexity of 29 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 29
    },
    {
      "file": "./src/services/template_service.rs",
      "function": "validate_parameters",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./src/services/template_service.rs",
      "function": "scaffold_project",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/template_service.rs",
      "function": "scaffold_project",
      "line": 1,
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 20
    },
    {
      "file": "./src/services/template_service.rs",
      "function": "validate_template",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/template_service.rs",
      "function": "validate_template",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/services/git_analysis.rs",
      "function": "GitAnalysisService::get_file_metrics",
      "line": 1,
      "message": "Cognitive complexity of 19 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 19
    },
    {
      "file": "./src/services/embedded_templates.rs",
      "function": "get_template_metadata",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./src/services/embedded_templates.rs",
      "function": "get_template_content",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/cache/strategies.rs",
      "function": "DagCacheStrategy::validate",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./src/services/cache/persistent.rs",
      "function": "PersistentCache::load_from_disk",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/cache/persistent.rs",
      "function": "PersistentCache::get",
      "line": 1,
      "message": "Cognitive complexity of 19 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 19
    },
    {
      "file": "./src/services/cache/persistent.rs",
      "function": "PersistentCache::cleanup_expired",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/cache/persistent.rs",
      "function": "PersistentCache::cleanup_expired",
      "line": 1,
      "message": "Cognitive complexity of 28 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 28
    },
    {
      "file": "./src/services/defect_probability.rs",
      "function": "DefectProbabilityCalculator::generate_recommendations",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/defect_probability.rs",
      "function": "DefectProbabilityCalculator::generate_recommendations",
      "line": 1,
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 26
    },
    {
      "file": "./src/services/canonical_query.rs",
      "function": "infer_component_relationships",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/canonical_query.rs",
      "function": "infer_component_relationships",
      "line": 1,
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 26
    },
    {
      "file": "./src/services/canonical_query.rs",
      "function": "generate_styled_architecture_diagram",
      "line": 1,
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 16
    },
    {
      "file": "./src/services/canonical_query.rs",
      "function": "generate_styled_architecture_diagram",
      "line": 1,
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 30
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::collect_source_files",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::collect_source_files",
      "line": 1,
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 22
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::parse_file",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::parse_file",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::extract_dependencies",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::extract_dependencies",
      "line": 1,
      "message": "Cognitive complexity of 31 exceeds maximum allowed complexity of 30",
      "rule": "cognitive-complexity",
      "severity": "error",
      "threshold": 30,
      "value": 31
    },
    {
      "file": "./src/services/unified_ast_engine.rs",
      "function": "UnifiedAstEngine::compute_node_metrics",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./src/services/ast_python.rs",
      "function": "analyze_python_file_with_classifier",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    },
    {
      "file": "./src/services/ast_python.rs",
      "function": "extract_python_items",
      "line": 1,
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 18
    },
    {
      "file": "./src/services/ast_python.rs",
      "function": "extract_python_items",
      "line": 1,
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 26
    },
    {
      "file": "./src/services/ast_python.rs",
      "function": "PythonComplexityVisitor::visit_stmt",
      "line": 1,
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 14
    },
    {
      "file": "./tests/cli_documentation_sync.rs",
      "function": "parse_documented_cli_commands",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./tests/cli_documentation_sync.rs",
      "function": "parse_documented_cli_commands",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./tests/cli_documentation_sync.rs",
      "function": "test_documentation_examples_are_valid",
      "line": 1,
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 16
    },
    {
      "file": "./tests/cli_documentation_sync.rs",
      "function": "test_documentation_examples_are_valid",
      "line": 1,
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 27
    },
    {
      "file": "./tests/mcp_documentation_sync.rs",
      "function": "parse_documented_mcp_tools",
      "line": 1,
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 16
    },
    {
      "file": "./tests/mcp_documentation_sync.rs",
      "function": "send_mcp_request",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./tests/mcp_documentation_sync.rs",
      "function": "test_mcp_tool_schemas_match_documentation",
      "line": 1,
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 18
    },
    {
      "file": "./tests/mermaid_artifact_tests.rs",
      "function": "test_maintain_mermaid_readme",
      "line": 1,
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "rule": "cognitive-complexity",
      "severity": "warning",
      "threshold": 15,
      "value": 17
    },
    {
      "file": "./tests/demo_e2e_integration.rs",
      "function": "create_test_repository",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./tests/demo_e2e_integration.rs",
      "function": "test_api_contract_compliance",
      "line": 1,
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 13
    },
    {
      "file": "./tests/demo_e2e_integration.rs",
      "function": "test_concurrent_requests",
      "line": 1,
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 11
    },
    {
      "file": "./benches/critical_path.rs",
      "function": "benchmark_dag_generation",
      "line": 1,
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "rule": "cyclomatic-complexity",
      "severity": "warning",
      "threshold": 10,
      "value": 12
    }
  ]
}
