{
  "summary": {
    "total_files": 145,
    "total_functions": 2228,
    "median_cyclomatic": 0.0,
    "median_cognitive": 0.0,
    "max_cyclomatic": 32,
    "max_cognitive": 57,
    "p90_cyclomatic": 6,
    "p90_cognitive": 8,
    "technical_debt_hours": 242.5
  },
  "violations": [
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/demo/mod.rs",
      "line": 1,
      "function": "extract_analysis_from_demo_report"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 31 exceeds maximum allowed complexity of 30",
      "value": 31,
      "threshold": 30,
      "file": "./src/demo/mod.rs",
      "line": 1,
      "function": "extract_analysis_from_demo_report"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "DemoRunner::clone_and_prepare"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "DemoRunner::clone_and_prepare"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "DemoRunner::execute_with_diagram"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "value": 19,
      "threshold": 10,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "DemoReport::render_step_highlights"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 28 exceeds recommended complexity of 15",
      "value": 28,
      "threshold": 15,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "DemoReport::render_step_highlights"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 22 exceeds maximum allowed complexity of 20",
      "value": 22,
      "threshold": 20,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "detect_repository"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "value": 23,
      "threshold": 15,
      "file": "./src/demo/runner.rs",
      "line": 1,
      "function": "detect_repository"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/tests/analyze_cli_tests.rs",
      "line": 1,
      "function": "test_analyze_churn_command_parsing"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./src/tests/analyze_cli_tests.rs",
      "line": 1,
      "function": "test_analyze_churn_command_parsing"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/tests/analyze_cli_tests.rs",
      "line": 1,
      "function": "test_analyze_churn_with_all_options"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./src/tests/analyze_cli_tests.rs",
      "line": 1,
      "function": "test_analyze_churn_with_all_options"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "value": 23,
      "threshold": 15,
      "file": "./src/tests/analyze_cli_tests.rs",
      "line": 1,
      "function": "test_analyze_churn_format_options"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/tests/deep_context_tests.rs",
      "line": 1,
      "function": "test_enum_variants_complete"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./src/tests/cli_comprehensive_tests.rs",
      "line": 1,
      "function": "test_list_command_all_formats"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "value": 23,
      "threshold": 15,
      "file": "./src/tests/cli_comprehensive_tests.rs",
      "line": 1,
      "function": "test_nested_subcommand_parsing"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/tests/deep_context_simplified_tests.rs",
      "line": 1,
      "function": "test_enum_variants_complete"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 19 exceeds recommended complexity of 15",
      "value": 19,
      "threshold": 15,
      "file": "./src/tests/build_naming_validation.rs",
      "line": 1,
      "function": "test_workspace_aware_cargo_commands_in_makefile"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "execute_command"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "detect_primary_language"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "value": 15,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_dag"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_dag"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "value": 19,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_complexity"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 24 exceeds recommended complexity of 15",
      "value": 24,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_complexity"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "value": 18,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_satd"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "value": 26,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_satd"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_deep_context_comprehensive"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_tree_node"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_churn_analysis"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_technical_debt"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_technical_debt"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_dead_code_analysis"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_dead_code_analysis"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_defect_predictions"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "value": 17,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_prioritized_recommendations"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 39 exceeds maximum allowed complexity of 30",
      "value": 39,
      "threshold": 30,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_prioritized_recommendations"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_deep_context_as_sarif"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "value": 21,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_deep_context_as_sarif"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_satd_as_markdown"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "value": 21,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_satd_as_markdown"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_dead_code_summary"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "value": 27,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_dead_code_summary"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_tdg"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "handle_analyze_makefile"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_makefile_human"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./src/cli/mod.rs",
      "line": 1,
      "function": "format_makefile_human"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "value": 19,
      "threshold": 10,
      "file": "./src/unified_protocol/adapters/cli.rs",
      "line": 1,
      "function": "CliInput::from_commands"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "value": 27,
      "threshold": 15,
      "file": "./src/unified_protocol/adapters/cli.rs",
      "line": 1,
      "function": "CliInput::from_commands"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/unified_protocol/adapters/mcp.rs",
      "line": 1,
      "function": "McpAdapter::encode"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/unified_protocol/test_harness.rs",
      "line": 1,
      "function": "TestHarness::test_endpoint"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "value": 15,
      "threshold": 10,
      "file": "./src/unified_protocol/error.rs",
      "line": 1,
      "function": "AppError::error_type"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/unified_protocol/service.rs",
      "line": 1,
      "function": "DefaultAnalysisService::analyze_dag"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/unified_protocol/service.rs",
      "line": 1,
      "function": "analyze_deep_context"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/unified_protocol/service.rs",
      "line": 1,
      "function": "analyze_deep_context"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "value": 18,
      "threshold": 10,
      "file": "./src/unified_protocol/service.rs",
      "line": 1,
      "function": "mcp_endpoint"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/unified_protocol/service.rs",
      "line": 1,
      "function": "mcp_endpoint"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/lib.rs",
      "line": 1,
      "function": "run_mcp_server"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./src/lib.rs",
      "line": 1,
      "function": "run_mcp_server"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/handlers/prompts.rs",
      "line": 1,
      "function": "handle_prompt_get"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_analysis_tools"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_scaffold_project"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_scaffold_project"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_analyze_code_churn"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "value": 17,
      "threshold": 10,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_analyze_dag"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_analyze_dag"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_generate_context"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 32 exceeds maximum allowed complexity of 20",
      "value": 32,
      "threshold": 20,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_analyze_system_architecture"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 45 exceeds maximum allowed complexity of 30",
      "value": 45,
      "threshold": 30,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "handle_analyze_system_architecture"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "format_dead_code_output"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "format_dead_code_summary_mcp"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/handlers/tools.rs",
      "line": 1,
      "function": "parse_analysis_types"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 23 exceeds recommended complexity of 15",
      "value": 23,
      "threshold": 15,
      "file": "./src/services/code_intelligence.rs",
      "line": 1,
      "function": "CodeIntelligence::analyze_project"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/services/context.rs",
      "line": 1,
      "function": "calculate_item_counts"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/context.rs",
      "line": 1,
      "function": "group_items_by_type"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/services/context.rs",
      "line": 1,
      "function": "count_ast_items"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "value": 15,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_as_sarif"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "value": 30,
      "threshold": 15,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_as_sarif"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_tree_node"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::categorize_ast_items"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_churn_analysis"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_technical_debt"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_technical_debt"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_dead_code_analysis"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_dead_code_analysis"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_defect_predictions"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "value": 17,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_prioritized_recommendations"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 39 exceeds maximum allowed complexity of 30",
      "value": 39,
      "threshold": 30,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::format_prioritized_recommendations"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/services/deep_context.rs",
      "line": 1,
      "function": "DeepContextAnalyzer::integrate_analysis_result"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/ranking.rs",
      "line": 1,
      "function": "ComplexityRanker::compute_score"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "value": 16,
      "threshold": 10,
      "file": "./src/services/complexity.rs",
      "line": 1,
      "function": "aggregate_results"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 24 exceeds recommended complexity of 15",
      "value": 24,
      "threshold": 15,
      "file": "./src/services/complexity.rs",
      "line": 1,
      "function": "aggregate_results"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/services/tdg_calculator.rs",
      "line": 1,
      "function": "TDGCalculator::calculate_churn_factor"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 17 exceeds recommended complexity of 10",
      "value": 17,
      "threshold": 10,
      "file": "./src/services/deterministic_mermaid_engine.rs",
      "line": 1,
      "function": "DeterministicMermaidEngine::generate_service_interactions_mmd"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "value": 25,
      "threshold": 15,
      "file": "./src/services/deterministic_mermaid_engine.rs",
      "line": 1,
      "function": "DeterministicMermaidEngine::generate_service_interactions_mmd"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "value": 25,
      "threshold": 15,
      "file": "./src/services/deterministic_mermaid_engine.rs",
      "line": 1,
      "function": "DeterministicMermaidEngine::compute_pagerank"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/ast_rust.rs",
      "line": 1,
      "function": "RustComplexityVisitor::visit_item_impl"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/services/ast_rust.rs",
      "line": 1,
      "function": "RustComplexityVisitor::visit_expr"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "value": 26,
      "threshold": 15,
      "file": "./src/services/ast_rust.rs",
      "line": 1,
      "function": "RustComplexityVisitor::visit_expr"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/services/mermaid_generator.rs",
      "line": 1,
      "function": "MermaidGenerator::generate_with_config"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/services/mermaid_generator.rs",
      "line": 1,
      "function": "MermaidGenerator::generate_with_config"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 19 exceeds recommended complexity of 10",
      "value": 19,
      "threshold": 10,
      "file": "./src/services/mermaid_generator.rs",
      "line": 1,
      "function": "validate_node_definitions"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "value": 27,
      "threshold": 15,
      "file": "./src/services/mermaid_generator.rs",
      "line": 1,
      "function": "validate_node_definitions"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/file_discovery.rs",
      "line": 1,
      "function": "ProjectFileDiscovery::discover_files"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "value": 16,
      "threshold": 10,
      "file": "./src/services/makefile_linter/parser.rs",
      "line": 1,
      "function": "MakefileParser::parse_line"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 31 exceeds maximum allowed complexity of 30",
      "value": 31,
      "threshold": 30,
      "file": "./src/services/makefile_linter/parser.rs",
      "line": 1,
      "function": "MakefileParser::parse_line"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "value": 16,
      "threshold": 10,
      "file": "./src/services/makefile_linter/parser.rs",
      "line": 1,
      "function": "MakefileParser::find_assignment_or_colon"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 33 exceeds maximum allowed complexity of 30",
      "value": 33,
      "threshold": 30,
      "file": "./src/services/makefile_linter/parser.rs",
      "line": 1,
      "function": "MakefileParser::find_assignment_or_colon"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "line": 1,
      "function": "PhonyDeclaredRule::check"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "value": 18,
      "threshold": 10,
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "line": 1,
      "function": "check_undefined_in_text"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 57 exceeds maximum allowed complexity of 30",
      "value": 57,
      "threshold": 30,
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "line": 1,
      "function": "check_undefined_in_text"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 25 exceeds maximum allowed complexity of 20",
      "value": 25,
      "threshold": 20,
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "line": 1,
      "function": "is_function_call"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "value": 25,
      "threshold": 15,
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "line": 1,
      "function": "is_function_call"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 23 exceeds maximum allowed complexity of 20",
      "value": 23,
      "threshold": 20,
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "line": 1,
      "function": "RecursiveExpansionRule::check"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 49 exceeds maximum allowed complexity of 30",
      "value": 49,
      "threshold": 30,
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "line": 1,
      "function": "RecursiveExpansionRule::check"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "value": 15,
      "threshold": 10,
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "line": 1,
      "function": "extract_var_refs"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 43 exceeds maximum allowed complexity of 30",
      "value": 43,
      "threshold": 30,
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "line": 1,
      "function": "extract_var_refs"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/makefile_linter/ast.rs",
      "line": 1,
      "function": "MakefileAst::uses_automatic_variables"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::extract_from_content"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "value": 30,
      "threshold": 15,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::extract_from_content"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::analyze_project"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 25 exceeds recommended complexity of 15",
      "value": 25,
      "threshold": 15,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::analyze_project"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::analyze_directory_with_tests"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::analyze_directory_with_tests"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::collect_files_recursive"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "value": 21,
      "threshold": 15,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::collect_files_recursive"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./src/services/satd_detector.rs",
      "line": 1,
      "function": "SATDDetector::generate_metrics"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/dogfooding_engine.rs",
      "line": 1,
      "function": "DogfoodingEngine::analyze_single_file"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/services/dogfooding_engine.rs",
      "line": 1,
      "function": "DogfoodingEngine::analyze_single_file"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./src/services/dead_code_analyzer.rs",
      "line": 1,
      "function": "DeadCodeAnalyzer::classify_dead_code"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "value": 18,
      "threshold": 10,
      "file": "./src/services/dead_code_analyzer.rs",
      "line": 1,
      "function": "DeadCodeAnalyzer::build_reference_graph_from_dep_graph"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 29 exceeds recommended complexity of 15",
      "value": 29,
      "threshold": 15,
      "file": "./src/services/dead_code_analyzer.rs",
      "line": 1,
      "function": "DeadCodeAnalyzer::build_reference_graph_from_dep_graph"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./src/services/template_service.rs",
      "line": 1,
      "function": "validate_parameters"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/template_service.rs",
      "line": 1,
      "function": "scaffold_project"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./src/services/template_service.rs",
      "line": 1,
      "function": "scaffold_project"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/template_service.rs",
      "line": 1,
      "function": "validate_template"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/services/template_service.rs",
      "line": 1,
      "function": "validate_template"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 19 exceeds recommended complexity of 15",
      "value": 19,
      "threshold": 15,
      "file": "./src/services/git_analysis.rs",
      "line": 1,
      "function": "GitAnalysisService::get_file_metrics"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./src/services/embedded_templates.rs",
      "line": 1,
      "function": "get_template_metadata"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/embedded_templates.rs",
      "line": 1,
      "function": "get_template_content"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./src/services/cache/strategies.rs",
      "line": 1,
      "function": "DagCacheStrategy::validate"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/cache/persistent.rs",
      "line": 1,
      "function": "PersistentCache::load_from_disk"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 19 exceeds recommended complexity of 15",
      "value": 19,
      "threshold": 15,
      "file": "./src/services/cache/persistent.rs",
      "line": 1,
      "function": "PersistentCache::get"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/cache/persistent.rs",
      "line": 1,
      "function": "PersistentCache::cleanup_expired"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 28 exceeds recommended complexity of 15",
      "value": 28,
      "threshold": 15,
      "file": "./src/services/cache/persistent.rs",
      "line": 1,
      "function": "PersistentCache::cleanup_expired"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/defect_probability.rs",
      "line": 1,
      "function": "DefectProbabilityCalculator::generate_recommendations"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "value": 26,
      "threshold": 15,
      "file": "./src/services/defect_probability.rs",
      "line": 1,
      "function": "DefectProbabilityCalculator::generate_recommendations"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/canonical_query.rs",
      "line": 1,
      "function": "infer_component_relationships"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "value": 26,
      "threshold": 15,
      "file": "./src/services/canonical_query.rs",
      "line": 1,
      "function": "infer_component_relationships"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "value": 16,
      "threshold": 10,
      "file": "./src/services/canonical_query.rs",
      "line": 1,
      "function": "generate_styled_architecture_diagram"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "value": 30,
      "threshold": 15,
      "file": "./src/services/canonical_query.rs",
      "line": 1,
      "function": "generate_styled_architecture_diagram"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::collect_source_files"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 22 exceeds recommended complexity of 15",
      "value": 22,
      "threshold": 15,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::collect_source_files"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::parse_file"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::parse_file"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::extract_dependencies"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 31 exceeds maximum allowed complexity of 30",
      "value": 31,
      "threshold": 30,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::extract_dependencies"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./src/services/unified_ast_engine.rs",
      "line": 1,
      "function": "UnifiedAstEngine::compute_node_metrics"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./src/services/ast_python.rs",
      "line": 1,
      "function": "analyze_python_file_with_classifier"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "value": 18,
      "threshold": 10,
      "file": "./src/services/ast_python.rs",
      "line": 1,
      "function": "extract_python_items"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "value": 26,
      "threshold": 15,
      "file": "./src/services/ast_python.rs",
      "line": 1,
      "function": "extract_python_items"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./src/services/ast_python.rs",
      "line": 1,
      "function": "PythonComplexityVisitor::visit_stmt"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./tests/cli_documentation_sync.rs",
      "line": 1,
      "function": "parse_documented_cli_commands"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./tests/cli_documentation_sync.rs",
      "line": 1,
      "function": "parse_documented_cli_commands"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 16 exceeds recommended complexity of 10",
      "value": 16,
      "threshold": 10,
      "file": "./tests/cli_documentation_sync.rs",
      "line": 1,
      "function": "test_documentation_examples_are_valid"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "value": 27,
      "threshold": 15,
      "file": "./tests/cli_documentation_sync.rs",
      "line": 1,
      "function": "test_documentation_examples_are_valid"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./tests/mcp_documentation_sync.rs",
      "line": 1,
      "function": "parse_documented_mcp_tools"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./tests/mcp_documentation_sync.rs",
      "line": 1,
      "function": "send_mcp_request"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./tests/mcp_documentation_sync.rs",
      "line": 1,
      "function": "test_mcp_tool_schemas_match_documentation"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./tests/mermaid_artifact_tests.rs",
      "line": 1,
      "function": "test_maintain_mermaid_readme"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./tests/demo_e2e_integration.rs",
      "line": 1,
      "function": "create_test_repository"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./tests/demo_e2e_integration.rs",
      "line": 1,
      "function": "test_api_contract_compliance"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./tests/demo_e2e_integration.rs",
      "line": 1,
      "function": "test_concurrent_requests"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./benches/critical_path.rs",
      "line": 1,
      "function": "benchmark_dag_generation"
    }
  ],
  "hotspots": [
    {
      "file": "./src/handlers/tools.rs",
      "function": "handle_analyze_system_architecture",
      "line": 1,
      "complexity": 32,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/services/makefile_linter/rules/checkmake.rs",
      "function": "is_function_call",
      "line": 1,
      "complexity": 25,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/services/makefile_linter/rules/performance.rs",
      "function": "RecursiveExpansionRule::check",
      "line": 1,
      "complexity": 23,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "detect_repository",
      "line": 1,
      "complexity": 22,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/demo/runner.rs",
      "function": "DemoReport::render_step_highlights",
      "line": 1,
      "complexity": 19,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_complexity",
      "line": 1,
      "complexity": 19,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/unified_protocol/adapters/cli.rs",
      "function": "CliInput::from_commands",
      "line": 1,
      "complexity": 19,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/services/mermaid_generator.rs",
      "function": "validate_node_definitions",
      "line": 1,
      "complexity": 19,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/cli/mod.rs",
      "function": "handle_analyze_satd",
      "line": 1,
      "complexity": 18,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./src/unified_protocol/service.rs",
      "function": "mcp_endpoint",
      "line": 1,
      "complexity": 18,
      "complexity_type": "cyclomatic"
    }
  ],
  "files": [
    {
      "path": "./src/bin/pmat.rs",
      "total_complexity": {
        "cyclomatic": 14,
        "cognitive": 17,
        "nesting_max": 4,
        "lines": 26
      },
      "functions": [
        {
          "name": "detect_execution_mode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "init_tracing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 9,
            "nesting_max": 4,
            "lines": 8
          }
        },
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 12
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/demo/adapters/cli.rs",
      "total_complexity": {
        "cyclomatic": 16,
        "cognitive": 16,
        "nesting_max": 1,
        "lines": 112
      },
      "functions": [
        {
          "name": "CliDemoAdapter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliDemoAdapter::execute_context_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "CliDemoAdapter::generate_cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "CliDemoAdapter::create_api_trace",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "CliDemoAdapter::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliDemoAdapter::decode_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "CliDemoAdapter::encode_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliDemoAdapter::get_protocol_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliDemoAdapter::execute_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "CliRequest::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "Value::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_cli_adapter_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_cli_request_from_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_cache_key_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_api_trace_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "CliDemoAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliApiTrace",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/adapters/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/demo/adapters/http.rs",
      "total_complexity": {
        "cyclomatic": 41,
        "cognitive": 41,
        "nesting_max": 1,
        "lines": 147
      },
      "functions": [
        {
          "name": "HttpDemoAdapter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpDemoAdapter::handle_analyze_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "HttpDemoAdapter::handle_status_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "HttpDemoAdapter::handle_results_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "HttpDemoAdapter::handle_api_introspection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "HttpDemoAdapter::execute_context_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "HttpDemoAdapter::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpDemoAdapter::decode_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "HttpDemoAdapter::encode_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "HttpDemoAdapter::get_protocol_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpDemoAdapter::execute_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "HttpRequest::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "Value::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_http_adapter_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_http_request_from_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_api_introspection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_context_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "HttpDemoAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpRequestInfo",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpEndpoint",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpParameter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/adapters/mcp.rs",
      "total_complexity": {
        "cyclomatic": 72,
        "cognitive": 72,
        "nesting_max": 1,
        "lines": 144
      },
      "functions": [
        {
          "name": "McpDemoError::to_mcp_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "McpDemoAdapter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpDemoAdapter::handle_demo_analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "McpDemoAdapter::handle_demo_get_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "McpDemoAdapter::handle_demo_get_api_trace",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "McpDemoAdapter::execute_context_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "McpDemoAdapter::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpDemoAdapter::decode_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "McpDemoAdapter::encode_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "McpDemoAdapter::get_protocol_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpDemoAdapter::execute_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "McpRequest::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "Value::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_mcp_adapter_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_mcp_request_from_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_demo_analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_unknown_method",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_error_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "McpDemoAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoAnalyzeParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoAnalyzeResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoGetResultsParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoGetApiTraceParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpTrace",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/mod.rs",
      "total_complexity": {
        "cyclomatic": 82,
        "cognitive": 110,
        "nesting_max": 6,
        "lines": 167
      },
      "functions": [
        {
          "name": "run_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "load_demo_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "create_analyzer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "run_analyses",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "generate_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "handle_protocol_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "build_protocol_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "format_and_print_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "print_api_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "run_all_protocols",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "run_single_protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "protocol_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "print_protocol_banner",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "extract_analysis_from_demo_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 31,
            "nesting_max": 6,
            "lines": 16
          }
        },
        {
          "name": "parse_dag_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "run_web_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 37
          }
        },
        {
          "name": "analyze_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_system_architecture",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "analyze_defect_probability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 4,
            "lines": 25
          }
        }
      ],
      "classes": [
        {
          "name": "DemoConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoAnalyzer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProtocolTrace",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/router.rs",
      "total_complexity": {
        "cyclomatic": 8,
        "cognitive": 8,
        "nesting_max": 2,
        "lines": 21
      },
      "functions": [
        {
          "name": "Router::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "Router::route",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "Router::handle",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "build_router",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "handle_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "handle_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "Router",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/export.rs",
      "total_complexity": {
        "cyclomatic": 25,
        "cognitive": 25,
        "nesting_max": 2,
        "lines": 130
      },
      "functions": [
        {
          "name": "MarkdownExporter::export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 29
          }
        },
        {
          "name": "MarkdownExporter::file_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonExporter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonExporter::export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "JsonExporter::file_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SarifExporter::export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "SarifExporter::file_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExportService::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "ExportService::export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExportService::save_to_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ExportService::supported_formats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExportService::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_export_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_full_export_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_markdown_export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_json_export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_export_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": [
        {
          "name": "ExportReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnFile",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MarkdownExporter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "JsonExporter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SarifExporter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ExportService",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/protocol_harness.rs",
      "total_complexity": {
        "cyclomatic": 28,
        "cognitive": 28,
        "nesting_max": 2,
        "lines": 153
      },
      "functions": [
        {
          "name": "DemoConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoxedError::fmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoxedError::source",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoxedError::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoxedError::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoxedError::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoxedError::from_box",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoEngine::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoEngine::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoEngine::with_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoEngine::register_protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "DemoEngine::list_protocols",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoEngine::get_protocol_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DemoEngine::execute_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 19
          }
        },
        {
          "name": "DemoEngine::get_trace",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoEngine::get_all_traces",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContextCache::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContextCache::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContextCache::insert",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ContextCache::evict_if_needed",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "TraceStore::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TraceStore::add_trace",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "TraceStore::get_trace",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TraceStore::get_all_traces",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "ProtocolWrapper::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ProtocolWrapper::decode_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ProtocolWrapper::encode_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ProtocolWrapper::get_protocol_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ProtocolWrapper::execute_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_demo_engine_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_context_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_trace_store",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "ProtocolMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoEngine",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ContextCache",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheEntry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalysisResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TraceStore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ApiTrace",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TimingInfo",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "BoxedError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProtocolWrapper",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/config.rs",
      "total_complexity": {
        "cyclomatic": 24,
        "cognitive": 34,
        "nesting_max": 4,
        "lines": 90
      },
      "functions": [
        {
          "name": "DisplayConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ConfigManager::load_from_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ConfigManager::load",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "ConfigManager::watch",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 14,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "ConfigManager::get_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::subscribe",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::get_dependency_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::get_complexity_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::get_churn_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::get_context_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::get_export_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::get_performance_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PanelConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ConfigManager::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_default_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_load_from_yaml",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_config_manager",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "DisplayConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PanelConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DependencyPanelConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityPanelConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnPanelConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ContextPanelConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ExportConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PerformanceConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ConfigManager",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/server.rs",
      "total_complexity": {
        "cyclomatic": 34,
        "cognitive": 37,
        "nesting_max": 2,
        "lines": 168
      },
      "functions": [
        {
          "name": "LocalDemoServer::spawn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LocalDemoServer::spawn_with_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "LocalDemoServer::spawn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LocalDemoServer::spawn_with_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LocalDemoServer::port",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LocalDemoServer::shutdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "handle_connection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "parse_minimal_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "serialize_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 17
          }
        },
        {
          "name": "serve_dashboard",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "serve_static_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "serve_static_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_architecture_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_defect_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_statistics_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_system_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_analysis_stream",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "calculate_graph_density",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "calculate_avg_degree",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_analysis_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_summary_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "serve_metrics_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "serve_hotspots_table",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "serve_dag_mermaid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "serve_system_diagram_mermaid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "serve_architecture_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "serve_defect_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "serve_statistics_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "serve_system_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_analysis_stream",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "serve_analysis_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 9,
            "nesting_max": 2,
            "lines": 18
          }
        },
        {
          "name": "calculate_graph_density",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "calculate_avg_degree",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "DemoContent::from_analysis_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "spawn_sync",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ComplexityReport::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CodeChurnAnalysis::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "DemoContent",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Hotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoState",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalysisResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "LocalDemoServer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MinimalRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HotspotEntry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/runner.rs",
      "total_complexity": {
        "cyclomatic": 184,
        "cognitive": 255,
        "nesting_max": 5,
        "lines": 528
      },
      "functions": [
        {
          "name": "DemoRunner::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoRunner::clone_and_prepare",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 17,
            "nesting_max": 2,
            "lines": 29
          }
        },
        {
          "name": "DemoRunner::generate_system_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "DemoRunner::render_system_mermaid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 20
          }
        },
        {
          "name": "DemoRunner::create_demo_step",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "DemoRunner::execute",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoRunner::execute_with_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 27
          }
        },
        {
          "name": "DemoRunner::demo_context_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "DemoRunner::demo_complexity_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "DemoRunner::demo_dag_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 11,
            "nesting_max": 5,
            "lines": 16
          }
        },
        {
          "name": "DemoRunner::demo_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "DemoRunner::demo_system_architecture",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 11,
            "nesting_max": 5,
            "lines": 16
          }
        },
        {
          "name": "DemoRunner::demo_defect_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "DemoRunner::demo_template_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "DemoRunner::build_mcp_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoReport::render",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "DemoReport::render_cli",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 24
          }
        },
        {
          "name": "DemoReport::render_step_highlights",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 19,
            "cognitive": 28,
            "nesting_max": 4,
            "lines": 18
          }
        },
        {
          "name": "resolve_repository",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "resolve_repo_spec",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "detect_repository",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 22,
            "cognitive": 23,
            "nesting_max": 2,
            "lines": 35
          }
        }
      ],
      "classes": [
        {
          "name": "DemoRunner",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoStep",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DemoReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Component",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/assets.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 19
      },
      "functions": [
        {
          "name": "get_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "get_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "decompress_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "get_asset_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "EmbeddedAsset",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/demo/templates.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/tests/prompts.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 82
      },
      "functions": [
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_handle_prompts_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 20
          }
        },
        {
          "name": "test_handle_prompt_get_rust_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_handle_prompt_get_deno_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_handle_prompt_get_python_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_handle_prompt_get_missing_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_handle_prompt_get_invalid_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_handle_prompt_get_unknown_prompt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/cli_tests.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 8,
        "nesting_max": 2,
        "lines": 135
      },
      "functions": [
        {
          "name": "test_validate_params_all_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_validate_params_missing_required",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_validate_params_unknown_parameter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_validate_params_type_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_expand_env_vars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_expand_env_vars_no_vars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_expand_env_vars_multiple_occurrences",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_generate_command_to_stdout",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_generate_command_to_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_list_command_json_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_search_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_validate_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_scaffold_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_context_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_parse_key_val",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_value_type_inference",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_table_formatting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_json_output_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_yaml_output_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_missing_required_params_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_multiple_validation_errors",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_cli_parameter_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "test_template_uri_patterns",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_toolchain_names",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/binary_size.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 35
      },
      "functions": [
        {
          "name": "binary_size_regression",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "feature_size_impact",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "template_compression_works",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "startup_time_regression",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "memory_usage_baseline",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/ast_e2e.rs",
      "total_complexity": {
        "cyclomatic": 17,
        "cognitive": 17,
        "nesting_max": 1,
        "lines": 200
      },
      "functions": [
        {
          "name": "test_analyze_python_file_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 35
          }
        },
        {
          "name": "test_python_class_field_count",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_python_import_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_python_file_not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_python_invalid_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_analyze_typescript_file_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 44
          }
        },
        {
          "name": "test_analyze_javascript_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 28
          }
        },
        {
          "name": "test_typescript_class_field_count",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_tsx_file_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_jsx_file_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_typescript_file_not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_typescript_invalid_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_mixed_language_project_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/cli_integration_full.rs",
      "total_complexity": {
        "cyclomatic": 1,
        "cognitive": 1,
        "nesting_max": 1,
        "lines": 79
      },
      "functions": [
        {
          "name": "test_cli_run_generate_to_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_cli_generate_template_direct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_cli_list_templates_direct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_cli_search_templates_direct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_cli_validate_template_direct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_cli_scaffold_project_direct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_cli_context_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_cli_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/analyze_cli_tests.rs",
      "total_complexity": {
        "cyclomatic": 37,
        "cognitive": 66,
        "nesting_max": 3,
        "lines": 54
      },
      "functions": [
        {
          "name": "test_analyze_churn_command_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 20,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "test_analyze_churn_with_all_options",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 20,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "test_analyze_churn_format_options",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 23,
            "nesting_max": 3,
            "lines": 5
          }
        },
        {
          "name": "test_analyze_churn_invalid_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_analyze_churn_short_flags",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_analyze_subcommand_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_analyze_churn_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/template_resources.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 7,
        "nesting_max": 3,
        "lines": 68
      },
      "functions": [
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_list_all_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_filter_templates_by_prefix",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_get_template_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_invalid_template_uri",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_template_categories",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_template_toolchains",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_template_parameter_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 6
          }
        },
        {
          "name": "test_rust_template_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/additional_coverage.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 30
      },
      "functions": [
        {
          "name": "test_churn_output_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_cli_validate_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 16
          }
        },
        {
          "name": "test_additional_model_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/cache_comprehensive_tests.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 131
      },
      "functions": [
        {
          "name": "test_cache_config_default_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_cache_config_custom_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_cache_config_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_cache_stats_snapshot_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_cache_stats_snapshot_zero_requests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_cache_stats_snapshot_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_cache_effectiveness_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_cache_effectiveness_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_cache_diagnostics_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_cache_stats_hit_rate_calculation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_cache_config_ttl_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_cache_config_memory_settings",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_cache_config_git_settings",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_cache_config_warmup_patterns",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_cache_effectiveness_empty_caches",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_cache_diagnostics_empty_collections",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/deep_context_tests.rs",
      "total_complexity": {
        "cyclomatic": 13,
        "cognitive": 13,
        "nesting_max": 1,
        "lines": 116
      },
      "functions": [
        {
          "name": "test_deep_context_config_default_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_deep_context_analyzer_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_discovery_simple_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_discovery_with_excludes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_metadata_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_quality_scorecard_calculations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_defect_summary_aggregation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_defect_hotspot_ranking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_prioritized_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_cross_language_references",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_template_provenance_tracking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_analysis_type_equality",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_enum_variants_complete",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 13,
            "nesting_max": 1,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/cli_comprehensive_tests.rs",
      "total_complexity": {
        "cyclomatic": 84,
        "cognitive": 116,
        "nesting_max": 3,
        "lines": 219
      },
      "functions": [
        {
          "name": "test_generate_command_full_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_generate_command_aliases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_generate_missing_required_args",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_scaffold_command_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_scaffold_template_delimiter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_scaffold_default_parallel",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_list_command_all_formats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 20,
            "nesting_max": 3,
            "lines": 5
          }
        },
        {
          "name": "test_list_command_filters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_list_default_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_search_command_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_search_default_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_validate_command_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_context_command_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_context_formats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_context_default_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_analyze_churn_full_options",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_analyze_churn_all_formats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_analyze_complexity_full_options",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_analyze_complexity_formats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_analyze_dag_full_options",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_analyze_dag_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_parse_key_val_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_parse_key_val_edge_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_validate_params_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_expand_env_vars_complex",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_cli_error_scenarios",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_help_flags",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "test_version_flag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_mode_flag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_multiple_parameter_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "test_nested_subcommand_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 23,
            "nesting_max": 3,
            "lines": 6
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/cache.rs",
      "total_complexity": {
        "cyclomatic": 2,
        "cognitive": 2,
        "nesting_max": 1,
        "lines": 144
      },
      "functions": [
        {
          "name": "test_session_cache_manager",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "TestAstCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestAstCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestAstCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestAstCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_template_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "TestDagCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestDagCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestDagCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestDagCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestChurnCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestChurnCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestChurnCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestChurnCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestGitStatsCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestGitStatsCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestGitStatsCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestGitStatsCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SmallCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SmallCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SmallCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SmallCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestClearStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestClearStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestClearStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestClearStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ShortTtlStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ShortTtlStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ShortTtlStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ShortTtlStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "TestAstCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestDagCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestChurnCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestGitStatsCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SmallCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestClearStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ShortTtlStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/tests/cli_property_tests.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/tests/churn.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 106
      },
      "functions": [
        {
          "name": "create_test_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_churn_score_calculation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_output_format_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_format_churn_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_format_churn_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_format_churn_csv",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_no_git_repository_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_parse_commit_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_multiple_commits_and_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 23
          }
        },
        {
          "name": "test_churn_score_edge_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_empty_repository",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/helpers.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 78
      },
      "functions": [
        {
          "name": "test_snake_case_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_kebab_case_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_pascal_case_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_current_year_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_current_date_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_helper_error_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_empty_string_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_helper_with_non_string_parameter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_pascal_case_preserves_existing_capitalization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_year_and_date_helpers_consistency",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/template_rendering.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 82
      },
      "functions": [
        {
          "name": "test_render_rust_cli_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_render_python_uv_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_render_deno_typescript_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_render_readme_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_render_gitignore_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_render_with_conditionals",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_render_with_missing_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_render_with_nested_loops",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_render_with_string_helpers",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/http_adapter_tests.rs",
      "total_complexity": {
        "cyclomatic": 10,
        "cognitive": 12,
        "nesting_max": 2,
        "lines": 46
      },
      "functions": [
        {
          "name": "test_http_adapter_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_http_adapter_bind",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_http_output_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_http_context_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_http_context_with_no_remote_addr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_http_context_with_no_user_agent",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_http_context_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_protocol_adapter_trait",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_http_status_code_variations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "test_http_response_with_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_http_error_responses",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/cli_simple_tests.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 15
      },
      "functions": [
        {
          "name": "test_validate_params_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_expand_env_vars_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_output_format_enum",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_context_format_enum",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_commands_construction",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/error_handling.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 2,
        "lines": 60
      },
      "functions": [
        {
          "name": "test_template_error_display",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_template_not_found_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_not_found_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_render_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_validation_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_invalid_utf8_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_error_to_mcp_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_parameter_spec_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_parameter_spec_with_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_error_debug_representation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_multiple_error_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "test_cache_error_from_anyhow",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_json_error_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_io_error_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_s3_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/mcp_protocol.rs",
      "total_complexity": {
        "cyclomatic": 1,
        "cognitive": 1,
        "nesting_max": 1,
        "lines": 81
      },
      "functions": [
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_handle_initialize",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_handle_list_tools",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_handle_list_resources",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 16
          }
        },
        {
          "name": "test_handle_call_tool_generate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_handle_call_tool_invalid_tool",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_handle_call_tool_missing_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_handle_invalid_method",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_protocol_version_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/deep_context_simplified_tests.rs",
      "total_complexity": {
        "cyclomatic": 13,
        "cognitive": 13,
        "nesting_max": 1,
        "lines": 79
      },
      "functions": [
        {
          "name": "test_deep_context_config_default_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_deep_context_analyzer_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_metadata_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_quality_scorecard_calculations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_defect_summary_aggregation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_prioritized_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_cross_language_references",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_template_provenance_tracking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_analysis_type_equality",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_enum_variants_complete",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 13,
            "nesting_max": 1,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/demo_comprehensive_tests.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 132
      },
      "functions": [
        {
          "name": "test_demo_runner_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_demo_step_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_demo_report_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_detect_repository_git_repo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_detect_repository_cargo_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_detect_repository_nodejs_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_detect_repository_python_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_detect_repository_pyproject_toml",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_detect_repository_with_readme",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_detect_repository_empty_directory",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_detect_repository_nonexistent_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_demo_report_rendering_cli",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_demo_report_rendering_mcp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_demo_step_error_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_demo_report_with_multiple_steps",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_demo_step_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_demo_report_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/resources.rs",
      "total_complexity": {
        "cyclomatic": 2,
        "cognitive": 2,
        "nesting_max": 1,
        "lines": 63
      },
      "functions": [
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_handle_resource_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "test_handle_resource_read_success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_handle_resource_read_missing_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_handle_resource_read_invalid_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_handle_resource_read_not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_handle_resource_read_all_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/error.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 35
      },
      "functions": [
        {
          "name": "test_template_not_found_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_invalid_uri_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_validation_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_render_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_not_found_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_s3_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_invalid_utf8_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_cache_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_json_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_io_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/build_naming_validation.rs",
      "total_complexity": {
        "cyclomatic": 14,
        "cognitive": 24,
        "nesting_max": 3,
        "lines": 48
      },
      "functions": [
        {
          "name": "test_cargo_build_has_single_correct_binary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_no_old_package_references",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_no_old_binary_references_in_workflows",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_correct_binary_name_in_workflows",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_no_wrong_repo_urls_in_workflows",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_workspace_aware_cargo_commands_in_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 19,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "test_cargo_lock_only_in_root",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_build_script_workspace_aware",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/tools.rs",
      "total_complexity": {
        "cyclomatic": 5,
        "cognitive": 5,
        "nesting_max": 1,
        "lines": 118
      },
      "functions": [
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_handle_tool_call_missing_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_handle_tool_call_invalid_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_list_templates_all",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_list_templates_by_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_list_templates_by_category",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_validate_template_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_validate_template_missing_required",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_validate_template_unknown_parameter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_validate_template_not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_scaffold_project_rust",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "test_scaffold_project_deno",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_search_templates_by_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_search_templates_with_toolchain_filter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_search_templates_no_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_generate_template_invalid_arguments",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/lib.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 69
      },
      "functions": [
        {
          "name": "test_template_server_new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_template_server_trait_implementation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_template_server_deprecated_methods",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_warm_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_template_server_cache_initialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_template_server_cache_sizes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_warm_cache_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_template_server_trait_via_methods",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_type_aliases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_s3_client_instantiation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_run_mcp_server_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_public_exports",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/claude_code_e2e.rs",
      "total_complexity": {
        "cyclomatic": 29,
        "cognitive": 34,
        "nesting_max": 3,
        "lines": 198
      },
      "functions": [
        {
          "name": "create_test_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_tool_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_claude_code_rust_cli_workflow",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 36
          }
        },
        {
          "name": "test_claude_code_all_languages_scaffold",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "create_scaffold_test_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_toolchain_scaffolding",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "create_scaffold_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "validate_scaffold_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "verify_generated_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "GeneratedFileFlags::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GeneratedFileFlags::assert_all_files_present",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "process_generated_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "verify_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "verify_makefile_toolchain_specific",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "verify_readme",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "verify_gitignore",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "verify_gitignore_patterns",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "test_claude_code_error_scenarios",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_claude_code_search_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_naming_convention_critical_requirement",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 18
          }
        },
        {
          "name": "test_naming_convention_in_individual_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "test_server_info_naming_convention",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_ast_context_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 50
          }
        }
      ],
      "classes": [
        {
          "name": "GeneratedFileFlags",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/tests/e2e_full_coverage.rs",
      "total_complexity": {
        "cyclomatic": 1,
        "cognitive": 1,
        "nesting_max": 1,
        "lines": 85
      },
      "functions": [
        {
          "name": "test_mcp_server_e2e_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 42
          }
        },
        {
          "name": "test_cli_main_binary_version",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_cli_main_binary_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_cli_subcommand_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_cli_mode_list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_cli_generate_validation_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_cli_search_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_cli_invalid_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_cli_analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/models.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 34
      },
      "functions": [
        {
          "name": "test_toolchain_priority",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_toolchain_as_str",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_template_category_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_parameter_type_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/tests/unified_protocol_tests.rs",
      "total_complexity": {
        "cyclomatic": 9,
        "cognitive": 9,
        "nesting_max": 1,
        "lines": 77
      },
      "functions": [
        {
          "name": "test_unified_service_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_app_state_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_service_metrics_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_service_metrics_increment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_service_metrics_duration_tracking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_service_metrics_error_tracking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_protocol_context_http_only",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_protocol_context_mcp_only",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_app_error_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_app_error_status_codes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_mcp_error_codes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_error_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_error_to_protocol_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/cli/mod.rs",
      "total_complexity": {
        "cyclomatic": 486,
        "cognitive": 625,
        "nesting_max": 5,
        "lines": 996
      },
      "functions": [
        {
          "name": "parse_early_for_tracing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "run",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "execute_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "execute_analyze_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "execute_demo_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "handle_generate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "handle_scaffold",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "handle_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "handle_search",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "handle_validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "handle_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "detect_primary_language",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "handle_analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "handle_analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 15,
            "cognitive": 16,
            "nesting_max": 2,
            "lines": 31
          }
        },
        {
          "name": "handle_analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 19,
            "cognitive": 24,
            "nesting_max": 3,
            "lines": 27
          }
        },
        {
          "name": "handle_analyze_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 15
          }
        },
        {
          "name": "handle_analyze_satd",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 18,
            "cognitive": 26,
            "nesting_max": 2,
            "lines": 24
          }
        },
        {
          "name": "handle_analyze_deep_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "build_deep_context_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 17
          }
        },
        {
          "name": "convert_dag_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "convert_cache_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "parse_analysis_filters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "parse_analysis_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "print_analysis_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "write_deep_context_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "format_deep_context_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_deep_context_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 32
          }
        },
        {
          "name": "format_annotated_tree",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "format_tree_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 27
          }
        },
        {
          "name": "format_complexity_hotspots",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "format_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "format_technical_debt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 16,
            "nesting_max": 3,
            "lines": 17
          }
        },
        {
          "name": "format_dead_code_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 18,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "format_defect_predictions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "format_prioritized_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 17,
            "cognitive": 39,
            "nesting_max": 4,
            "lines": 16
          }
        },
        {
          "name": "format_deep_context_terse",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "format_terse_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "format_terse_executive_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "get_terse_satd_breakdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 8
          }
        },
        {
          "name": "format_terse_key_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "format_terse_complexity_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "format_terse_churn_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "calculate_terse_median_changes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "format_terse_satd_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "format_terse_duplicates_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "format_terse_dead_code_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_terse_ast_network_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "format_terse_predicted_defect_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "calculate_terse_file_risks",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 15
          }
        },
        {
          "name": "format_deep_context_full",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "format_full_report_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "format_full_executive_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "get_satd_breakdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 8
          }
        },
        {
          "name": "format_full_complexity_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "format_full_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "calculate_median_changes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "format_full_satd_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "format_full_dead_code_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "format_full_risk_prediction",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "calculate_file_risks",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 22
          }
        },
        {
          "name": "format_full_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "format_deep_context_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 21,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "format_satd_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "format_satd_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 31
          }
        },
        {
          "name": "format_satd_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "format_satd_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 21,
            "nesting_max": 3,
            "lines": 21
          }
        },
        {
          "name": "format_dead_code_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "format_dead_code_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 27,
            "nesting_max": 5,
            "lines": 29
          }
        },
        {
          "name": "format_dead_code_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "format_dead_code_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 24
          }
        },
        {
          "name": "detect_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 8
          }
        },
        {
          "name": "build_complexity_thresholds",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "analyze_project_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "should_analyze_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "matches_include_patterns",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "analyze_file_by_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "params_to_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "format_top_files_ranking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "handle_serve",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 33
          }
        },
        {
          "name": "print_table",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "handle_analyze_tdg",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 20
          }
        },
        {
          "name": "format_tdg_table",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 18
          }
        },
        {
          "name": "format_tdg_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 17
          }
        },
        {
          "name": "format_tdg_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "truncate_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "handle_analyze_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "format_makefile_human",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 17,
            "nesting_max": 3,
            "lines": 41
          }
        },
        {
          "name": "format_makefile_gcc",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "format_makefile_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "Cli",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "EarlyCliArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeepContextConfigParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/cli/args.rs",
      "total_complexity": {
        "cyclomatic": 24,
        "cognitive": 30,
        "nesting_max": 4,
        "lines": 28
      },
      "functions": [
        {
          "name": "validate_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 9,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "validate_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "value_type_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "expand_env_vars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "parse_key_val",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 4,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/unified_protocol/adapters/cli.rs",
      "total_complexity": {
        "cyclomatic": 197,
        "cognitive": 223,
        "nesting_max": 2,
        "lines": 240
      },
      "functions": [
        {
          "name": "CliAdapter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliAdapter::decode_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "CliAdapter::decode_generate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "CliAdapter::decode_scaffold",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "CliAdapter::decode_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "CliAdapter::decode_search",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "CliAdapter::decode_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "CliAdapter::decode_analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_satd",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_deep_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_analyze_tdg",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_serve",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::decode_demo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CliAdapter::format_to_extension_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "CliAdapter::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliAdapter::protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliAdapter::decode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "CliAdapter::encode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "CliInput::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliInput::from_commands",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 19,
            "cognitive": 27,
            "nesting_max": 2,
            "lines": 2
          }
        },
        {
          "name": "CliOutput::write_and_exit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "CliOutput::exit_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "CliOutput::content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "churn_format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "complexity_format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "dag_type_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "dead_code_format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "satd_format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "satd_severity_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "CliRunner::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CliRunner::run_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "CliRunner::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "deep_context_format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "deep_context_dag_type_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "deep_context_cache_strategy_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "tdg_format_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "test_cli_input_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_cli_adapter_decode_generate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_cli_adapter_decode_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_cli_adapter_decode_analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_cli_adapter_encode_success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_cli_adapter_encode_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_format_conversions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_cli_output_methods",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "CliAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliInput",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliRunner",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/unified_protocol/adapters/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/unified_protocol/adapters/http.rs",
      "total_complexity": {
        "cyclomatic": 40,
        "cognitive": 40,
        "nesting_max": 2,
        "lines": 152
      },
      "functions": [
        {
          "name": "HttpAdapter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpAdapter::bind",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "HttpAdapter::accept",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "HttpAdapter::from_stream",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpAdapter::protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpAdapter::decode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "HttpAdapter::encode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "HttpStreamAdapter::protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpStreamAdapter::decode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "HttpStreamAdapter::encode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "HttpServer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpServer::bind",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpServer::serve",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "handle_connection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "process_http_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "convert_hyper_to_http_input",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "collect_request_body",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "decode_http_input",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "handle_unified_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "encode_unified_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "serve_http_connection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpResponseBuilder::ok",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpResponseBuilder::not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpResponseBuilder::internal_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpResponseBuilder::json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpResponseBuilder::text",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HttpResponseBuilder::html",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_http_adapter_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_http_response_builder",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_http_adapter_encode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_http_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": [
        {
          "name": "HttpAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpStreamAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpServer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpResponseBuilder",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/unified_protocol/adapters/mcp.rs",
      "total_complexity": {
        "cyclomatic": 40,
        "cognitive": 48,
        "nesting_max": 2,
        "lines": 132
      },
      "functions": [
        {
          "name": "McpAdapter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpAdapter::with_stdin",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpAdapter::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpAdapter::protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpAdapter::decode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "McpAdapter::encode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "JsonRpcRequest::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcRequest::notification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcRequest::request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcResponse::success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcResponse::error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcError::parse_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcError::invalid_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcError::method_not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcError::invalid_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JsonRpcError::internal_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpReader::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpReader::read_message",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_json_rpc_request_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_json_rpc_notification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_json_rpc_response_success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_json_rpc_response_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_mcp_adapter_decode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_mcp_adapter_encode_success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_standard_json_rpc_errors",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": [
        {
          "name": "McpAdapter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "JsonRpcRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "JsonRpcResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "JsonRpcError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpReader",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/unified_protocol/mod.rs",
      "total_complexity": {
        "cyclomatic": 24,
        "cognitive": 24,
        "nesting_max": 1,
        "lines": 87
      },
      "functions": [
        {
          "name": "UnifiedRequest::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedRequest::with_body",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "UnifiedRequest::with_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "UnifiedRequest::with_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "UnifiedRequest::get_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedResponse::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedResponse::ok",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedResponse::with_body",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "UnifiedResponse::with_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "UnifiedResponse::with_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "UnifiedResponse::into_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "Protocol::fmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "AdapterRegistry::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AdapterRegistry::register",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "AdapterRegistry::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AdapterWrapper::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AdapterWrapper::decode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "AdapterWrapper::encode",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "AdapterWrapper::protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_unified_request_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_unified_response_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_protocol_display",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "UnifiedRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "UnifiedResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AdapterRegistry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AdapterWrapper",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/unified_protocol/test_harness.rs",
      "total_complexity": {
        "cyclomatic": 73,
        "cognitive": 97,
        "nesting_max": 5,
        "lines": 187
      },
      "functions": [
        {
          "name": "TestHarness::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TestHarness::with_template_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TestHarness::with_analysis_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TestHarness::test_endpoint",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 18,
            "nesting_max": 5,
            "lines": 26
          }
        },
        {
          "name": "TestHarness::test_template_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TestHarness::test_template_listing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestHarness::test_complexity_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TestHarness::test_error_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "TestHarness::run_test_suite",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "TestHarness::test_protocol",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "TestHarness::normalize_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "TestSuiteResults::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestSuiteResults::success_rate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "TestSuiteResults::is_successful",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestHarness::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_harness_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_template_generation_endpoint",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "test_error_handling_consistency",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "test_protocol_equivalence",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_suite_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "TestHarness",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "EquivalenceFailure",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestSuiteResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/unified_protocol/error.rs",
      "total_complexity": {
        "cyclomatic": 92,
        "cognitive": 92,
        "nesting_max": 1,
        "lines": 50
      },
      "functions": [
        {
          "name": "AppError::status_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "AppError::mcp_error_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "AppError::error_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 15,
            "cognitive": 15,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "AppError::to_protocol_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "AppError::to_mcp_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "AppError::to_http_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "AppError::to_cli_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "AppError::into_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "extract_protocol_from_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "set_protocol_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "clear_protocol_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_app_error_status_codes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_mcp_error_codes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_error_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_protocol_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_error_to_protocol_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "McpError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "HttpErrorResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CliErrorResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/unified_protocol/service.rs",
      "total_complexity": {
        "cyclomatic": 79,
        "cognitive": 87,
        "nesting_max": 2,
        "lines": 201
      },
      "functions": [
        {
          "name": "AppState::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedService::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "UnifiedService::with_template_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "UnifiedService::with_analysis_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "UnifiedService::router",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedService::process_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "UnifiedService::record_request_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "UnifiedService::record_request_metrics_by_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "UnifiedService::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefaultTemplateService::list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefaultTemplateService::get_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "DefaultTemplateService::generate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefaultAnalysisService::analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefaultAnalysisService::analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefaultAnalysisService::analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 12,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "DefaultAnalysisService::generate_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefaultAnalysisService::analyze_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "get_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "generate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_complexity_get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "generate_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_deep_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 22,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "mcp_endpoint",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 18,
            "cognitive": 18,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "health_check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_unified_service_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_default_template_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_template_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "UnifiedService",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AppState",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ServiceMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefaultTemplateService",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefaultAnalysisService",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ListTemplatesQuery",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateList",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateInfo",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateParameter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GenerateParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GeneratedTemplate",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityQueryParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexitySummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileComplexity",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FunctionComplexity",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnHotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DagParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DagAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ContextParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectStructure",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ContextMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileDeadCode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/tdg.rs",
      "total_complexity": {
        "cyclomatic": 12,
        "cognitive": 12,
        "nesting_max": 2,
        "lines": 21
      },
      "functions": [
        {
          "name": "TDGSeverity::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "TDGSeverity::as_str",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "TDGConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_tdg_severity_from_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_tdg_config_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": [
        {
          "name": "TDGScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGComponents",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGHotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGRecommendation",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGDistribution",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TDGBucket",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/models/dead_code.rs",
      "total_complexity": {
        "cyclomatic": 24,
        "cognitive": 24,
        "nesting_max": 1,
        "lines": 145
      },
      "functions": [
        {
          "name": "FileDeadCodeMetrics::calculate_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "FileDeadCodeMetrics::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FileDeadCodeMetrics::add_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "FileDeadCodeMetrics::update_percentage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "DeadCodeSummary::from_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "DeadCodeAnalysisConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_file_dead_code_metrics_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 22
          }
        },
        {
          "name": "test_dead_code_item_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_dead_code_type_variants",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_confidence_levels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_dead_code_ranking_result",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_dead_code_summary_from_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 24
          }
        },
        {
          "name": "test_dead_code_analysis_config_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_file_metrics_add_different_item_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_score_calculation_with_different_confidence_levels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 16
          }
        }
      ],
      "classes": [
        {
          "name": "FileDeadCodeMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeItem",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeRankingResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeAnalysisConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/dag.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 6,
        "nesting_max": 1,
        "lines": 24
      },
      "functions": [
        {
          "name": "DependencyGraph::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DependencyGraph::add_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DependencyGraph::add_edge",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DependencyGraph::filter_by_edge_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "DependencyGraph::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "DependencyGraph",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "NodeInfo",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Edge",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/churn.rs",
      "total_complexity": {
        "cyclomatic": 16,
        "cognitive": 16,
        "nesting_max": 1,
        "lines": 16
      },
      "functions": [
        {
          "name": "FileChurnMetrics::calculate_churn_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "ChurnOutputFormat::from_str",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "CodeChurnAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileChurnMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/template.rs",
      "total_complexity": {
        "cyclomatic": 16,
        "cognitive": 16,
        "nesting_max": 1,
        "lines": 4
      },
      "functions": [
        {
          "name": "Toolchain::priority",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "Toolchain::as_str",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "TemplateResource",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ParameterSpec",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GeneratedTemplate",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/unified_ast.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 81
      },
      "functions": [
        {
          "name": "NodeFlags::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "NodeFlags::set",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "NodeFlags::unset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "NodeFlags::has",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "NodeMetadata::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "NodeMetadata::clone",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstNode::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstNode::is_function",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstNode::is_type_definition",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstNode::complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "UnifiedAstNode::set_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstNode::fmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ColumnStore::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ColumnStore::push",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ColumnStore::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ColumnStore::get_mut",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ColumnStore::iter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ColumnStore::len",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ColumnStore::is_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstDag::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstDag::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstDag::add_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "AstDag::mark_clean",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstDag::dirty_nodes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstDag::generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_node_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_node_alignment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_node_flags",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_ast_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "NodeFlags",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "UnifiedAstNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ColumnStore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstDag",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "LanguageParsers",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/mcp.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 4
      },
      "functions": [
        {
          "name": "McpResponse::success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "McpResponse::error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "McpRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ToolCallParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GenerateTemplateArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ListTemplatesArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ResourceReadParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ValidateTemplateArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ScaffoldProjectArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SearchTemplatesArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PromptGetParams",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Prompt",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PromptArgument",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/models/error.rs",
      "total_complexity": {
        "cyclomatic": 12,
        "cognitive": 12,
        "nesting_max": 1,
        "lines": 2
      },
      "functions": [
        {
          "name": "TemplateError::to_mcp_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/lib.rs",
      "total_complexity": {
        "cyclomatic": 22,
        "cognitive": 34,
        "nesting_max": 2,
        "lines": 60
      },
      "functions": [
        {
          "name": "TemplateServer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TemplateServer::warm_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "TemplateServer::get_template_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_template_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_renderer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_metadata_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_content_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_s3_client",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateServer::get_bucket_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "run_mcp_server",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 20,
            "nesting_max": 2,
            "lines": 22
          }
        }
      ],
      "classes": [
        {
          "name": "S3Client",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateServer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/utils/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/utils/helpers.rs",
      "total_complexity": {
        "cyclomatic": 18,
        "cognitive": 20,
        "nesting_max": 2,
        "lines": 102
      },
      "functions": [
        {
          "name": "snake_case_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "kebab_case_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "pascal_case_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "current_year_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "current_date_helper",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "to_snake_case",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "to_kebab_case",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "to_pascal_case",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "test_to_snake_case_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_to_snake_case_edge_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_to_kebab_case_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_to_pascal_case_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_snake_case_helper_with_handlebars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_kebab_case_helper_with_handlebars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_pascal_case_helper_with_handlebars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_current_year_helper_with_handlebars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_current_date_helper_with_handlebars",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_helper_error_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/stateless_server.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 6,
        "nesting_max": 1,
        "lines": 30
      },
      "functions": [
        {
          "name": "StatelessTemplateServer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_template_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "StatelessTemplateServer::get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_template_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_renderer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_metadata_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_content_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_s3_client",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StatelessTemplateServer::get_bucket_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "StatelessTemplateServer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/handlers/prompts.rs",
      "total_complexity": {
        "cyclomatic": 11,
        "cognitive": 11,
        "nesting_max": 1,
        "lines": 9
      },
      "functions": [
        {
          "name": "handle_prompts_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "handle_prompt_get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 1,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/handlers/mod.rs",
      "total_complexity": {
        "cyclomatic": 9,
        "cognitive": 9,
        "nesting_max": 1,
        "lines": 1
      },
      "functions": [
        {
          "name": "handle_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/handlers/resources.rs",
      "total_complexity": {
        "cyclomatic": 12,
        "cognitive": 12,
        "nesting_max": 1,
        "lines": 16
      },
      "functions": [
        {
          "name": "handle_resource_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "handle_resource_read",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 9
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/handlers/tools.rs",
      "total_complexity": {
        "cyclomatic": 306,
        "cognitive": 373,
        "nesting_max": 4,
        "lines": 490
      },
      "functions": [
        {
          "name": "handle_tool_call",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "parse_tool_call_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "dispatch_tool_call",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "is_template_tool",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_analysis_tool",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "handle_template_tools",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "handle_analysis_tools",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "handle_generate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "handle_list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "handle_validate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "parse_validate_template_args",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "validate_template_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "find_missing_required_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "validate_parameter_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "validate_single_parameter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 4,
            "lines": 6
          }
        },
        {
          "name": "create_validation_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "handle_scaffold_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 22,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "handle_search_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "handle_get_server_info",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "handle_analyze_code_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "format_churn_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "format_churn_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 15
          }
        },
        {
          "name": "format_churn_as_csv",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "calculate_relevance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "handle_analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 19
          }
        },
        {
          "name": "resolve_project_path_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "detect_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 14,
            "nesting_max": 4,
            "lines": 6
          }
        },
        {
          "name": "build_complexity_thresholds",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "is_build_artifact_dir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "analyze_project_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "should_analyze_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "matches_include_filters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "matches_pattern",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "analyze_file_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "format_complexity_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 3
          }
        },
        {
          "name": "format_complexity_rankings",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "handle_analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 17,
            "cognitive": 17,
            "nesting_max": 1,
            "lines": 15
          }
        },
        {
          "name": "handle_generate_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 12,
            "nesting_max": 1,
            "lines": 19
          }
        },
        {
          "name": "handle_analyze_system_architecture",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 32,
            "cognitive": 45,
            "nesting_max": 3,
            "lines": 37
          }
        },
        {
          "name": "handle_analyze_defect_probability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 19
          }
        },
        {
          "name": "handle_analyze_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 17
          }
        },
        {
          "name": "format_dead_code_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 12,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "format_dead_code_summary_mcp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 18,
            "nesting_max": 3,
            "lines": 20
          }
        },
        {
          "name": "format_dead_code_as_sarif_mcp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "format_dead_code_as_markdown_mcp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 20
          }
        },
        {
          "name": "handle_analyze_tdg",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "format_tdg_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 22
          }
        },
        {
          "name": "handle_analyze_deep_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "parse_deep_context_args",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "resolve_project_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "parse_analysis_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 18,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "parse_dag_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "parse_cache_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "build_deep_context_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "create_deep_context_analyzer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "format_deep_context_response",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_deep_context_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "format_deep_context_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 31
          }
        }
      ],
      "classes": [
        {
          "name": "ValidationResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeCodeChurnArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeComplexityArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeDagArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GenerateContextArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeSystemArchitectureArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeDefectProbabilityArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeDeadCodeArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeTdgArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalyzeDeepContextArgs",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/handlers/initialize.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 3
      },
      "functions": [
        {
          "name": "handle_initialize",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "handle_tools_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/services/code_intelligence.rs",
      "total_complexity": {
        "cyclomatic": 50,
        "cognitive": 84,
        "nesting_max": 3,
        "lines": 240
      },
      "functions": [
        {
          "name": "AnalysisRequest::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "UnifiedCache::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedCache::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedCache::put",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CodeIntelligence::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CodeIntelligence::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CodeIntelligence::analyze_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "CodeIntelligence::analyze_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 23,
            "nesting_max": 3,
            "lines": 56
          }
        },
        {
          "name": "CodeIntelligence::build_analysis_futures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "CodeIntelligence::get_dag_stats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_dag_enhanced",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 29
          }
        },
        {
          "name": "test_analysis_request_cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_unified_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_code_intelligence_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "AnalysisRequest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalysisReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityHotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DependencyGraphReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefectScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GraphMetricsReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CentralityScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "UnifiedCache",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CodeIntelligence",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/file_classifier.rs",
      "total_complexity": {
        "cyclomatic": 74,
        "cognitive": 92,
        "nesting_max": 5,
        "lines": 231
      },
      "functions": [
        {
          "name": "FileClassifier::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FileClassifier::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FileClassifier::should_parse",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 2,
            "lines": 17
          }
        },
        {
          "name": "FileClassifier::is_vendor_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 4,
            "lines": 10
          }
        },
        {
          "name": "FileClassifier::is_binary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "FileClassifier::is_minified",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "FileClassifier::is_build_artifact",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "calculate_shannon_entropy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "DebugReporter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DebugReporter::record_decision",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DebugReporter::record_parse_result",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "DebugReporter::generate_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "DebugReporter::save_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "DebugReporter::get_memory_usage_mb",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 11,
            "nesting_max": 5,
            "lines": 8
          }
        },
        {
          "name": "test_vendor_detection_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "test_performance_on_large_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_entropy_calculation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_binary_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_line_length_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_rust_target_directory_filtering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_additional_build_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_debug_reporter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        }
      ],
      "classes": [
        {
          "name": "FileClassifierConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileClassifier",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebugReporter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebugEvent",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebugReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebugSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "VendorRules",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/context.rs",
      "total_complexity": {
        "cyclomatic": 157,
        "cognitive": 200,
        "nesting_max": 3,
        "lines": 288
      },
      "functions": [
        {
          "name": "AstItem::display_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::get_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::get_visibility",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::get_derives",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::visit_item_fn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::visit_item_struct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "RustVisitor::visit_item_enum",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::visit_item_trait",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::visit_item_impl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "RustVisitor::visit_item_mod",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustVisitor::visit_item_use",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "analyze_rust_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_rust_file_with_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "analyze_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_rust_file_with_persistent_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "analyze_project_with_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "build_gitignore",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "scan_and_analyze_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "analyze_file_by_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "analyze_deno_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "build_project_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "calculate_item_counts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 22,
            "nesting_max": 3,
            "lines": 3
          }
        },
        {
          "name": "read_dependencies",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "read_rust_dependencies",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 5
          }
        },
        {
          "name": "read_deno_dependencies",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "read_python_dependencies",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "analyze_project_with_persistent_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "scan_and_analyze_files_persistent",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "analyze_file_by_toolchain_persistent",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "format_context_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "format_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "format_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "format_dependencies",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "format_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "group_items_by_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 16,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "format_item_groups",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "format_item_group",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "format_module_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_struct_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "format_enum_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_trait_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_function_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "format_impl_item",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "format_footer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "format_deep_context_as_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "format_quality_scorecard",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "format_project_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "format_analysis_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 35
          }
        },
        {
          "name": "format_ast_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "count_ast_items",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 22,
            "nesting_max": 3,
            "lines": 9
          }
        }
      ],
      "classes": [
        {
          "name": "ProjectContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "RustVisitor",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GroupedItems",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/services/mermaid_property_tests.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 5
      },
      "functions": [
        {
          "name": "node_id_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "label_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "node_type_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "edge_type_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "node_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/services/deep_context.rs",
      "total_complexity": {
        "cyclomatic": 582,
        "cognitive": 724,
        "nesting_max": 4,
        "lines": 1019
      },
      "functions": [
        {
          "name": "CategorizedAstItems::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DeepContextAnalyzer::format_as_comprehensive_markdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 24
          }
        },
        {
          "name": "DeepContextAnalyzer::format_as_comprehensive_markdown_legacy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "DeepContextAnalyzer::format_legacy_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "DeepContextAnalyzer::format_legacy_main_sections",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "DeepContextAnalyzer::format_legacy_analysis_sections",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "DeepContextAnalyzer::format_as_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::format_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 15,
            "cognitive": 30,
            "nesting_max": 4,
            "lines": 24
          }
        },
        {
          "name": "DeepContextAnalyzer::overall_health_emoji",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::format_annotated_tree",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::format_tree_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 26
          }
        },
        {
          "name": "DeepContextAnalyzer::format_enhanced_ast_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "DeepContextAnalyzer::format_single_file_ast",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "DeepContextAnalyzer::categorize_ast_items",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 16,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "DeepContextAnalyzer::write_ast_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "DeepContextAnalyzer::write_ast_details",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "DeepContextAnalyzer::write_functions_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "DeepContextAnalyzer::write_structs_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "DeepContextAnalyzer::write_enums_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "DeepContextAnalyzer::write_traits_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "DeepContextAnalyzer::write_impls_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "DeepContextAnalyzer::write_modules_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "DeepContextAnalyzer::write_imports_section",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "DeepContextAnalyzer::write_file_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "DeepContextAnalyzer::format_complexity_hotspots",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "DeepContextAnalyzer::format_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "DeepContextAnalyzer::format_technical_debt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 16,
            "nesting_max": 3,
            "lines": 17
          }
        },
        {
          "name": "DeepContextAnalyzer::format_dead_code_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 18,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "DeepContextAnalyzer::format_cross_references",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "DeepContextAnalyzer::format_defect_predictions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "DeepContextAnalyzer::format_prioritized_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 17,
            "cognitive": 39,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "DeepContextAnalyzer::analyze_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 18
          }
        },
        {
          "name": "DeepContextAnalyzer::discover_project_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::build_file_tree_recursive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 11,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "DeepContextAnalyzer::should_exclude_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "DeepContextAnalyzer::execute_parallel_analyses",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::spawn_analysis_tasks",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::spawn_analysis_task",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 21
          }
        },
        {
          "name": "DeepContextAnalyzer::collect_analysis_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::process_analysis_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "DeepContextAnalyzer::integrate_analysis_result",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 13,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "DeepContextAnalyzer::build_cross_language_references",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::correlate_defects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "DeepContextAnalyzer::collect_file_tdg_scores",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "DeepContextAnalyzer::calculate_tdg_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 23
          }
        },
        {
          "name": "DeepContextAnalyzer::build_tdg_defect_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "DeepContextAnalyzer::generate_tdg_hotspots",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeepContextAnalyzer::extract_complexity_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "DeepContextAnalyzer::extract_churn_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "DeepContextAnalyzer::build_file_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "DeepContextAnalyzer::calculate_defect_probabilities",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::build_defect_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::generate_defect_hotspots",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::calculate_quality_scores",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::generate_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeepContextAnalyzer::analyze_template_provenance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_ast_contexts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "analyze_satd",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "DeepContextConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityThresholds",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeepContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ContextMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheStats",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnnotatedFileTree",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnnotatedNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "NodeAnnotations",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AnalysisResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "EnhancedFileContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileChurnMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefectAnnotations",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeAnnotation",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeItem",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TechnicalDebtItem",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityViolation",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CrossLangReference",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "QualityScorecard",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateProvenance",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DriftAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefectSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefectHotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileLocation",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "RefactoringEstimate",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PrioritizedRecommendation",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CategorizedAstItems",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstFunction",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstStruct",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstEnum",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstTrait",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstImpl",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstModule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstUse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeepContextAnalyzer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ParallelAnalysisResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/ranking.rs",
      "total_complexity": {
        "cyclomatic": 43,
        "cognitive": 57,
        "nesting_max": 3,
        "lines": 382
      },
      "functions": [
        {
          "name": "RankingEngine::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RankingEngine::rank_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "RankingEngine::format_rankings_table",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "RankingEngine::format_rankings_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RankingEngine::clear_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "CompositeComplexityScore::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CompositeComplexityScore::eq",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CompositeComplexityScore::partial_cmp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ChurnScore::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ChurnScore::eq",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ChurnScore::partial_cmp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicationScore::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicationScore::eq",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicationScore::partial_cmp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "rank_files_vectorized",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "ComplexityRanker::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComplexityRanker::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComplexityRanker::calculate_composite_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "ComplexityRanker::compute_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 16,
            "nesting_max": 3,
            "lines": 15
          }
        },
        {
          "name": "ComplexityRanker::format_ranking_entry",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComplexityRanker::ranking_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "rank_files_by_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "MockRanker::compute_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MockRanker::format_ranking_entry",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MockRanker::ranking_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "create_test_file_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_empty_file_list",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_limit_exceeds_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_vectorized_ranking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_composite_complexity_score_ordering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_composite_complexity_score_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_composite_complexity_score_equality",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_churn_score_default_and_ordering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_duplication_score_default_and_ordering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_vectorized_ranking_small_dataset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_vectorized_ranking_large_dataset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_vectorized_ranking_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_complexity_ranker_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_complexity_ranker_new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_complexity_ranker_calculate_composite_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_complexity_ranker_calculate_composite_score_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_ranking_engine_with_temp_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 16
          }
        },
        {
          "name": "test_ranking_engine_zero_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_ranking_engine_cache",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_ranking_engine_format_rankings_table_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_ranking_engine_format_rankings_table",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_ranking_engine_format_rankings_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_complexity_ranker_compute_score_rust_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_complexity_ranker_compute_score_javascript_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_complexity_ranker_compute_score_python_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_complexity_ranker_compute_score_unknown_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_complexity_ranker_compute_score_nonexistent_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_complexity_ranker_format_ranking_entry",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_rank_files_by_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_rank_files_by_complexity_with_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_rank_files_by_complexity_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_ranking_engine_with_nonexistent_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_ranking_engine_mixed_existing_nonexistent",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "TestRanker::compute_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestRanker::format_ranking_entry",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestRanker::ranking_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_custom_ranker",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_all_score_types_partial_ord",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        }
      ],
      "classes": [
        {
          "name": "RankingEngine",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CompositeComplexityScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DuplicationScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityRanker",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MockRanker",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestRanker",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/complexity.rs",
      "total_complexity": {
        "cyclomatic": 47,
        "cognitive": 63,
        "nesting_max": 4,
        "lines": 147
      },
      "functions": [
        {
          "name": "ComplexityThresholds::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComplexityVisitor::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComplexityVisitor::calculate_cognitive_increment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "ComplexityVisitor::enter_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "ComplexityVisitor::exit_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "compute_complexity_cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "CyclomaticComplexityRule::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CyclomaticComplexityRule::evaluate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "CognitiveComplexityRule::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CognitiveComplexityRule::evaluate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "aggregate_results",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 16,
            "cognitive": 24,
            "nesting_max": 4,
            "lines": 52
          }
        },
        {
          "name": "format_complexity_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 28
          }
        },
        {
          "name": "format_complexity_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 14,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "format_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 8
          }
        }
      ],
      "classes": [
        {
          "name": "ComplexityMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileComplexityMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FunctionComplexity",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ClassComplexity",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityThresholds",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexitySummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityHotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComplexityVisitor",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CyclomaticComplexityRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CognitiveComplexityRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/tdg_calculator.rs",
      "total_complexity": {
        "cyclomatic": 122,
        "cognitive": 158,
        "nesting_max": 6,
        "lines": 333
      },
      "functions": [
        {
          "name": "TDGCalculator::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TDGCalculator::with_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TDGCalculator::calculate_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "TDGCalculator::calculate_file_uncached",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "TDGCalculator::calculate_batch",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "TDGCalculator::analyze_directory",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 21
          }
        },
        {
          "name": "TDGCalculator::analyze_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "TDGCalculator::calculate_complexity_factor",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 13,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "TDGCalculator::calculate_churn_factor",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 18,
            "nesting_max": 6,
            "lines": 11
          }
        },
        {
          "name": "TDGCalculator::calculate_coupling_factor",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "TDGCalculator::calculate_duplication_factor",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "TDGCalculator::calculate_domain_risk",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "TDGCalculator::calculate_weighted_tdg",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TDGCalculator::calculate_confidence",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "TDGCalculator::calculate_percentiles",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "TDGCalculator::percentile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "TDGCalculator::identify_primary_factor",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "TDGCalculator::estimate_refactoring_hours",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "TDGCalculator::generate_explanation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "TDGCalculator::generate_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "TDGCalculator::discover_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TDGCalculator::count_imports",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "TDGCalculator::calculate_distribution",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "TDGCalculator::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TDGCalculator::clone",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TDGComponents::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_tdg_calculation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_tdg_distribution",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "TDGCalculator",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/deterministic_mermaid_engine.rs",
      "total_complexity": {
        "cyclomatic": 94,
        "cognitive": 140,
        "nesting_max": 7,
        "lines": 258
      },
      "functions": [
        {
          "name": "DeterministicMermaidEngine::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeterministicMermaidEngine::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeterministicMermaidEngine::generate_codebase_modules_mmd",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 19
          }
        },
        {
          "name": "DeterministicMermaidEngine::generate_service_interactions_mmd",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 17,
            "cognitive": 25,
            "nesting_max": 2,
            "lines": 26
          }
        },
        {
          "name": "DeterministicMermaidEngine::compute_pagerank",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 25,
            "nesting_max": 7,
            "lines": 27
          }
        },
        {
          "name": "DeterministicMermaidEngine::filter_to_services",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "DeterministicMermaidEngine::is_service_module",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeterministicMermaidEngine::get_edge_arrow",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "DeterministicMermaidEngine::sanitize_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "DeterministicMermaidEngine::escape_mermaid_label",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_pagerank_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_mermaid_output_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_sanitize_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_escape_mermaid_label",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_is_service_module",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_complexity_styling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_empty_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "DeterministicMermaidEngine",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/ast_typescript.rs",
      "total_complexity": {
        "cyclomatic": 170,
        "cognitive": 206,
        "nesting_max": 3,
        "lines": 375
      },
      "functions": [
        {
          "name": "analyze_typescript_file_with_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_typescript_file_with_complexity_cached",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "analyze_javascript_file_with_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "analyze_typescript_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_typescript_file_with_classifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 17
          }
        },
        {
          "name": "analyze_javascript_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_javascript_file_with_classifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 17
          }
        },
        {
          "name": "TypeScriptVisitor::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::count_class_fields",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "TypeScriptVisitor::add_class_to_items",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::process_class_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "TypeScriptVisitor::process_class_members",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 2
          }
        },
        {
          "name": "TypeScriptVisitor::process_method",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "TypeScriptVisitor::process_constructor",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TypeScriptVisitor::extract_method_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::analyze_function_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "TypeScriptVisitor::process_variable_declaration",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 3
          }
        },
        {
          "name": "TypeScriptVisitor::process_arrow_function",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "TypeScriptVisitor::process_function_expression",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::add_function_to_items",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::analyze_standalone_function",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "TypeScriptVisitor::count_lines",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "TypeScriptVisitor::enter_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::exit_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::add_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "TypeScriptVisitor::visit_fn_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "TypeScriptVisitor::visit_class_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "TypeScriptVisitor::visit_var_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "TypeScriptVisitor::visit_ts_interface_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::visit_ts_type_alias_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::visit_ts_enum_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::visit_import_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::visit_export_decl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptVisitor::visit_if_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "TypeScriptVisitor::visit_switch_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "TypeScriptVisitor::visit_for_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::visit_for_in_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::visit_for_of_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::visit_while_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::visit_do_while_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "TypeScriptVisitor::visit_try_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "TypeScriptVisitor::visit_bin_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "TypeScriptVisitor::visit_cond_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        }
      ],
      "classes": [
        {
          "name": "TypeScriptVisitor",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/ast_rust.rs",
      "total_complexity": {
        "cyclomatic": 94,
        "cognitive": 146,
        "nesting_max": 6,
        "lines": 241
      },
      "functions": [
        {
          "name": "analyze_rust_file_with_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_rust_file_with_complexity_and_classifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "analyze_rust_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_rust_file_with_classifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "RustComplexityVisitor::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustComplexityVisitor::count_lines",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "RustComplexityVisitor::enter_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "RustComplexityVisitor::exit_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustComplexityVisitor::add_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "RustComplexityVisitor::get_visibility_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "RustComplexityVisitor::count_fields",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "RustComplexityVisitor::visit_item_fn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "RustComplexityVisitor::visit_item_struct",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "RustComplexityVisitor::visit_item_enum",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "RustComplexityVisitor::visit_item_trait",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "RustComplexityVisitor::visit_item_impl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 16,
            "nesting_max": 6,
            "lines": 14
          }
        },
        {
          "name": "RustComplexityVisitor::visit_item_use",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "RustComplexityVisitor::visit_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 26,
            "nesting_max": 3,
            "lines": 33
          }
        },
        {
          "name": "RustComplexityVisitor::visit_arm",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "RustComplexityVisitor::visit_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        }
      ],
      "classes": [
        {
          "name": "RustComplexityVisitor",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/duplicate_detector.rs",
      "total_complexity": {
        "cyclomatic": 31,
        "cognitive": 31,
        "nesting_max": 2,
        "lines": 184
      },
      "functions": [
        {
          "name": "VectorizedLSH::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "VectorizedLSH::insert",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "VectorizedLSH::query",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "VectorizedLSH::compute_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "ANNIndex::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ANNIndex::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ANNIndex::insert",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ANNIndex::search",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "euclidean_distance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "UniversalFeatureExtractor::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicateDetector::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicateDetector::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicateDetector::detect_all_clones",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "DuplicateDetector::compute_ast_embedding",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "DuplicateDetector::index_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "DuplicateDetector::detect_exact_clones",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "DuplicateDetector::detect_renamed_clones",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "DuplicateDetector::detect_gapped_clones",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicateDetector::detect_semantic_clones",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DuplicateDetector::merge_clone_groups",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DuplicateDetector::extract_structural_features",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "DuplicateDetector::extract_semantic_features",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "DuplicateDetector::extract_contextual_features",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "compute_rabin_fingerprint",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "compute_alpha_normalized_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "compute_minhash_signature",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_lsh_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_ann_index",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_duplicate_detector",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": [
        {
          "name": "VectorizedLSH",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ANNIndex",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "UniversalFeatureExtractor",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CloneReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CloneGroup",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CloneInstance",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CloneSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DuplicateDetector",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/git_clone.rs",
      "total_complexity": {
        "cyclomatic": 65,
        "cognitive": 71,
        "nesting_max": 3,
        "lines": 155
      },
      "functions": [
        {
          "name": "GitCloner::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitCloner::with_timeout",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "GitCloner::with_max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "GitCloner::get_progress",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitCloner::clone_or_update",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 22
          }
        },
        {
          "name": "GitCloner::clone_shallow",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "GitCloner::update_repository",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "GitCloner::is_cache_fresh",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 5
          }
        },
        {
          "name": "GitCloner::parse_github_url",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "GitCloner::compute_cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "GitCloner::check_repo_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_parse_github_urls",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_cache_key_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "CloneProgress",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ClonedRepo",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GitCloner",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ParsedGitHubUrl",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/mermaid_generator.rs",
      "total_complexity": {
        "cyclomatic": 132,
        "cognitive": 169,
        "nesting_max": 2,
        "lines": 338
      },
      "functions": [
        {
          "name": "MermaidGenerator::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MermaidGenerator::generate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "MermaidGenerator::generate_with_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 18,
            "nesting_max": 2,
            "lines": 20
          }
        },
        {
          "name": "MermaidGenerator::generate_legacy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "MermaidGenerator::generate_nodes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "MermaidGenerator::escape_mermaid_label",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MermaidGenerator::generate_edges",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "MermaidGenerator::get_edge_arrow",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "MermaidGenerator::generate_styles",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "MermaidGenerator::get_complexity_color",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "MermaidGenerator::get_node_stroke_style",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "MermaidGenerator::sanitize_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "MermaidGenerator::get_semantic_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MermaidGenerator::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "load_reference_standard",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "load_complex_styled_standard",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "load_invalid_example",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "validate_mermaid_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "validate_mermaid_directive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "validate_content_not_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "validate_no_raw_angle_brackets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "validate_node_definitions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 19,
            "cognitive": 27,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "test_reference_standards_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_invalid_example_is_correctly_identified",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_generated_output_matches_reference_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_all_node_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 21
          }
        },
        {
          "name": "test_complex_labels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_sanitize_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_all_edge_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "test_empty_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_no_complexity_display",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_without_complexity_display",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_edge_with_missing_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_default_implementation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_numeric_id_sanitization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_options_configuration",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_mermaid_output_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_regression_empty_nodes_bug",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "test_escape_mermaid_label",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_angle_brackets_and_pipes_compatibility",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_edge_arrow_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "test_realistic_dependency_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 19
          }
        }
      ],
      "classes": [
        {
          "name": "MermaidGenerator",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MermaidOptions",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/file_discovery.rs",
      "total_complexity": {
        "cyclomatic": 67,
        "cognitive": 81,
        "nesting_max": 4,
        "lines": 270
      },
      "functions": [
        {
          "name": "FileDiscoveryConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ProjectFileDiscovery::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ProjectFileDiscovery::with_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ProjectFileDiscovery::with_classifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ProjectFileDiscovery::discover_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 14,
            "nesting_max": 3,
            "lines": 44
          }
        },
        {
          "name": "ProjectFileDiscovery::create_walk_builder",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "ProjectFileDiscovery::should_include_entry",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "ProjectFileDiscovery::is_external_repository",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ProjectFileDiscovery::is_build_artifact",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "ProjectFileDiscovery::is_analyzable_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "ProjectFileDiscovery::get_discovery_stats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 9,
            "nesting_max": 4,
            "lines": 15
          }
        },
        {
          "name": "ExternalRepoFilter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExternalRepoFilter::is_external_dependency",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExternalRepoFilter::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_file_discovery_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_external_repo_filtering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_max_depth_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_custom_ignore_patterns",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_file_extension_filtering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_discovery_stats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        }
      ],
      "classes": [
        {
          "name": "FileDiscoveryConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectFileDiscovery",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DiscoveryStats",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ExternalRepoFilter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/makefile_linter/mod.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 40
      },
      "functions": [
        {
          "name": "lint_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "calculate_quality_score",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_calculate_quality_score_perfect",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_calculate_quality_score_with_errors",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_calculate_quality_score_with_warnings",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_calculate_quality_score_minimum",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_lint_result_methods",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_lint_makefile_async",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_lint_makefile_file_not_found",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/services/makefile_linter/parser.rs",
      "total_complexity": {
        "cyclomatic": 173,
        "cognitive": 249,
        "nesting_max": 4,
        "lines": 521
      },
      "functions": [
        {
          "name": "MakefileParser::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileParser::safe_slice",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "MakefileParser::parse",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "MakefileParser::parse_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 16,
            "cognitive": 31,
            "nesting_max": 3,
            "lines": 17
          }
        },
        {
          "name": "MakefileParser::parse_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 23
          }
        },
        {
          "name": "MakefileParser::parse_variable",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "MakefileParser::parse_recipe_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 15,
            "nesting_max": 3,
            "lines": 28
          }
        },
        {
          "name": "MakefileParser::parse_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileParser::parse_prerequisites",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "MakefileParser::parse_comment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "MakefileParser::parse_include",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 15
          }
        },
        {
          "name": "MakefileParser::parse_conditional",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "MakefileParser::find_char_swar",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "MakefileParser::has_byte",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "MakefileParser::find_assignment_or_colon",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 16,
            "cognitive": 33,
            "nesting_max": 4,
            "lines": 13
          }
        },
        {
          "name": "MakefileParser::at_end",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileParser::peek",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "MakefileParser::advance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "MakefileParser::skip_spaces",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "MakefileParser::skip_whitespace_and_blank_lines",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "MakefileParser::skip_to_next_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "MakefileParser::starts_with",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_parser_new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_parse_empty_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_parse_simple_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_parse_variable",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_parse_comment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_parse_pattern_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_parse_phony_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_parse_double_colon_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_parse_include",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_parse_recipe_with_prefixes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_parse_automatic_variables",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_parse_errors",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_skip_functions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_at_end",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_advance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_starts_with",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": [
        {
          "name": "MakefileParser",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/makefile_linter/rules/mod.rs",
      "total_complexity": {
        "cyclomatic": 21,
        "cognitive": 21,
        "nesting_max": 1,
        "lines": 97
      },
      "functions": [
        {
          "name": "LintResult::has_errors",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LintResult::error_count",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LintResult::max_severity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "RuleRegistry::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "RuleRegistry::register",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RuleRegistry::check_all",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_severity_ordering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_violation_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_rule_registry_new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "TestRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_check_all_empty_ast",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "TestRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TestRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MinimalRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MinimalRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_makefile_with_phony_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "Violation",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "LintResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "RuleRegistry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MinimalRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/makefile_linter/rules/checkmake.rs",
      "total_complexity": {
        "cyclomatic": 125,
        "cognitive": 236,
        "nesting_max": 6,
        "lines": 274
      },
      "functions": [
        {
          "name": "MinPhonyRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MinPhonyRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MinPhonyRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 13,
            "nesting_max": 4,
            "lines": 14
          }
        },
        {
          "name": "PhonyDeclaredRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PhonyDeclaredRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PhonyDeclaredRule::default_severity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PhonyDeclaredRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 22,
            "nesting_max": 4,
            "lines": 14
          }
        },
        {
          "name": "MaxBodyLengthRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MaxBodyLengthRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MaxBodyLengthRule::default_severity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MaxBodyLengthRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 7,
            "nesting_max": 3,
            "lines": 11
          }
        },
        {
          "name": "TimestampExpandedRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TimestampExpandedRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TimestampExpandedRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 6
          }
        },
        {
          "name": "UndefinedVariableRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UndefinedVariableRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UndefinedVariableRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 12,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "check_undefined_in_text",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 18,
            "cognitive": 57,
            "nesting_max": 6,
            "lines": 26
          }
        },
        {
          "name": "is_automatic_var",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_function_call",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 25,
            "cognitive": 25,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PortabilityRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PortabilityRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PortabilityRule::default_severity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PortabilityRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "test_min_phony_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 16
          }
        },
        {
          "name": "test_phony_declared_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_max_body_length_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_timestamp_expanded_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_undefined_variable_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_portability_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_is_automatic_var",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_is_function_call",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": [
        {
          "name": "MinPhonyRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PhonyDeclaredRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MaxBodyLengthRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TimestampExpandedRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "UndefinedVariableRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PortabilityRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/makefile_linter/rules/performance.rs",
      "total_complexity": {
        "cyclomatic": 71,
        "cognitive": 155,
        "nesting_max": 6,
        "lines": 173
      },
      "functions": [
        {
          "name": "RecursiveExpansionRule::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RecursiveExpansionRule::id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RecursiveExpansionRule::default_severity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RecursiveExpansionRule::check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 23,
            "cognitive": 49,
            "nesting_max": 6,
            "lines": 41
          }
        },
        {
          "name": "extract_var_refs",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 15,
            "cognitive": 43,
            "nesting_max": 5,
            "lines": 27
          }
        },
        {
          "name": "count_var_usage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "is_function_call",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "is_automatic_var",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_recursive_expansion_rule",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 12,
            "nesting_max": 3,
            "lines": 21
          }
        },
        {
          "name": "test_extract_var_refs",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_count_var_usage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_expensive_propagation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_multiple_targets_with_expensive_prereq",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "RecursiveExpansionRule",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/makefile_linter/ast.rs",
      "total_complexity": {
        "cyclomatic": 42,
        "cognitive": 46,
        "nesting_max": 3,
        "lines": 141
      },
      "functions": [
        {
          "name": "SourceSpan::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SourceSpan::file_level",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileAst::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileAst::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileAst::add_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "MakefileAst::find_rules_by_target",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 6
          }
        },
        {
          "name": "MakefileAst::get_phony_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "MakefileAst::count_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileAst::count_phony_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MakefileAst::has_pattern_rules",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "MakefileAst::uses_automatic_variables",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 12,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "MakefileAst::get_variables",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_makefile_ast_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_add_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_find_rules_by_target",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_get_phony_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_source_span",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_count_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_count_phony_targets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_has_pattern_rules",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_uses_automatic_variables",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_get_variables",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_metadata_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "MakefileAst",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MakefileNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "RecipeLine",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "RecipePrefixes",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SourceSpan",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MakefileMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/satd_detector.rs",
      "total_complexity": {
        "cyclomatic": 214,
        "cognitive": 330,
        "nesting_max": 6,
        "lines": 377
      },
      "functions": [
        {
          "name": "DebtCategory::as_str",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "DebtCategory::fmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "Severity::escalate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "Severity::reduce",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "DebtClassifier::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DebtClassifier::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DebtClassifier::classify_comment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "DebtClassifier::adjust_severity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "SATDDetector::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SATDDetector::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "SATDDetector::extract_from_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 30,
            "nesting_max": 6,
            "lines": 21
          }
        },
        {
          "name": "SATDDetector::extract_from_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "SATDDetector::extract_comment_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "SATDDetector::find_comment_column",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "SATDDetector::hash_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "SATDDetector::analyze_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 25,
            "nesting_max": 4,
            "lines": 27
          }
        },
        {
          "name": "SATDDetector::analyze_directory",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SATDDetector::analyze_directory_with_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 20,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "SATDDetector::find_source_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "SATDDetector::collect_files_recursive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 21,
            "nesting_max": 4,
            "lines": 13
          }
        },
        {
          "name": "SATDDetector::is_source_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "SATDDetector::is_test_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "SATDDetector::generate_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 18,
            "nesting_max": 3,
            "lines": 16
          }
        },
        {
          "name": "test_pattern_classification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_context_hash_stability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_extract_from_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_comment_extraction",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_directory_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_severity_adjustment",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_metrics_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        }
      ],
      "classes": [
        {
          "name": "SATDDetector",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TechnicalDebt",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SATDAnalysisResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SATDSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebtClassifier",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebtPattern",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DebtEvolution",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SATDMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CategoryMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/dogfooding_engine.rs",
      "total_complexity": {
        "cyclomatic": 70,
        "cognitive": 92,
        "nesting_max": 3,
        "lines": 319
      },
      "functions": [
        {
          "name": "DogfoodingEngine::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DogfoodingEngine::generate_ast_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 25
          }
        },
        {
          "name": "DogfoodingEngine::generate_combined_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "DogfoodingEngine::generate_complexity_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 30
          }
        },
        {
          "name": "DogfoodingEngine::get_churn_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "DogfoodingEngine::generate_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "DogfoodingEngine::generate_server_info",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 16
          }
        },
        {
          "name": "DogfoodingEngine::analyze_all_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "DogfoodingEngine::analyze_single_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 22,
            "nesting_max": 3,
            "lines": 17
          }
        },
        {
          "name": "DogfoodingEngine::compute_dag_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "DogfoodingEngine::compute_metrics_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "DogfoodingEngine::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_ast_context_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_combined_metrics_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_server_info_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "DogfoodingEngine",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileHotspot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DagMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/semantic_naming.rs",
      "total_complexity": {
        "cyclomatic": 32,
        "cognitive": 34,
        "nesting_max": 3,
        "lines": 77
      },
      "functions": [
        {
          "name": "SemanticNamer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "SemanticNamer::get_semantic_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "SemanticNamer::path_to_module",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 6,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "SemanticNamer::clean_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "SemanticNamer::detect_language",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "SemanticNamer::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_path_to_module_rust",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_path_to_module_python",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_get_semantic_name_priority",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_clean_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "SemanticNamer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/dead_code_analyzer.rs",
      "total_complexity": {
        "cyclomatic": 129,
        "cognitive": 205,
        "nesting_max": 4,
        "lines": 395
      },
      "functions": [
        {
          "name": "HierarchicalBitSet::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HierarchicalBitSet::set",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HierarchicalBitSet::is_set",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HierarchicalBitSet::as_mut_slice",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "HierarchicalBitSet::count_set",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "VTableResolver::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "VTableResolver::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "VTableResolver::resolve_dynamic_call",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 4,
            "lines": 7
          }
        },
        {
          "name": "DeadCodeAnalyzer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeadCodeAnalyzer::with_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DeadCodeAnalyzer::analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeadCodeAnalyzer::analyze_dependency_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeadCodeAnalyzer::build_reference_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "DeadCodeAnalyzer::resolve_dynamic_calls",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "DeadCodeAnalyzer::mark_reachable_vectorized",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeadCodeAnalyzer::mark_reachable_vectorized_avx2",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeadCodeAnalyzer::mark_reachable_scalar",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "DeadCodeAnalyzer::classify_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 17,
            "nesting_max": 3,
            "lines": 18
          }
        },
        {
          "name": "DeadCodeAnalyzer::add_entry_point",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DeadCodeAnalyzer::add_reference",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "DeadCodeAnalyzer::analyze_with_ranking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 15
          }
        },
        {
          "name": "DeadCodeAnalyzer::aggregate_by_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 9,
            "nesting_max": 3,
            "lines": 30
          }
        },
        {
          "name": "DeadCodeAnalyzer::build_reference_graph_from_dep_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 18,
            "cognitive": 29,
            "nesting_max": 3,
            "lines": 16
          }
        },
        {
          "name": "DeadCodeAnalyzer::classify_dead_code_from_dep_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 14,
            "nesting_max": 3,
            "lines": 18
          }
        },
        {
          "name": "CrossLangReferenceGraph::edges_for_chunk",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_hierarchical_bitset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_dead_code_analyzer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_vtable_resolver",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_reference_edge_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_reference_node_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_dead_code_analyzer_with_entry_points",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_coverage_data_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_cross_lang_reference_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_analyze_with_ranking",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 9
          }
        }
      ],
      "classes": [
        {
          "name": "HierarchicalBitSet",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CrossLangReferenceGraph",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ReferenceEdge",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ReferenceNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "VTableResolver",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "VTable",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CoverageData",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeItem",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "UnreachableBlock",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeSummary",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeAnalyzer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/template_service.rs",
      "total_complexity": {
        "cyclomatic": 64,
        "cognitive": 93,
        "nesting_max": 6,
        "lines": 100
      },
      "functions": [
        {
          "name": "get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "generate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "generate_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "list_all_resources",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "parse_template_uri",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "build_template_prefix",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "extract_filename",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "validate_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 17,
            "nesting_max": 5,
            "lines": 10
          }
        },
        {
          "name": "scaffold_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 20,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "search_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 22
          }
        },
        {
          "name": "validate_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 22,
            "nesting_max": 6,
            "lines": 18
          }
        }
      ],
      "classes": [
        {
          "name": "ScaffoldResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GeneratedFile",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ScaffoldError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SearchResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ValidationResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ValidationError",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/artifact_writer.rs",
      "total_complexity": {
        "cyclomatic": 95,
        "cognitive": 109,
        "nesting_max": 3,
        "lines": 263
      },
      "functions": [
        {
          "name": "ArtifactWriter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "ArtifactWriter::write_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "ArtifactWriter::create_directory_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "ArtifactWriter::write_mermaid_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "ArtifactWriter::write_template_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "ArtifactWriter::write_with_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "ArtifactWriter::write_manifest",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "ArtifactWriter::verify_integrity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "ArtifactWriter::get_statistics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "ArtifactWriter::cleanup_old_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 12,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "test_artifact_writer_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_directory_structure_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_atomic_write_with_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_artifact_tree_writing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_integrity_verification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_statistics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        }
      ],
      "classes": [
        {
          "name": "ArtifactWriter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ArtifactMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "VerificationReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "IntegrityFailure",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ArtifactStatistics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TypeStatistics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CleanupReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/git_analysis.rs",
      "total_complexity": {
        "cyclomatic": 38,
        "cognitive": 56,
        "nesting_max": 5,
        "lines": 122
      },
      "functions": [
        {
          "name": "GitAnalysisService::analyze_code_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "GitAnalysisService::get_file_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 19,
            "nesting_max": 5,
            "lines": 33
          }
        },
        {
          "name": "GitAnalysisService::parse_commit_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "GitAnalysisService::parse_numstat_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "GitAnalysisService::generate_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 9
          }
        }
      ],
      "classes": [
        {
          "name": "GitAnalysisService",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileStats",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CommitInfo",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/embedded_templates.rs",
      "total_complexity": {
        "cyclomatic": 58,
        "cognitive": 60,
        "nesting_max": 2,
        "lines": 36
      },
      "functions": [
        {
          "name": "convert_to_template_resource",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "parse_template_category",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "parse_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "convert_embedded_parameters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "convert_embedded_parameter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "parse_parameter_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "convert_json_value_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "build_s3_object_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "get_category_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "list_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "get_template_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 13,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "get_template_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 1,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "EmbeddedTemplateMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "EmbeddedParameter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/old_cache.rs",
      "total_complexity": {
        "cyclomatic": 2,
        "cognitive": 2,
        "nesting_max": 1,
        "lines": 18
      },
      "functions": [
        {
          "name": "get_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "put_metadata",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "get_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "put_content",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./src/services/ast_strategies.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 46
      },
      "functions": [
        {
          "name": "RustAstStrategy::analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RustAstStrategy::supports_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptAstStrategy::analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TypeScriptAstStrategy::supports_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JavaScriptAstStrategy::analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "JavaScriptAstStrategy::supports_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PythonAstStrategy::analyze",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PythonAstStrategy::supports_extension",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StrategyRegistry::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "StrategyRegistry::get_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StrategyRegistry::register_strategy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StrategyRegistry::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "RustAstStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TypeScriptAstStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "JavaScriptAstStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PythonAstStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "StrategyRegistry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/strategies.rs",
      "total_complexity": {
        "cyclomatic": 26,
        "cognitive": 48,
        "nesting_max": 6,
        "lines": 98
      },
      "functions": [
        {
          "name": "AstCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "AstCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 6,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "AstCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "TemplateCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 17,
            "nesting_max": 6,
            "lines": 11
          }
        },
        {
          "name": "DagCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ChurnCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ChurnCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "ChurnCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ChurnCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ChurnCacheStrategy::get_git_head",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitStatsCacheStrategy::cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "GitStatsCacheStrategy::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitStatsCacheStrategy::ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitStatsCacheStrategy::max_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitStatsCacheStrategy::get_current_branch",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "GitStatsCacheStrategy::get_git_head",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "AstCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TemplateCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DagCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ChurnCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GitStatsCacheStrategy",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GitStats",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/persistent_manager.rs",
      "total_complexity": {
        "cyclomatic": 18,
        "cognitive": 18,
        "nesting_max": 2,
        "lines": 70
      },
      "functions": [
        {
          "name": "PersistentCacheManager::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "PersistentCacheManager::with_default_dir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "PersistentCacheManager::default_cache_dir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "PersistentCacheManager::get_or_compute_ast",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "PersistentCacheManager::cleanup_expired",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PersistentCacheManager::clear",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PersistentCacheManager::get_diagnostics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 19
          }
        }
      ],
      "classes": [
        {
          "name": "PersistentCacheManager",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/manager.rs",
      "total_complexity": {
        "cyclomatic": 30,
        "cognitive": 32,
        "nesting_max": 3,
        "lines": 166
      },
      "functions": [
        {
          "name": "SessionCacheManager::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SessionCacheManager::get_or_compute_ast",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "SessionCacheManager::get_or_compute_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "SessionCacheManager::get_or_compute_dag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "SessionCacheManager::get_or_compute_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "SessionCacheManager::get_or_compute_git_stats",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "SessionCacheManager::memory_pressure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "SessionCacheManager::get_total_cache_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "SessionCacheManager::evict_if_needed",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 9
          }
        },
        {
          "name": "SessionCacheManager::clear_all",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "SessionCacheManager::invalidate_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "SessionCacheManager::invalidate_directory",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "SessionCacheManager::get_diagnostics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "SessionCacheManager::calculate_effectiveness",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 14
          }
        }
      ],
      "classes": [
        {
          "name": "SessionCacheManager",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/services/cache/content_cache.rs",
      "total_complexity": {
        "cyclomatic": 18,
        "cognitive": 20,
        "nesting_max": 3,
        "lines": 122
      },
      "functions": [
        {
          "name": "ContentCache::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ContentCache::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 5,
            "nesting_max": 3,
            "lines": 19
          }
        },
        {
          "name": "ContentCache::put",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "ContentCache::clear",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "ContentCache::evict_lru",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "ContentCache::len",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContentCache::is_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContentCache::estimate_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContentCache::metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ContentCache::hot_entries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "ContentCache::invalidate_matching",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "CacheMetrics::memory_mb",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ContentCache::clone",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "ContentCache",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/base.rs",
      "total_complexity": {
        "cyclomatic": 2,
        "cognitive": 2,
        "nesting_max": 1,
        "lines": 38
      },
      "functions": [
        {
          "name": "CacheEntry::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheEntry::access",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "CacheEntry::age",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheEntry::last_accessed_duration",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::record_hit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::record_miss",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::record_eviction",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::add_bytes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::remove_bytes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::hit_rate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "CacheStats::total_requests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::memory_usage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheStats::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "CacheEntry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheStats",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/diagnostics.rs",
      "total_complexity": {
        "cyclomatic": 16,
        "cognitive": 18,
        "nesting_max": 2,
        "lines": 54
      },
      "functions": [
        {
          "name": "CacheStatsSnapshot::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheDiagnosticReport::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "CacheDiagnosticReport::is_healthy",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "format_prometheus_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 24
          }
        }
      ],
      "classes": [
        {
          "name": "CacheDiagnostics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheStatsSnapshot",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheEffectiveness",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CacheDiagnosticReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/cache_trait.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./src/services/cache/config.rs",
      "total_complexity": {
        "cyclomatic": 16,
        "cognitive": 16,
        "nesting_max": 2,
        "lines": 38
      },
      "functions": [
        {
          "name": "CacheConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheConfig::from_env",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 12
          }
        },
        {
          "name": "CacheConfig::ast_ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheConfig::template_ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheConfig::dag_ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheConfig::churn_ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheConfig::git_stats_ttl",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CacheConfig::max_memory_bytes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "CacheConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/cache/persistent.rs",
      "total_complexity": {
        "cyclomatic": 84,
        "cognitive": 152,
        "nesting_max": 7,
        "lines": 258
      },
      "functions": [
        {
          "name": "PersistentCacheEntry::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "PersistentCacheEntry::age",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "PersistentCacheEntry::into_cache_entry",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "PersistentCache::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "PersistentCache::cache_file_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "PersistentCache::load_from_disk",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 16,
            "nesting_max": 3,
            "lines": 15
          }
        },
        {
          "name": "PersistentCache::load_cache_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 5,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "PersistentCache::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 19,
            "nesting_max": 5,
            "lines": 44
          }
        },
        {
          "name": "PersistentCache::put",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "PersistentCache::estimate_size",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PersistentCache::cleanup_expired",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 28,
            "nesting_max": 7,
            "lines": 22
          }
        },
        {
          "name": "PersistentCache::len",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PersistentCache::is_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PersistentCache::clear",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "PersistentCacheEntry",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "PersistentCache",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/defect_probability.rs",
      "total_complexity": {
        "cyclomatic": 57,
        "cognitive": 94,
        "nesting_max": 4,
        "lines": 184
      },
      "functions": [
        {
          "name": "DefectWeights::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefectProbabilityCalculator::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefectProbabilityCalculator::with_weights",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefectProbabilityCalculator::calculate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "DefectProbabilityCalculator::calculate_batch",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefectProbabilityCalculator::normalize_churn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DefectProbabilityCalculator::normalize_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DefectProbabilityCalculator::normalize_duplication",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DefectProbabilityCalculator::normalize_coupling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "DefectProbabilityCalculator::calculate_confidence",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "DefectProbabilityCalculator::generate_recommendations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 26,
            "nesting_max": 4,
            "lines": 21
          }
        },
        {
          "name": "interpolate_cdf",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "ProjectDefectAnalysis::from_scores",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 9,
            "nesting_max": 2,
            "lines": 21
          }
        },
        {
          "name": "ProjectDefectAnalysis::get_top_risk_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "DefectProbabilityCalculator::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_defect_probability_calculation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_cdf_interpolation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_project_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "DefectProbabilityCalculator",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefectWeights",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DefectScore",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectDefectAnalysis",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/renderer.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 79
      },
      "functions": [
        {
          "name": "TemplateRenderer::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "render_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_template_renderer_new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_render_template_simple",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_render_template_with_current_timestamp",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_render_template_with_helpers",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_render_template_missing_variable",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_render_template_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_render_template_with_conditionals",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_render_template_preserves_original_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        }
      ],
      "classes": [
        {
          "name": "TemplateRenderer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/dag_builder.rs",
      "total_complexity": {
        "cyclomatic": 110,
        "cognitive": 147,
        "nesting_max": 4,
        "lines": 194
      },
      "functions": [
        {
          "name": "DagBuilder::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagBuilder::build_from_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "DagBuilder::finalize_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 13,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "DagBuilder::build_from_project_with_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "DagBuilder::collect_nodes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 19
          }
        },
        {
          "name": "DagBuilder::process_relationships",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 15,
            "nesting_max": 4,
            "lines": 10
          }
        },
        {
          "name": "DagBuilder::add_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagBuilder::add_edge",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagBuilder::calculate_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "DagBuilder::enrich_node",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 10,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "DagBuilder::normalize_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagBuilder::path_to_module",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "DagBuilder::extract_module_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DagBuilder::resolve_import_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "DagBuilder::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "filter_call_edges",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "filter_import_edges",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "filter_inheritance_edges",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "prune_graph_pagerank",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 9,
            "nesting_max": 4,
            "lines": 17
          }
        }
      ],
      "classes": [
        {
          "name": "DagBuilder",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/canonical_query.rs",
      "total_complexity": {
        "cyclomatic": 56,
        "cognitive": 87,
        "nesting_max": 4,
        "lines": 91
      },
      "functions": [
        {
          "name": "SystemArchitectureQuery::query_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "SystemArchitectureQuery::execute",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "detect_architectural_components",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "infer_component_relationships",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 26,
            "nesting_max": 4,
            "lines": 17
          }
        },
        {
          "name": "aggregate_component_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 5,
            "nesting_max": 3,
            "lines": 17
          }
        },
        {
          "name": "generate_styled_architecture_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 16,
            "cognitive": 30,
            "nesting_max": 3,
            "lines": 18
          }
        },
        {
          "name": "sanitize_component_id",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "humanize_component_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "collect_component_nodes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "merge_coupled_components",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "calculate_graph_diameter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComponentEdgeType::clone",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "ComponentEdgeType::hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ComponentEdgeType::eq",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "AnalysisContext",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CallGraph",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CallNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "CallEdge",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "QueryResult",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "GraphMetadata",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "SystemArchitectureQuery",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Component",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComponentEdge",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ComponentMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/unified_ast_engine.rs",
      "total_complexity": {
        "cyclomatic": 172,
        "cognitive": 262,
        "nesting_max": 7,
        "lines": 358
      },
      "functions": [
        {
          "name": "LanguageParsers::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "LanguageParsers::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstForest::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstForest::add_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstForest::files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "AstForest::get",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FileAst::fmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "FileAst::root_visibility",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstEngine::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstEngine::generate_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "UnifiedAstEngine::parse_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "UnifiedAstEngine::collect_source_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 22,
            "nesting_max": 4,
            "lines": 13
          }
        },
        {
          "name": "UnifiedAstEngine::is_source_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 4
          }
        },
        {
          "name": "UnifiedAstEngine::parse_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 16,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "UnifiedAstEngine::parse_makefile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "UnifiedAstEngine::extract_dependencies",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 31,
            "nesting_max": 7,
            "lines": 18
          }
        },
        {
          "name": "UnifiedAstEngine::path_to_module_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstEngine::compute_node_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 16,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "UnifiedAstEngine::resolve_rust_imports",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "UnifiedAstEngine::compute_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "UnifiedAstEngine::generate_dogfooding_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "UnifiedAstEngine::generate_ast_context",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "UnifiedAstEngine::generate_combined_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "UnifiedAstEngine::generate_complexity_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "UnifiedAstEngine::generate_mermaid_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "UnifiedAstEngine::extract_embedded_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "UnifiedAstEngine::extract_rust_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 9
          }
        },
        {
          "name": "UnifiedAstEngine::compute_tree_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "UnifiedAstEngine::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_deterministic_artifact_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_path_to_module_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_is_source_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "UnifiedAstEngine",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "LanguageParsers",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "AstForest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ModuleNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ModuleMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ProjectMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ArtifactTree",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MermaidArtifacts",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Template",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/fixed_graph_builder.rs",
      "total_complexity": {
        "cyclomatic": 54,
        "cognitive": 74,
        "nesting_max": 5,
        "lines": 168
      },
      "functions": [
        {
          "name": "GraphConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FixedGraphBuilder::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FixedGraphBuilder::with_max_nodes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "FixedGraphBuilder::with_max_edges",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "FixedGraphBuilder::build",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "FixedGraphBuilder::group_by_module",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "FixedGraphBuilder::get_module_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 6
          }
        },
        {
          "name": "FixedGraphBuilder::calculate_pagerank",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 14,
            "nesting_max": 5,
            "lines": 26
          }
        },
        {
          "name": "FixedGraphBuilder::select_top_nodes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "FixedGraphBuilder::build_with_budget",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 16
          }
        },
        {
          "name": "create_test_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_deterministic_build",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_node_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": [
        {
          "name": "GraphConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FixedGraph",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FixedNode",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FixedGraphBuilder",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./src/services/ast_python.rs",
      "total_complexity": {
        "cyclomatic": 138,
        "cognitive": 155,
        "nesting_max": 3,
        "lines": 305
      },
      "functions": [
        {
          "name": "analyze_python_file_with_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "analyze_python_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "analyze_python_file_with_classifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 15,
            "nesting_max": 3,
            "lines": 18
          }
        },
        {
          "name": "extract_python_items",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 18,
            "cognitive": 26,
            "nesting_max": 3,
            "lines": 21
          }
        },
        {
          "name": "PythonComplexityVisitor::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PythonComplexityVisitor::enter_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "PythonComplexityVisitor::exit_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PythonComplexityVisitor::add_complexity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_function_def",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 5,
            "nesting_max": 3,
            "lines": 16
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_class_def",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_if_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_for_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_async_for_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_while_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_match_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_try_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 9,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_with_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "PythonComplexityVisitor::visit_async_with_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "PythonComplexityVisitor",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./build.rs",
      "total_complexity": {
        "cyclomatic": 60,
        "cognitive": 70,
        "nesting_max": 3,
        "lines": 150
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "verify_dependency_versions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "download_and_compress_assets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "setup_asset_directories",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "get_asset_definitions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "process_assets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "should_skip_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ensure_asset_downloaded",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "download_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "handle_download_failure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "compress_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "create_compressed_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "write_compressed_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 3
          }
        },
        {
          "name": "set_asset_hash_env",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "compress_templates",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 24
          }
        },
        {
          "name": "collect_template_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 8
          }
        },
        {
          "name": "read_template_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "serde_json_to_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "generate_hex_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "generate_template_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "minify_demo_assets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "minify_js_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "minify_css_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "copy_demo_asset",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "simple_js_minify",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "simple_css_minify",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "calculate_asset_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 12
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/demo_integration.rs",
      "total_complexity": {
        "cyclomatic": 22,
        "cognitive": 22,
        "nesting_max": 2,
        "lines": 49
      },
      "functions": [
        {
          "name": "test_demo_mode_in_current_directory",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_demo_mode_with_json_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_demo_mode_with_specific_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_demo_increases_test_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 18
          }
        },
        {
          "name": "test_demo_runner_execution",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_repository_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/export_integration.rs",
      "total_complexity": {
        "cyclomatic": 7,
        "cognitive": 7,
        "nesting_max": 0,
        "lines": 130
      },
      "functions": [
        {
          "name": "create_test_export_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "create_test_churn_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_markdown_export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 24
          }
        },
        {
          "name": "test_json_export_pretty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_json_export_compact",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_sarif_export",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 19
          }
        },
        {
          "name": "test_export_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_export_service_save_to_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 17
          }
        },
        {
          "name": "test_create_export_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 25
          }
        },
        {
          "name": "test_export_without_optional_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/enhanced_dag_integration.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 33
      },
      "functions": [
        {
          "name": "test_enhanced_dag_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_enhanced_analysis_backward_compatibility",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_enhanced_flags_combinations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_enhanced_dag_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/mermaid_empty_bug_fix_test.rs",
      "total_complexity": {
        "cyclomatic": 9,
        "cognitive": 9,
        "nesting_max": 2,
        "lines": 54
      },
      "functions": [
        {
          "name": "test_regression_empty_nodes_bug",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 16
          }
        },
        {
          "name": "test_mermaid_label_escaping",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_node_types_have_labels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_complexity_styled_diagram_has_labels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_empty_graph_doesnt_crash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_special_characters_in_node_ids",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 11
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/cli_documentation_sync.rs",
      "total_complexity": {
        "cyclomatic": 50,
        "cognitive": 75,
        "nesting_max": 4,
        "lines": 136
      },
      "functions": [
        {
          "name": "parse_documented_cli_commands",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 18,
            "nesting_max": 4,
            "lines": 30
          }
        },
        {
          "name": "parse_cli_help_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 10,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "get_binary_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "test_cli_commands_match_documentation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "test_cli_subcommands_match_documentation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 5,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "test_cli_options_match_documentation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 4,
            "lines": 13
          }
        },
        {
          "name": "test_no_undocumented_commands",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "test_documentation_examples_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 16,
            "cognitive": 27,
            "nesting_max": 4,
            "lines": 37
          }
        }
      ],
      "classes": [
        {
          "name": "DocumentedCommand",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./tests/config_integration.rs",
      "total_complexity": {
        "cyclomatic": 13,
        "cognitive": 13,
        "nesting_max": 0,
        "lines": 68
      },
      "functions": [
        {
          "name": "test_config_loading_from_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_config_hot_reload",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 21
          }
        },
        {
          "name": "test_config_default_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_config_accessor_methods",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_invalid_config_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/demo_web_integration.rs",
      "total_complexity": {
        "cyclomatic": 10,
        "cognitive": 14,
        "nesting_max": 2,
        "lines": 107
      },
      "functions": [
        {
          "name": "test_demo_server_startup_and_shutdown",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "test_demo_server_api_endpoints",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 33
          }
        },
        {
          "name": "test_demo_server_static_assets",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_demo_server_concurrent_requests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "test_demo_server_response_headers",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_demo_content_rendering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_demo_server_starts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_demo_content_from_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/determinism_tests.rs",
      "total_complexity": {
        "cyclomatic": 27,
        "cognitive": 27,
        "nesting_max": 2,
        "lines": 195
      },
      "functions": [
        {
          "name": "test_unified_ast_engine_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_mermaid_generation_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "test_dogfooding_engine_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 26
          }
        },
        {
          "name": "test_artifact_writer_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_pagerank_numerical_stability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_hash_collision_resistance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "test_file_ordering_stability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 18
          }
        },
        {
          "name": "test_edge_case_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_concurrent_generation_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "create_test_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "create_test_dependency_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "create_large_test_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 16
          }
        },
        {
          "name": "create_single_node_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "create_cyclic_graph",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "create_test_artifact_tree",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "compute_tree_hash",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "normalize_manifest",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/mcp_documentation_sync.rs",
      "total_complexity": {
        "cyclomatic": 35,
        "cognitive": 57,
        "nesting_max": 5,
        "lines": 114
      },
      "functions": [
        {
          "name": "parse_documented_mcp_tools",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 16,
            "nesting_max": 5,
            "lines": 19
          }
        },
        {
          "name": "get_binary_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "send_mcp_request",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 2,
            "lines": 22
          }
        },
        {
          "name": "test_mcp_tools_match_documentation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "test_mcp_tool_schemas_match_documentation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 18,
            "nesting_max": 5,
            "lines": 18
          }
        },
        {
          "name": "test_mcp_methods_match_documentation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "test_mcp_error_codes_are_complete",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "test_no_undocumented_mcp_tools",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 13
          }
        }
      ],
      "classes": [
        {
          "name": "DocumentedTool",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "McpResponse",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ToolDefinition",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./tests/generate_mermaid_test.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 19
      },
      "functions": [
        {
          "name": "generate_test_mermaid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 19
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/mermaid_artifact_tests.rs",
      "total_complexity": {
        "cyclomatic": 61,
        "cognitive": 71,
        "nesting_max": 6,
        "lines": 148
      },
      "functions": [
        {
          "name": "ArtifactCategory::path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "get_artifact_specs",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "generate_simple_architecture",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "generate_styled_workflow",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "generate_ast_simple",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "generate_ast_styled",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "validate_simple_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "validate_styled_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "validate_ast_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "validate_complexity_styled",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_generate_all_artifacts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 2,
            "lines": 17
          }
        },
        {
          "name": "test_maintain_mermaid_readme",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 17,
            "nesting_max": 6,
            "lines": 53
          }
        },
        {
          "name": "format_category_title",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "analyze_diagram_metrics",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "calculate_graph_depth",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "MermaidArtifactSpec",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DiagramMetrics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./tests/execution_mode.rs",
      "total_complexity": {
        "cyclomatic": 4,
        "cognitive": 4,
        "nesting_max": 1,
        "lines": 45
      },
      "functions": [
        {
          "name": "detect_execution_mode_test",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_execution_mode_detection_with_mcp_version",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_execution_mode_detection_without_mcp_version",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_env_filter_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_server_creation_logic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_mcp_version_environment_variable",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_argument_count_behavior",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_async_runtime_setup",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_tracing_initialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_terminal_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_error_handling_setup",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/services_integration.rs",
      "total_complexity": {
        "cyclomatic": 4,
        "cognitive": 4,
        "nesting_max": 1,
        "lines": 107
      },
      "functions": [
        {
          "name": "test_execution_mode_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_cli_run_generate_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_ast_rust_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_complexity_service",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 21
          }
        },
        {
          "name": "test_dag_builder",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_mcp_handlers",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 24
          }
        },
        {
          "name": "test_binary_main_logic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_cli_functions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_ast_error_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/demo_core_extraction.rs",
      "total_complexity": {
        "cyclomatic": 23,
        "cognitive": 23,
        "nesting_max": 1,
        "lines": 69
      },
      "functions": [
        {
          "name": "test_demo_runner_as_library",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_config_manager_as_library",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_export_service_as_library",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_programmatic_demo_with_custom_config",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_export_formats_discovery",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_end_to_end_library_usage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 17
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/documentation_examples.rs",
      "total_complexity": {
        "cyclomatic": 49,
        "cognitive": 58,
        "nesting_max": 4,
        "lines": 121
      },
      "functions": [
        {
          "name": "get_binary_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "test_cli_examples_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "process_bash_code_block",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "should_skip_line",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "has_complex_shell_features",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_non_toolkit_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "handle_multiline_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "validate_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "validate_binary_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "validate_command_arguments",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_mcp_json_examples_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "validate_json_block",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "validate_parsed_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "validate_json_rpc_object",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "validate_json_array_fallback",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "validate_batch_request_array",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_yaml_examples_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "test_jsonc_examples_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 15,
            "nesting_max": 4,
            "lines": 11
          }
        },
        {
          "name": "test_template_uri_examples_are_valid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "test_performance_numbers_are_reasonable",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/demo_e2e_integration.rs",
      "total_complexity": {
        "cyclomatic": 89,
        "cognitive": 108,
        "nesting_max": 4,
        "lines": 235
      },
      "functions": [
        {
          "name": "DemoServer::spawn",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "DemoServer::parse_port_from_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 12,
            "nesting_max": 4,
            "lines": 16
          }
        },
        {
          "name": "DemoServer::wait_for_server_ready",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 9
          }
        },
        {
          "name": "DemoServer::url",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "DemoServer::drop",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "create_test_repository",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 11,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_demo_server_happy_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 15
          }
        },
        {
          "name": "test_api_contract_compliance",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 13,
            "nesting_max": 2,
            "lines": 33
          }
        },
        {
          "name": "test_concurrent_requests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "test_performance_assertions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 17
          }
        },
        {
          "name": "test_error_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_analysis_pipeline_integrity",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 11,
            "nesting_max": 4,
            "lines": 29
          }
        },
        {
          "name": "test_data_source_indicators",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_mermaid_diagram_rendering",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 0,
            "lines": 13
          }
        }
      ],
      "classes": [
        {
          "name": "DemoServer",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./tests/complexity_metrics.rs",
      "total_complexity": {
        "cyclomatic": 1,
        "cognitive": 1,
        "nesting_max": 1,
        "lines": 96
      },
      "functions": [
        {
          "name": "test_complexity_metrics_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_complexity_metrics_default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_function_complexity_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_class_complexity_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_file_complexity_metrics_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_compute_complexity_cache_key",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_aggregate_results_empty",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_aggregate_results_with_data",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_format_complexity_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_format_complexity_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_format_as_sarif",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_stateless_template_server_creation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_stateless_template_server_basic_operations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_various_helper_functions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 22
          }
        },
        {
          "name": "test_error_handling_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/cli_comprehensive_integration.rs",
      "total_complexity": {
        "cyclomatic": 12,
        "cognitive": 13,
        "nesting_max": 3,
        "lines": 136
      },
      "functions": [
        {
          "name": "test_generate_makefile_e2e",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "test_generate_missing_required_params",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_generate_invalid_template_uri",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_generate_to_stdout",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_scaffold_parallel_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_list_json_output_schema",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 3,
            "lines": 14
          }
        },
        {
          "name": "test_list_table_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_list_yaml_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_list_filtered_by_toolchain",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_list_filtered_by_category",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_search_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_search_with_limit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_search_with_toolchain_filter",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_validate_success",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_validate_missing_required",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_context_generation_rust",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_context_markdown_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_analyze_churn_json_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "test_analyze_churn_csv_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_analyze_complexity_summary",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_analyze_complexity_sarif_format",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "test_analyze_dag_mermaid_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_error_propagation_and_codes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_help_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_version_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_subcommand_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_analyze_subcommand_help",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_environment_variable_expansion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_mode_flag_cli",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        }
      ],
      "classes": [
        {
          "name": "ErrorCase",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./tests/ast_dag_mermaid_pipeline.rs",
      "total_complexity": {
        "cyclomatic": 4,
        "cognitive": 4,
        "nesting_max": 1,
        "lines": 120
      },
      "functions": [
        {
          "name": "create_test_rust_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_ast_to_dag_metadata_propagation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 32
          }
        },
        {
          "name": "test_pipeline_determinism",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 23
          }
        },
        {
          "name": "test_pipeline_with_complex_project",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_edge_budget_enforcement",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "test_individual_file_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_mermaid_output_quality",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_metadata_serialization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/bin_integration.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 42
      },
      "functions": [
        {
          "name": "test_binary_version_flag",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_binary_json_rpc_initialize",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_binary_invalid_json",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_binary_multiple_requests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 16
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./tests/generate_mermaid_example.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 37
      },
      "functions": [
        {
          "name": "generate_example_mermaid_diagram",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 37
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./benches/critical_path.rs",
      "total_complexity": {
        "cyclomatic": 13,
        "cognitive": 16,
        "nesting_max": 2,
        "lines": 77
      },
      "functions": [
        {
          "name": "benchmark_cli_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "benchmark_template_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 22
          }
        },
        {
          "name": "benchmark_dag_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 30
          }
        },
        {
          "name": "benchmark_context_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 13
          }
        }
      ],
      "classes": []
    }
  ]
}
