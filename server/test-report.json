{
  "metadata": {
    "project_name": "",
    "project_path": ".",
    "report_date": "2025-07-04T03:25:46.489871759+00:00",
    "tool_version": "0.26.2",
    "analysis_duration": 0.027610068,
    "analyzed_files": 344,
    "total_lines": 149513
  },
  "executive_summary": {
    "overall_health_score": 100.0,
    "critical_issues": 0,
    "high_priority_issues": 0,
    "key_findings": [
      "Found 10 functions with high complexity (CC > 20)"
    ],
    "risk_assessment": "Low"
  },
  "sections": [
    {
      "title": "Code Complexity Analysis",
      "section_type": "Complexity",
      "content": {
        "distribution": [
          30,
          40,
          20,
          7,
          3
        ],
        "functions": 100,
        "high_complexity_functions": 10,
        "max_cyclomatic": 25,
        "total_cognitive": 800,
        "total_cyclomatic": 500
      },
      "metrics": {
        "average_cyclomatic": {
          "value": 5.0,
          "unit": "CC/function",
          "trend": "Unknown",
          "threshold": 10.0
        },
        "total_cyclomatic": {
          "value": 500.0,
          "unit": "CC",
          "trend": "Unknown",
          "threshold": 100.0
        }
      },
      "findings": [
        {
          "severity": "High",
          "category": "Complexity",
          "description": "Maximum cyclomatic complexity of 25 detected",
          "location": null,
          "impact": "High complexity increases maintenance cost and bug risk",
          "effort": "Medium"
        }
      ]
    }
  ],
  "recommendations": [
    {
      "priority": "High",
      "category": "Complexity",
      "title": "Refactor high-complexity functions",
      "description": "Functions with cyclomatic complexity > 20 should be decomposed into smaller, more manageable units",
      "expected_impact": "Improved maintainability and reduced bug risk",
      "effort": "Medium",
      "related_findings": [
        "high_complexity"
      ]
    }
  ],
  "visualizations": []
}