[package]
name = "paiml-mcp-agent-toolkit"
version = "0.22.0"
edition = "2021"
rust-version = "1.80.0"
authors = ["Pragmatic AI Labs"]
description = "MCP server for project scaffolding and template generation"
homepage = "https://paiml.com"
repository = "https://github.com/paiml/paiml-mcp-agent-toolkit"

[dependencies]
# Async runtime
tokio = { version = "1.45", features = ["rt-multi-thread", "macros", "net", "io-util", "io-std", "fs", "sync", "signal"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", default-features = false, features = ["derive", "std"] }
serde_json = { version = "1.0", default-features = false, features = ["std"] }

# Template engine
handlebars = { version = "6.3", default-features = false, features = ["string_helpers"] }

# Caching
lru = { version = "0.14", features = ["hashbrown"] }

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Logging
tracing = { version = "0.1", default-features = false, features = ["std"] }
tracing-subscriber = { version = "0.3", default-features = false, features = ["env-filter", "fmt", "std"] }

# Utilities
sha2 = "0.10"
once_cell = "1.21"
lazy_static = "1.5"
semver = { version = "1.0", features = ["serde"] }
regex = { version = "1.11", features = ["perf"] }
chrono = { version = "0.4", features = ["serde"] }
hex = "0.4"
uuid = { version = "1.17", features = ["v4", "serde"] }
parking_lot = "0.12"
dirs = "6.0"
roaring = "0.10"
rand = "0.9"
rayon = "1.10"
git2 = { version = "0.20", default-features = false, features = ["https"] }

# Storage
# rocksdb = { version = "0.22", default-features = false, features = ["zstd"] }
bincode = "1.3"

# Async utilities
futures = "0.3"

# File watching for configuration hot-reload
notify = "8.0"

# CLI support
clap = { version = "4.5", default-features = false, features = ["std", "derive", "help", "env"] }
num_cpus = "1.17"
serde_yaml = "0.9"
atty = "0.2"

# AST parsing (conditional compilation)
syn = { version = "2.0", features = ["full", "parsing", "visit"], optional = true }
quote = { version = "1.0", optional = true }
proc-macro2 = { version = "1.0", optional = true }
walkdir = "2.5"
ignore = "0.4"
toml = "0.8"
crossbeam-channel = "0.5"
# For TypeScript/JavaScript parsing (conditional) - use compatible versions
swc_ecma_parser = { version = "0.145", optional = true }
swc_common = { version = "0.33", optional = true }
swc_ecma_ast = { version = "0.114", optional = true }
swc_ecma_visit = { version = "0.100", optional = true }
# For Python parsing (conditional)
rustpython-parser = { version = "0.4", optional = true }
# For C/C++ parsing (conditional)
tree-sitter = { version = "0.23", optional = true }
tree-sitter-c = { version = "0.21", optional = true }
tree-sitter-cpp = { version = "0.22", optional = true }

# Language-specific analysis
cpp_demangle = { version = "0.4", optional = true }
gimli = { version = "0.31", optional = true }
goblin = { version = "0.7", optional = true }
# Analysis infrastructure for C/C++
fixedbitset = { version = "0.4", optional = true }
rustc-hash = { version = "1.1" }

# Installer generation
# installer-macro = { path = "../installer-macro" } # Removed - using simple include_str! instead
blake3 = "1.8"
xxhash-rust = { version = "0.8", features = ["xxh64"] }

# Demo/reporting mode dependencies (included by default)
webbrowser = "1.0"
bytes = "1.10"
http = "1.3"
httparse = "1.10"
dashmap = "6.1"
flate2 = "1.1"
smallvec = "1.15.0"

# Unified protocol support
axum = { version = "0.8", default-features = false, features = ["json", "tokio", "http1", "query"] }
tower = { version = "0.5", default-features = false, features = ["util", "timeout"] }
tower-http = { version = "0.6", default-features = false, features = ["fs", "trace", "compression-gzip", "timeout", "cors"] }
hyper = { version = "1.6", default-features = false, features = ["http1", "server", "client"] }
hyper-util = { version = "0.1", default-features = false, features = ["tokio", "server", "client"] }
http-body-util = "0.1"

# Graph analysis
petgraph = "0.8"

# Markdown parsing
pulldown-cmark = "0.13"

# TUI support
ratatui = { version = "0.29", optional = true }
crossterm = { version = "0.29", optional = true }
sys-info = "0.9.1"

[dev-dependencies]
mockall = "0.13"
tokio-test = "0.4"
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
pretty_assertions = "1.4"
tempfile = "3.20"
criterion = { version = "0.6", features = ["html_reports"] }
proptest = "1.6"
assert_cmd = "2.0"
predicates = "3.1"
scraper = "0.23"
serial_test = "3.2"
quickcheck = "1.0"
quickcheck_macros = "1.1"

[build-dependencies]
ureq = "3.0"
flate2 = "1.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
hex = "0.4"

[features]
default = ["rust-only"]
all-languages = ["rust-ast", "python-ast", "c-ast", "cpp-ast"]
rust-only = ["rust-ast"]
rust-ast = ["syn", "quote", "proc-macro2"]
typescript-ast = ["rust-ast", "swc_ecma_parser", "swc_common", "swc_ecma_ast", "swc_ecma_visit"]
python-ast = ["rust-ast", "rustpython-parser"]
c-ast = ["tree-sitter", "tree-sitter-c", "fixedbitset"]
cpp-ast = ["c-ast", "tree-sitter-cpp", "cpp_demangle", "gimli", "goblin"]
# Feature to exclude demo/reporting functionality for minimal builds
no-demo = []
# TUI mode support
tui = ["ratatui", "crossterm"]
# Integration tests feature
integration-tests = []
syn = ["dep:syn"]


[[bin]]
name = "pmat"
path = "src/bin/pmat.rs"

# [[bin]]
# name = "generate-installer"
# path = "src/bin/generate-installer.rs"
# required-features = ["installer-gen"]

[[bench]]
name = "critical_path"
harness = false

[[bench]]
name = "performance"
harness = false

[profile.release]
lto = true
codegen-units = 1
